{"dd615ebe7ff33807313a4cd378d9ce46ad1f7f41":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1000005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> sv<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> to <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addcons</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vx</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vy</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">sat2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>假定为真的dfs之前清空记录\n</span>        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span>d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>d</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addcons</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span>d</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">sat2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>POSSIBLE<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>IMPOSSIBLE<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","5d83266e476d4095edcf43e1ef6f28d745ef65f2":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">hoabs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">twosat</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> sv<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> to <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">vis<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> vis</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>v <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addcons</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vx</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">sat2</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>ts<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">N</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>k</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">hoabs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> x<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">addcons</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">sat2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">solve</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2e7</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> l<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    \n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">~</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tb<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> tb</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">solve</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","d9bed1905910e510d078d96ca6e19b3a92aef350":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install openssh-server</span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install net-tools</span>\n</span></code></pre>","5802942f829edd5db56290f1aa50bae93a8e4146":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">wget</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh</span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sh</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> ./Anaconda3-2020.02-Linux-x86_64.sh</span>\n</span></code></pre>","7fe89e9c0e68fbc5187950d96af35ff96b7c8486":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-storage hl-modifier hl-shell\">export</span> <span class=\"hl-variable hl-other hl-readwrite hl-assignment hl-shell\">PATH</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-meta hl-group hl-expansion hl-tilde\"><span class=\"hl-variable hl-language hl-tilde hl-shell\">~</span></span>/anaconda3/bin:<span class=\"hl-meta hl-group hl-expansion hl-parameter hl-shell\"><span class=\"hl-punctuation hl-definition hl-variable hl-shell\">$</span><span class=\"hl-variable hl-other hl-readwrite hl-shell\">PATH</span></span></span></span>\n</span></code></pre>","e610f6bd9d37af3c4ae86929dfdd29a068ef8b7b":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt-get install npm nodejs-legacy</span>\n</span></code></pre>","9d3e1abe57b1cb099b2106a63a0545a6847caae9":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install npm</span>\n</span></code></pre>","3c322bce57c5bbb5297f3698b622cce991039930":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>h</span></span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">configurable-http-proxy</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>h</span></span>\n</span></code></pre>","89c6f1fd4a6eeeb1e05cf83445676cbbadadd8f9":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span>\n</span></code></pre>","ef42b2a605a25cf8cb4450c5638c04fb54dd1339":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> --</span>generate-config</span></span>\n</span></code></pre>","4328ede6459b11f4e4f8345d9f51bbd619466feb":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> jupyterhub<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> --</span>generate-config</span></span>\n</span></code></pre>","81c21540b4ea263a4629a9009574110bcdae2ae1":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-support hl-function hl-alias hl-shell\">alias</span> <span class=\"hl-entity hl-name hl-function hl-alias hl-shell\">sudo</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-string hl-quoted hl-single hl-shell\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-shell\">&#39;</span>sudo env PATH=$PATH<span class=\"hl-punctuation hl-definition hl-string hl-end hl-shell\">&#39;</span></span></span></span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-storage hl-modifier hl-shell\">export</span> <span class=\"hl-variable hl-other hl-readwrite hl-assignment hl-shell\">PATH</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-meta hl-group hl-expansion hl-tilde\"><span class=\"hl-variable hl-language hl-tilde hl-shell\">~</span></span>/anaconda3/bin:<span class=\"hl-meta hl-group hl-expansion hl-parameter hl-shell\"><span class=\"hl-punctuation hl-definition hl-variable hl-shell\">$</span><span class=\"hl-variable hl-other hl-readwrite hl-shell\">PATH</span></span></span></span>\n</span></code></pre>","1a7569b14a2d180c6a44d51842efe5d356a22574":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-support hl-function hl-source hl-shell\">source</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> /etc/bash.bashrc</span>\n</span></code></pre>","e7ae806d50be678e2932aee16a4cc4987e44f33a":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> chmod 777 /etc/jupyterhub</span>\n</span></code></pre>","6b681dcd0e8546f0455a0bb7b54f854aa9d885ac":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">adduser</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> kasumi</span>\n</span></code></pre>","9b83789f641e61166d3200b1fa4e68769ed5f584":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> jupyterhub<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>f</span> /etc/jupyterhub/jupyterhub_config.py</span>\n</span></code></pre>","c4624fe303301bd1816d0273ffea1069d13f7b3e":"<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">conda</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> install xeus-cling<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>c</span> conda-forge</span>\n</span></code></pre>","60b9a63b52245a08533d706bf373dce6490f0c57":"<pre><code><span class=\"hl-text hl-plain\">\nimport numpy\nimport matplotlib.pyplot as plt\nfrom pandas import read_csv\nimport math\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom keras import backend as K\nimport os\n# load the dataset\nos.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;0&quot;\ndataframe = read_csv(&#39;xian_tianqi.csv&#39;, usecols=[1], engine=&#39;python&#39;)\n\nimport tensorflow as tf\nfrom keras.backend.tensorflow_backend import set_session\n\nconfig = tf.ConfigProto()\nconfig.gpu_options.allocator_type = &#39;BFC&#39; #A &quot;Best-fit with coalescing&quot; algorithm, simplified from a version of dlmalloc.\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.8\nconfig.gpu_options.allow_growth = True\nset_session(tf.Session(config=config))\n\ndataset = dataframe.values\n\n# 将整型变为float\ndataset = dataset.astype(&#39;float32&#39;)\n\nlook_back = 1000\nprint(dataset[len(dataset)-look_back:(len(dataset)), 0])\n# X is the number of passengers at a given time (t) and Y is the number of passengers at the next time (t + 1).\n\n# convert an array of values into a dataset matrix\ndef create_dataset(dataset, look_back=1):\n    dataX, dataY = [], []\n    for i in range(len(dataset)-look_back-1):\n        a = dataset[i:(i+look_back), 0]\n        dataX.append(a)\n        dataY.append(dataset[i + look_back, 0])\n\n    return numpy.array(dataX), numpy.array(dataY)\n\n# fix random seed for reproducibility\nnumpy.random.seed(7)\n# normalize the dataset\n\nscaler = MinMaxScaler(feature_range=(0, 1))\ndataset = scaler.fit_transform(dataset)\n\n\n# split into train and test sets\ntrain_size = int(len(dataset))\ntrain = dataset[0:train_size,:]\n# use this function to prepare the train and test datasets for modeling\ntrainX , trainY= create_dataset(train, look_back)\n\n\ndef XL():\n    # create and fit the LSTM network\n    model = Sequential()\n    model.add(LSTM(128, input_shape=(look_back,1)))\n    model.add(Dense(1))\n    model.compile(loss=&#39;mae&#39;, optimizer=&#39;adam&#39;)\n    model.fit(trainX, trainY, epochs=40, batch_size=256, verbose=2)\n    return model\nttr = trainX[trainX.shape[0]-1]\ntty = []\nfutu = 100\nwith open(&quot;tqyb.honoka&quot;,&quot;w&quot;) as f:\n    f.write(&quot;2019/10/18\\r\\n&quot;)\n    for i in range(futu):\n        trainX = numpy.reshape(trainX, (trainX.shape[0], look_back,1))\n        if(i % look_back == 0):\n            model = XL()\n        ttr = numpy.reshape(ttr,(1,look_back,1))\n        tty = model.predict(ttr)\n\n        #print(trainX.shape[0],trainX.shape[1])\n        ttr = ttr[0][1:look_back].reshape(look_back-1).tolist() + tty[0].tolist()\n\n        trainX = numpy.reshape(trainX, (trainX.shape[0], look_back))\n        trainX = numpy.vstack((trainX,ttr))\n        #print(tty,trainY)\n        trainY = numpy.reshape(trainY, (trainY.shape[0], 1))\n        trainY = numpy.vstack((trainY,tty))\n\n        print(scaler.inverse_transform(tty))\n        f.write(&quot;i=&quot;+str(i) + &quot;   &quot; + str(scaler.inverse_transform(tty)[0][0]) + &#39;\\r\\n&#39;)\n\n#max(trainY.shape[0]-3*futu,0)\nplt.plot(scaler.inverse_transform(trainY[0:trainY.shape[0]]),color=&quot;#FDA423&quot;)\nplt.plot(scaler.inverse_transform(trainY[0:trainY.shape[0]-futu]),color=&quot;#808080&quot;,linestyle=&quot;--&quot;)\nplt.savefig(&quot;op.png&quot;)\nplt.show()\n\n</span></code></pre>","3d3099097c7d0c913e6b08562d54ae0bbd19446e":"<pre><code><span class=\"hl-text hl-plain\">.\\mingw-get.exe install gcc g++ gdb mingw32-make\n</span></code></pre>","1c415b54cd7c6bd91a681d6adb65a8f0e96d55b4":"<pre><code><span class=\"hl-text hl-plain\">#需要的最低cmake版本\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6)\n#项目名称\nPROJECT(GGZKA)\n#把当前目录(.)下所有源代码文件和头文件加入变量SRC_LIST\nAUX_SOURCE_DIRECTORY(. SRC_LIST)\n#生成应用程序 hello (在windows下会自动生成hello.exe)\nADD_EXECUTABLE(ggzka ${SRC_LIST})\n</span></code></pre>","3ab47b827802cb64cc48ab0860052f22a8b57023":"<pre><code><span class=\"hl-text hl-plain\">mingw32-make\n</span></code></pre>","c3b5dd07ac4c53eab7c8f6ec01219241200c896d":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>\n</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Created by Orange_Cheers on 2022/1/1.\n</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>\n</span>\n<span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">mul</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">add</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> lovelive <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">const</span> lovelive mod <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1e9</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">7</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span> M<span class=\"hl-punctuation hl-separator hl-c++\">,</span> stx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> sty<span class=\"hl-punctuation hl-separator hl-c++\">,</span> edx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> edy<span class=\"hl-punctuation hl-separator hl-c++\">,</span> P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nlovelive <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">ksm</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\">lovelive <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> lovelive <span class=\"hl-variable hl-parameter hl-c++\">k</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    lovelive ha <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span> k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span><span class=\"hl-constant hl-numeric hl-c++\">2</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span> a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span> ha</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-modifier hl-c++\">const</span> lovelive inv100 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">100</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> mod<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    cin<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">tie</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-language hl-c++\">nullptr</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ios<span class=\"hl-punctuation hl-accessor hl-c++\">::</span></span><span class=\"hl-variable hl-function hl-c++\">sync_with_stdio</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-language hl-c\">false</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>T<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> stx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> sty <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> edx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> edy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span> y<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        x <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> stx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> y <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> sty<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> sdx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> sdy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-modifier hl-c++\">static</span> vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span>lovelive<span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> edx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> edy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cnt</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            x <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> dx<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            y <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            cnt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> stx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sty <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sdx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sdy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cnt</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive np <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">add</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">v<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>np</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> np<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-separator hl-c++\">,</span> mod<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            np <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">np<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">P<span class=\"hl-punctuation hl-separator hl-c++\">,</span> inv100</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span> mod</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","ed89084a89cf15a375c1f0c016358376bb1ccf38":"<pre><code><span class=\"hl-text hl-plain\">import numpy as np\n\n\n\ndatax = [0.50,0.75,1.00,1.25,1.50,1.75,1.75,2.00,2.25,2.50,2.75,3.00,3.25,3.50,4.00,4.25,4.50,4.75,5.00,5.50]\ndatay = [10,  22,  13,  43,  20,  22,  33,  50,  62,  48,  55,  75,  62,  73,  81,  76,  64,  82,  90,  93]\nn = 1\nm = len(datax)\n\n\ntrainx = np.zeros((m,n+1))\ntrainy = np.zeros((m,1))\ndef calch(t):\n\treturn np.dot(trainx,t)\n\ndef calcJ(t):\n\tloss = calch(t) -trainy\n\tloss = np.dot(loss.T,loss)\n\treturn loss/(2*m)\n\ndef calcJd(t):\n\tlossd = 0\n\tlossd = np.dot(trainx.T,np.dot(trainx,t) - trainy)\n\n\treturn lossd/m\n\n\n\ndef init():\n\tglobal trainx\n\tglobal trainy\n\tfor i in range(m):\n\t\ttrainx[i] = [1,datax[i]]\n\t\ttrainy[i] = datay[i]\n\treturn \n\n\nlearning_rate = 0.001\ndef gradient_descent(t):\n\ttt = t - learning_rate * calcJd(t)\n\t#print(t0,t1,calcJ(tt0,tt1))\n\treturn tt\n\nprint(datax)\ninit()\n\nt = np.zeros((2,1))\nfor i in range(1,100000):\n\tt = gradient_descent(t)\n\tprint(t)\n\nprint(t)\n\n\n</span></code></pre>","d2ec10627d7ecce2adb18509c0c3e7c399c1d571":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>优化这个循环\n</span>    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">maxx<span class=\"hl-punctuation hl-separator hl-c++\">,</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-ternary hl-c\">?</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span>maxx<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>","0350b9b2a7bed533edcbe9a72fc82b016ccba4f1":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>r<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\ntemp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">maxx</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>","b959a50f370925c1679b975e72375228bcc5b5dc":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> UNLOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">critical_section</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\"> </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n<span class=\"hl-entity hl-name hl-label hl-c\">retry</span><span class=\"hl-punctuation hl-separator hl-c\">:</span>\n  <span class=\"hl-keyword hl-control hl-c++\">if</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>locked <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> UNLOCK<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-keyword hl-control hl-c++\">goto</span> retry<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n  locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n  <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> critical section\n</span>\n  locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> UNLOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","ce90d5e19176d099eb83ecb6a731e51411f389d7":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y<span class=\"hl-punctuation hl-separator hl-c++\">,</span>n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> n <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-storage hl-type hl-c\">int</span> ma1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-storage hl-type hl-c\">int</span> ma2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ma1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ma2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> k <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> \n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","c335910d22e0d0fee4170efef7da85a8501d7c2c":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y<span class=\"hl-punctuation hl-separator hl-c++\">,</span>n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> n <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> j <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> k<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> ma1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> ma2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ma1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ma2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> k <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> \n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">复杂度O</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">n<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">3</span></span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n</span></code></pre>","84cca8e2aa6760621f8ce53d2b67e5f512b5a52a":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cmath<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">999999999</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> nce <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> ncity<span class=\"hl-punctuation hl-separator hl-c++\">,</span>op<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> fp<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">City</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-storage hl-type hl-c\">double</span> ft<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">double</span> x<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">double</span> y<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>c <span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">mymin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">d</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">sqrt</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">is90</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x3</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y3</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x3<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x2<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y3<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y2<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> nce<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ncc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ncc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> nce<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ncc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> ncity <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> fp <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> op <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ft</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>get the forth point (Vector)\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-storage hl-type hl-c\">double</span> midx<span class=\"hl-punctuation hl-separator hl-c++\">,</span>midy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; c[i].x[3] &lt;&lt; &quot; &quot; &lt;&lt;  c[i].y[3] &lt;&lt; endl;\n</span>            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>init\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ic <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ip <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> jc<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> ip<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ft</span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">d</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fp <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">d</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; e[ic][ip][jc][jp] &lt;&lt; endl;\n</span>                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>floyd\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> kc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> kp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ic <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ip <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mymin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> oi <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>oi <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>oi<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ei <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ei <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ei<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mymin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>op<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>oi<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ei<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%.1lf</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>","f9eb1fc1c26d03e9cd6a6c8d808e036ff43d3756":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">200005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">55</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>K<span class=\"hl-punctuation hl-separator hl-c++\">,</span>P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>sgn\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> P<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">else</span> sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>r\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ts<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> ts</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">nso</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>K<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>s\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">ss</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    ss<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">K</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">P</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    lovelive ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> el<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>er<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> er<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>er<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>mid<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                er <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                el <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        lovelive tans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>el <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> er<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> i<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>tans<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","e80b32ba349f9cefe2bba574541e12bffcf0280f":"<pre><code><span class=\"hl-text hl-plain\">瑟尼欧里斯（セニオリス）\n圣剑的其中之一，在现存的遗迹兵装中，拥有最强大的力量。\n拥有非常特殊的资质，只有极少一部分的人才能使用。\n由四十一个护符组成。能将所有事物包含不死者都回归「死亡」。\n</span></code></pre>","77ae143dd39940f5f210e38a81c72650c9345a85":"<pre><code><span class=\"hl-text hl-plain\">ＡＡＡＡＡ　　ＡＡＡＡＡ　　ＡＡＡＡＡ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＡＡＢＢ\nＡＢＢＢＡ　　ＢＢＡＡＡ　　ＡＡＡＢＢ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＢＢＢＢ\nＡＡＡＡＡ　　ＡＡＡＡＡ　　ＢＢＢＢＢ\n\n　　(1)　　　　　(2)　　　　　(3)　　　　　　\n</span></code></pre>","d958c3f657c3870ae5718749987793d69cfffd59":"<pre><code><span class=\"hl-text hl-plain\">4 4\n1 12 6 11\n11 4 2 14\n10 1 9 20\n4 17 13 10\n</span></code></pre>","558f6619f6c1fa5937ff7eca7e88ddae0ba5870f":"<pre><code><span class=\"hl-text hl-plain\">11\n</span></code></pre>","6d142619ec678b1465a4f387dbb14da6b002d710":"<pre><code><span class=\"hl-text hl-plain\">1  12 6        11\n11 4  2        14\n10 1  9        20\n4        17 13 10\n</span></code></pre>","055fa5c2b6b93d760d56e83c6f41adc1a5514751":"<pre><code><span class=\"hl-text hl-plain\">用一条折线,在图中将所有的AB分开,且分割线要么不拐弯,要么只能向一个方向拐弯.\n</span></code></pre>","74e0a426e00386d23a2faaeccd6f637c25e71a5b":"<pre><code><span class=\"hl-text hl-plain\">无视任何规则,从第一行第一列开始,按照从左到右,从上到下的方向以此考虑每个元素是否可以加入A集合,如果这个元素可以被加入A集合,更新目前已经选的元素组成的A集合的最大值和最小值,再考虑下一个元素.直到该元素不能加入A集合时,判断剩下的集合的极差是否在可接受的范围内.\n</span></code></pre>","20309b4505596588c1294ce5c2b7b5c65956426f":"<pre><code><span class=\"hl-text hl-plain\"> 1 1 1 6\n-2 9 9 9\n</span></code></pre>","de46929dbb038aa05f57831d93b182f05b5d5221":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">_getnum</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">xx</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n <span class=\"hl-storage hl-type hl-c\">char</span> tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>xx<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>xx<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>xx<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_1</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> INF <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_3</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; minx &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> INF <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_4</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_3</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_4</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000004</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tr <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tl <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> l<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span> \n</span></code></pre>","750fbb2b5f4f2234c56118dea808312260e18f9b":"<pre><code><span class=\"hl-text hl-plain\">import numpy as np\n\nm = 60000\nn = 10000\ntrainx = np.fromfile(open(&quot;train-images.idx3-ubyte&quot;), dtype=np.uint8)[16:].reshape((m, 28 * 28)).T\nrawtrainy = np.fromfile(open(&quot;train-labels.idx1-ubyte&quot;), dtype=np.uint8)[8:].reshape(m)\ntestx = np.fromfile(open(&quot;t10k-images.idx3-ubyte&quot;), dtype=np.uint8)[16:].reshape((10000, 28 * 28)).T\nrawtesty = np.fromfile(open(&quot;t10k-labels.idx1-ubyte&quot;), dtype=np.uint8)[8:].reshape(10000)\n\nt = np.ones((10,784))/1000\n\ndef softmax(x, s):\n    y = np.exp(x)\n    for i in range(s):\n        y[:,i] = y[:,i] / y[:,i].sum()\n    return y\n\n\ndef calcP(w):\n\n    return softmax(np.dot(w, trainx),m)\n\n\ndef calcPtest(w):\n\n    return softmax(np.dot(w, testx),n)\n\n\ndef calcJ(P):\n    J = 0\n    for i in range(m):\n        J = J + np.log(P[rawtrainy[i]][i])\n    return J / (-m)\n\n\ndef calcJd(w):\n    P = calcP(w)\n    print(&quot;loss:&quot;, calcJ(P))\n    for i in range(m):\n        P[rawtrainy[i]][i] -= 1\n    tt = np.zeros((10,784))\n    for i in range(m):\n        tt += np.dot(P[:,i].reshape((10,1)),trainx[:,i].T.reshape(1,784))\n    #print(trainx[:,1].T.reshape(1,784), P[:,1].reshape((10,1)), np.dot(P[:,1].reshape((10,1)),trainx[:,1].T.reshape(1,784)))\n    return tt/(m)\n\n\nlearning_rate = 0.000005\n\n\ndef gradient_descent(t):\n    tt = t - learning_rate * calcJd(t)\n    # print(tt)\n    # print(t0,t1,calcJ(tt0,tt1))\n    return tt\n\n\n\nP = calcPtest(t)\ntcnt = 0\nfor i in range(n):\n    if np.argmax(P[:,i]) == rawtesty[i]:\n        tcnt = tcnt + 1\nprint(&quot;acc:&quot;, tcnt/n)\n\nfor i in range(10000):\n    #print(t)\n    t = gradient_descent(t)\n    if i % 10 == 0:\n        P = calcPtest(t)\n        tcnt = 0\n        for j in range(n):\n            if np.argmax(P[:,j]) == rawtesty[j]:\n                tcnt = tcnt + 1\n        print(&quot;Epoch&quot;,i,&quot;// acc:&quot;, tcnt/n)\n\n</span></code></pre>","d24dec8da7894943f717e203a43c8ba34c51fd57":"<pre><code><span class=\"hl-source hl-c++\">retry<span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>lk</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>count <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> n<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n      <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>lk</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n      <span class=\"hl-keyword hl-control hl-c++\">goto</span> retry<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>","a57b77210f9788aff0d121c1604675a1b0ec364f":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Thread 1\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>cond<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">wait</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> 这里, assert(cond)\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Other Threads\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> 这里, 做了一些可能会影响到cond的操作\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">broadcast</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>","3574ba8f4b079dbddefd72b067ca03eee6b7f3cd":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">wait</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\navail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\navail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">broadcast</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>","8ef3e462702a80f5266a70771424597fd9b4907c":"<pre><code><span class=\"hl-text hl-plain\">5 2\n0\n0\n1\n1\n1 4 3\n1 4 2\n</span></code></pre>","a54621d3b178d7dd7c05001573de9032c59852af":"<pre><code><span class=\"hl-text hl-plain\">8\n5\n</span></code></pre>","bcd05720fdc252946dee38674daa9b4e3d3a64fb":"<pre><code><span class=\"hl-text hl-plain\">利用树剖+线段树把一个点到根节点的链上点权全部+1,深度即为另一点到根节点的链的点权之和\n</span></code></pre>","61de9e08da36aa0cdf1963885c93a01b02672454":"<pre><code><span class=\"hl-text hl-plain\">1.poadd(R,0);\n//这时poque(B,0)即为棕色点与红色点LCA的深度,即为2\n2.poadd(Y,0);\n3.poque(B,0);即为所求,即为3.\n</span></code></pre>","ad5ca4be1baa471b8f2fc24735d27d58748efbac":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poadd</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tst<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>","de0f2c44d856e4ccab78f348bba8d5f263d401a9":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lson</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>o <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">rson</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>o <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">mid</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">50005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">m</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">201314</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>R<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Edge</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Segtree</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> val<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lazy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> y<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">pushdown</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>mid<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">update</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ql</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">qr</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span>l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">pushdown</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>o</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>rson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">query</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ql</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">qr</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">pushdown</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>o</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>rson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs1</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tsiz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> to<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tson<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> to<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tfa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> x<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tsiz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ttop</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; x &lt;&lt; endl;\n</span>\tl<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttop<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ttop<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ttop</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">mswap</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ta <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> t<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">poadd</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">poque</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ans<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">%=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">s</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\ts<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>s<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>s<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">fm</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> s <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>s<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> s<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>freopen(&quot;4211.in&quot;,&quot;r&quot;,stdin);\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">siz<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">siz</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">top<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">top</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">son<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">son</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">l</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">dep</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fa<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">fa</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tR <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> op<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">op</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tstb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>op<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tedb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">R</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;1!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">R<span class=\"hl-punctuation hl-separator hl-c++\">,</span>R</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;2!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poadd</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tst<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; poque(0,4);\n</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>","3ba80c11753401814b6fd5d98edb9e5b85390130":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">10005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXM</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">100005</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">addedge</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXM <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cap<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\nqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">ss</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tss<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> S <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tw<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tu <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tv <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tw<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tw</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","008fa6484c7008788f1cd4adc40fabe52649d4fc":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdlib<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">550</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Edge</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nEdge e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nEdge e2<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nqueue <span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> u<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>v<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>v<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ecnt <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q2<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">swap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">q<span class=\"hl-punctuation hl-separator hl-c++\">,</span>q2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; S &lt;&lt; &quot;dd&quot; &lt;&lt;q.front()&lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; nown &lt;&lt; &quot;}&quot; &lt;&lt; endl;\n</span>\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; e[i].to &lt;&lt; &quot;gs&quot; &lt;&lt; dep[e[i].to]&lt;&lt;endl;\n</span>\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> flow <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> flow <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;?&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> flow<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">fdp</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\tmaxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tf<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> ans<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fdp</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tS <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>T <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ea<span class=\"hl-punctuation hl-separator hl-c++\">,</span>eb<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ec<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tec <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\tea <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> ans1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\teb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>j<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e2<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans1 <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ea <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> eb <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ec <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ed <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:1&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e2<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:2&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ea <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ea <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ea<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>eb <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> eb <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>eb<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ec <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ec <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ec<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ed <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ed <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:3&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>N <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>","cabff5fe28c30c6186a2600c9799c8d59ce1c64d":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">10005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXM</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">100005</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">addedge</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXM <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cap<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\nqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tS <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-keyword hl-operator hl-c\">*</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tT <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-keyword hl-operator hl-c\">*</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> sum <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tsum <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> num <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>j<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">T<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> sum <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>","63b718d965bb314f918fd191f898015b410aae78":"<pre><code><span class=\"hl-text hl-plain\">从左到右考虑所有岛,在能探测到一个岛的前提下,尽可能的向右放\n</span></code></pre>","a392456d15bdc27b796e9424446c6b54de6868ed":"<pre><code><span class=\"hl-text hl-plain\">考虑到圆的复杂,应转化为线段贪心问题.\n</span></code></pre>","f86d8dde2f62e9af2742716c7ceefd462a457a1e":"<pre><code><span class=\"hl-text hl-plain\">可以在最外层循环1000次随机起点来贪心,在数据范围小时极为有效\n</span></code></pre>","08890d243e7c8e5e643ac83edad03d75e3784ada":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n  <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>by Chtholly\n</span></span></code></pre>","2d20787fe2622008e656c7214525efcc5fdd8bf8":"<pre><code><span class=\"hl-text hl-plain\">有一个序列{Ai}以及m个区间[li..ri]\n你现在可以选择k个区间，对于每个被选中的区间[l..r]，Al~Ar的数都会增加delta\n求在所有方案中a中最小值最大为多少\n</span></code></pre>","5922fabd172e8538bccf099d0599f0aca68470d1":"<pre><code><span class=\"hl-text hl-plain\">2018-2-16\n</span></code></pre>","3ea4f93e88e60d52d52d6c81bc47156cd3474ddd":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>fa</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>此时G[x]为桥\n</span>            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>如果是根节点，计算子节点个数\n</span>        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>根节点并且有两个及以上子节点\n</span>    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","39938f6403d5d21a2548b4d1ed173a9ea2daf0f5":"<pre><code><span class=\"hl-text hl-plain\">给你一个联通网路，求出这个网络所有割点的编号，以及如果删除这个割点之后所对应的联通分量数.\n</span></code></pre>","5c4928de4fd3547bbc68474e1f06728a12c6f7fb":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1050</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">const</span> <span class=\"hl-storage hl-type hl-c\">int</span> N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    \n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>fa</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">c</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> c <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">inp<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> inp</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> MAXN<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        tt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        \n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">DFN<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> DFN</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> LOW</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">iscut<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> iscut</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>Network #<span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>tt</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">bool</span> tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">vis<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> vis</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-storage hl-type hl-c\">int</span> cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-language hl-c\">false</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> i<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        cnt <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">j<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>  SPF node <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span> leaves <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span> subnets<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cnt</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>tb<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>  No SPF nodes<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","5fa3cc60e8e3dad64304475596cfa6e8d22bc3d6":"<pre><code><span class=\"hl-text hl-plain\">无向图,在最少的点上安装太平井,使删除任意一个点后其他所有点都能到达太平井,并求出最少太平井的安装方案数.\n</span></code></pre>","7100c68280ff08a1e78e8aa805cb26bc9959e1bc":"<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>stack<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">50005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> bcccnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nstack<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span>pair<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> <span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> S<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">auto</span> p <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">make_pair</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">p</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>x</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-storage hl-type hl-c\">auto</span> e <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">top</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> bcccnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> bcccnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">p</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>fa <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> ttt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>M <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        ttt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>MAXN<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">DFN<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> DFN</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> LOW</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">iscut<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> iscut</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcccnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">bccno<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> bccno</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homax</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homax</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        lovelive ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcccnt<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            lovelive cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cnt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cnt <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ans1<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>cnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bcccnt <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>Case <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span>: %I64d %I64d<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ttt<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>","0dbf69d5248547ef10dc74c58db61268b65756b1":"<p>MSC这边有三种奖品:</p>\n<ul>\n<li>T恤</li>\n<li>马克杯</li>\n<li>帆布手提袋</li>\n</ul>\n<!--more-->\n<p>特等奖同学可以获得T恤+剩下两个选一个</p>\n<p>一等奖同学可以获得T恤</p>\n<p>二等奖同学可以获得马克杯或者帆布手提袋</p>\n<p>三等奖同学可以获得帆布手提袋</p>\n<p>T恤:</p>\n<p><img src=\"/img/2021-freshmen-awards.assets/t.jpg\" alt=\"img\"></p>\n<p>马克杯:</p>\n<p><img src=\"/img/2021-freshmen-awards.assets/mkbei.jpg\" alt=\"mkbei\"></p>\n<p>帆布手提袋:</p>\n<p><img src=\"/img/2021-freshmen-awards.assets/fb1.jpg\" alt=\"fb1\"></p>\n<p><img src=\"/img/2021-freshmen-awards.assets/fb2.jpg\" alt=\"fb2\"></p>\n<p>特等奖同学私聊我T恤尺寸(M/L/XL/2XL/3XL)和剩下两个选什么.</p>\n<p>一等奖同学私聊我T恤尺寸.</p>\n<p>二等奖同学私聊我选马克杯还是帆布手提袋.</p>\n<p>三等奖同学就发帆布手提袋啦.</p>\n<p>也可以自愿把奖品换成低等级奖品的, 跟我说一声就行.</p>\n<p>新生赛终榜和获奖情况:</p>\n<p><a href=\"https://acm.xidian.edu.cn/freshmen/2021/ranklist/\">https://acm.xidian.edu.cn/freshmen/2021/ranklist/</a></p>\n<p><img src=\"/img/2021-freshmen-awards.assets/image-20211214095751088.png\" alt=\"image-20211214095751088\"></p>\n<p>最后, 大家可以在评论区找数模队友! 介绍一下自己, 然后注意留个qq号就行啦</p>\n","566e29b14d14d209c0a4e800e67aa23034c65fa6":"<p><img src=\"/img/2021ICM-MCM-travel-notes/fm.png\" alt=\"\"></p>\n<h2 id=\"Day-∞-Day-0\"><a href=\"#Day-∞-Day-0\" class=\"headerlink\" title=\"Day -∞ -- Day 0\"></a>Day -∞ -- Day 0</h2>\n<p>考试周前觉得自己要是连考试周都能熬过去的话, 这世上就没什么能难倒我的了.</p>\n<!--more-->\n<p>所以我和wwy十一月就打算今年去水一下数模美赛, 混混分, 体验一下数模到底是啥. zirrtu也早就劝我去水一下, 说他去年啥都不会大数据题跑了个nlp就拿了个M奖, 报名费600奖金3000, 搞得我也心动了.</p>\n<p>本来就我和wwy, 想再找一个队友. 然后创创说可以加入. 我分了一下, 创创会latex, 就让创创写论文; 我不会matlab, 就让wwy当编程. 我就自然地成为了建模. 后来想一下我好像是因为太废物了才当的建模, 实际也证明了我确实是个废物. 然后都准备给学校报名了, 创创npy把创创拉走了, 我们又去找队友去了. 然后找到了oxy, 她来写论文. 创创在那边好像是编程, 太全能啦.</p>\n<p>然后是联系老师, 因为我们之前没有任何数模经验(实际上我是打过校赛的只不过啥奖都没拿我就没写上去), 我们被分到了见习梯队, 后来听说好像即使没拿奖说你打过校赛都不是见习梯队, 不过这个见习梯队不仅不是劣势, 反而在联系老师的时候成了优势. 我们三个ACMer的特点还是很明显的, 就是编程和数据处理什么的都不用费太大功夫学. 然后尝试联系了一下听说是学校最强的张胜利老师, 据说他很难联系上. 然后联系了一个我上学期的线代老师. 这个线代老师主要就是管的不严, 适合我这种佛系选手. 给老师发的邮件里就写了我们三个人ACM相关的奖没想到刚给张胜利老师发了邮件, 给线代老师发了邮件, 张胜利老师就发邮件同意了. 我只能尴尬地又给线代老师发了邮件解释.</p>\n<p>能这么快联系上张胜利老师我估计主要是因为我们是见习梯队, 因为每个老师的正式队和见习队都是分别限制名额的, 可能他认为见习梯队都差不多, 然后也不会挤占正式队名额, 加之我们联系的又早, 就直接同意我们了(说到底还是废物).</p>\n<p>后来发现我们高估了考试周的难度, 高估了我们浴血重生后的勇气. 看了一星期数模相关的东西, 我只想退钱. 感觉数模还是太开放了, 和acm那种大部分时候只有一种正确解法, 并且所有地方都要很完美地考虑清楚的东西相比, 数模给我的不安全感很大. 作为一个无可救药的完美主义者(其实就是废物), 一个很模糊的, 可能有一点点逻辑问题的东西都会让我纠结很久, 完全不敢进行下一步思考, 而实际上数模里这些东西都是无伤大雅的.</p>\n<p>我也认识到了我这些问题, 所以我尽量不让自己多想, 告诉队友们如果他们都觉得没问题我还在这瞎bb的话就别听我的继续做下一步.</p>\n<p>学校安排的数模训练很紧, 但是这是针对正式队的, 见习队可以选择参加. 我们想还是先学点东西再参加吧, 啥都不会也编不下去, 结果直到最后我们也没有完整的练过一个题(还是废物). 平时就一起跟301一起学数模, 听301里唯一有数模经验的99讲东西, 开了很多题最后都没做到第二问, 做了个阿片的题唯一收获就是别选C题(太废物了).</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/a.png\" alt=\"img\"></p>\n<p>还有一个奇怪的公告署名, 就很奇妙, 现在也不知道是什么情况.</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/b.png\" alt=\"img\"></p>\n<h2 id=\"Day1\"><a href=\"#Day1\" class=\"headerlink\" title=\"Day1\"></a>Day1</h2>\n<p>五点多就都起了, 目标很明确, 直接开了D题. 我先花了四五十分钟把题目翻译了一遍, 不清楚的地方标了一下, 然后吃个早饭就开始建模之旅.</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/QQ%E5%9B%BE%E7%89%8720210213114536.png\" alt=\"img\"></p>\n<p>题目是The Influence of Music, 挺巧的, 前一天跟301聊天时还说到除非出一个音游题要不然我肯定没输出, 看到这个题目我以为真的是音游, 然而实际上跟音游没啥关系.</p>\n<p>之前做特斯拉那题对找数据有了心理阴影, 看到这题说只允许使用题目给的数据集还是很开心的, 不用去找这么多奇怪的数据了. 第一问让建一个图, 不管用什么算法, 怎么建图他都说好了, 先把图建出来然后画一个图充个数. 这么大的图要画的话肯定要用gephi, 但是我不会(就纯废物), 就先让wwy画了一个图. 不知道他怎么调了色, 做出来是这个画风的:</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/c.jpg\" alt=\"img\"></p>\n<p>先不管了, 我们三个先口胡出了第一题的模型, 然后一起商量了一些关键词的中英文名称, oxy就去写论文了, 因为是个缩点dp, wwy写了好长时间才出来, 大废物我感觉自己没什么事做, 就去画了几张图.</p>\n<p>画图感觉不用gephi还是不行啊, 一个五个点六个边的图我用ppt拼了十几分钟才满意, 拼好之后果断学gephi, 而且发现gephi还能导出svg图片, 然后导入到ppt里再美化, 我感觉我马上就成为画图大师了.</p>\n<p>吃完饭, 我去睡了两小时(懒狗). 醒来之后发现wwy已经写好代码了, 跑出了结果. 然后我脑子里构思了一张特别帅气的图片, 但是限于ppt技术我不确定能不能做出来, 就先放了放, 然后一起去嘴第二题. 第二题就感觉力不从心, 完全毫无逻辑毫无新意(实际上整个题也没什么逻辑和新意), 然后觉得我不是编程所以就让wwy继续去实现第二题, 我去画那个特别帅气的图片(说到底就是条懒狗).</p>\n<p>晚饭之后我画出来了, 但是总觉得差点意思, 还是技术不够, 差不多得了.</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/top7.png\" alt=\"img\"></p>\n<p>配色实在太丑了, 我已经不忍心看了.</p>\n<p>其实本来是想放10个人的, 但是实在调不好布局, 就只放七个人了.</p>\n<p>晚上十一点下班了, 自闭了好长时间才睡觉呜呜.</p>\n<h2 id=\"Day-2\"><a href=\"#Day-2\" class=\"headerlink\" title=\"Day 2\"></a>Day 2</h2>\n<p>第二天八点准时起床, oxy把昨天的论文发了一下, 我没仔细看内容只是把图片看一下, 然后一些语法错误改了一下(事后证明这里出现了大问题), 继续嘴后面的题了, 嘴完之后又去画图了.</p>\n<p>中午吃完饭又睡了两小时(纯懒狗), 然后下午确定了一下哪些题认真做做, 哪些题靠嘴建模. 然后我又去画图了, 期间看了看wwy的数据, 提出一些错误的建议, 想一想哪些地方可以画图.</p>\n<p>晚上我觉得我不能再这样划水下去了, 我去翻译了几段wwy写的中文论文发群里了. 十一点半下班.</p>\n<h2 id=\"Day-3\"><a href=\"#Day-3\" class=\"headerlink\" title=\"Day 3\"></a>Day 3</h2>\n<p>第三天八点准时起床, 然后嘴了几个方法就扔给wwy实现去了, 我继续去画图. 跑出了个155MB的数据, 处理的时候wwy电脑还崩了.</p>\n<p>套了第一个模型又嘴了几个完全离谱的方法, 跑出了发现结果不是很好, 对着结果改方法才做出了比较好的结果. 然后发现svg图片放到oxy那边字体格式什么的都不对, 因为svg图片里不包含字体. 然后我说图片什么的先放放, 等我最后研究好怎么导出pdf格式的图片再放图片(还是懒狗). 然后又去快乐画图了.</p>\n<p>画了一个立体效果的图, 但是丑到天际, wwy安慰我说画的还可以.</p>\n<p>这两天的游记写不下去了, 我好像就是什么都没干, 我是废懒狗.</p>\n<h2 id=\"Day-4-Day-5\"><a href=\"#Day-4-Day-5\" class=\"headerlink\" title=\"Day 4 - Day 5\"></a>Day 4 - Day 5</h2>\n<p>一大早正准备进腾讯会议, 发现腾讯会议号被封了, 我还是第一次知道腾讯会议还能封号.</p>\n<p>没办法, 也懒得去折腾其他替代品了, 就只能去QQ语音了, QQ语音共享屏幕还不好搞, 以前用会议我都是共享屏幕防止自己摸鱼的,  现在共享屏幕都懒得搞了, 毕竟我是懒狗.</p>\n<p>折腾了一上午, 大概把题目全部构思好了, 然后就剩吹论文了. 下午wwy去写了给ICM的Document, 我去写了一下模型的Weakness, 感觉全篇论文我最有自信写的就是这一块, 要不是写太多不是很好我能写十页.</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/d.png\" alt=\"img\"></p>\n<p>晚上我把摘要写好了, 然后给他们看了一下, 改了几遍感觉没啥问题, 准备做最后的修改了.</p>\n<p>我是很怕熬夜做事的, 特别是这种要合作熬夜干事, 而且还开了语音. 到了晚上我就会很容易暴躁, 喜欢喷人, 然后做一些很奇怪的事情. 再加上我是个死心眼, 有一点问题我都受不了, 所以就很容易因为一点点小问题激动.</p>\n<p>把文章大概从中间到尾看了一遍, 找到了一些语法错误, 一些格式不统一的问题后, 到了两三点感觉没啥问题都准备交了, 看了一下第一个模型的表述, 然后心态就崩了. 当时就感觉第一个模型一点都没说清楚, 有删掉自己重写的冲动, 然后一直在语音里发牢骚. 不过后来想想自己本来也没干啥, 当时这个模型我去写就好了. 本来想用oxy的latex文件直接改好发给他们的, 然后发现他的latex文件我怎么都编译不了, 心态又崩了, 又哭又骂, 跟个傻逼一样哈哈.</p>\n<p>然后只能通过共享屏幕用键盘指点江山, 改好已经是四点了, 心态也平静的差不多了. 把参考文献格式统一了一下, 最后检查了几遍论文的标题和图表标题的格式统一, 五点多基本完成把论文交了. 回到了懒狗温暖的床上.</p>\n<p>临睡前听说很多人邮件没发过去, 确认了邮件发过去了才安心睡觉.</p>\n<p>睡一觉起来下午就出去玩了, 一下午吃了两顿饭, 回家路上都走不动了.</p>\n<h2 id=\"Day-6\"><a href=\"#Day-6\" class=\"headerlink\" title=\"Day 6\"></a>Day 6</h2>\n<p>官网更新了, 邮件Received, 放心了, 希望能有个S以上的奖.</p>\n<h2 id=\"Day-7\"><a href=\"#Day-7\" class=\"headerlink\" title=\"Day 7\"></a>Day 7</h2>\n<p>突然看到昨天数模大群里要把源文件什么的发给学校, 看截止日期过了我们就没管, 反正西电不差我们一个队.</p>\n<p>除夕, 晚上邦邦老师说要在大群里发一个红包, 我跟99守着零点抢红包但是她抢到了我没抢到, 我是废物.</p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/aa.png\" alt=\"img\"></p>\n<p><img src=\"/img/2021ICM-MCM-travel-notes/ab.png\" alt=\"img\"></p>\n<p>数模好累, 如果还有下次一定要提前商量好论文咋写, 这次的最后一晚上太难顶了.</p>\n","e108cb78d8035624a2752e8a96ea61b360cd198f":"<p>半夜想写一点东西.</p>\n<!--more-->\n<p>距离上一次写文章已经过去一个多月了, 虽然我觉得我已经半年没怎么认真写过东西了, 可能是因为上次写东西也没有多认真写, 学到的东西也没有多么的用到, 该解决不了的问题还是解决不了, 该诉诸玄学的问题我还是选择了诉诸玄学, 只不过某些时候我开代理打不开网站的时候我会更自信的认为这又是个玄学问题罢了.</p>\n<p>这学期开学前, 我仔细思考了我从高中到大学的生活, 感觉我现在的大部分遗憾都是在一开始选择了一条更艰险的路, 但是要么缺少定力, 要么缺少勇气, 总是在这条路走一半的时候或发现已经耽误了太多时间, 或发现自己没有了走下去的勇气, 或走一半就松懈下来, 最后难免匆匆忙忙地回归主流, 两边都没有照顾好.</p>\n<p>我当时决定这学期不能这样下去. 这学期的最主要的中期目标有三个, 我当时这样想:</p>\n<ol>\n<li>期末考试考好.</li>\n<li>acm努力训练, 比赛正常发挥.</li>\n<li>保研找个喜欢的地方.</li>\n</ol>\n<p>其实保研这事对于寒假结束的我来说还太远了, 并且这件事更多的是前两件事的结果, 所以我的重点也就放在了前两件事. 如果我期末考试考的好, 排名再往前进个1%或2%, 然后acm再换个牌子拿, 至少我感觉我的大学生活没有太大的遗憾了.</p>\n<p>当时我的规划是, 从寒假结束开始, 到期末考试结束, 这十几天的时间我是不会去考虑acm的事情的. 但是时间越近, 我对acm还是破铜烂铁的恐惧就越深, 就越去惋惜从去年济南结束后这段我本不该花在acm上的时间. 尽管最后考试过程中的自我感觉比较良好, 但是等到一门比一门离谱的成绩出来的时候我还是觉得不敢相信. 这应该是我过去五个学期最黑暗的考试周, 因为没有哪一学期的期末成绩比这学期更加绝绝子.</p>\n<p>至此, 我的第一个目标总算是失败了. 可能上天还是公平的, 尽管我确实觉得期末考试考的还可以, 但是我复习的时候也确实不怎么认真, 也失去了大二上学期速成期末的时候那种即使学不完我也不能漏掉每一个细节的完美主义, 可能这就是让我期末变成这样的直接原因吧.</p>\n<p>名次没了, 如果acm还是之前那样的成绩的话, 我的保研估计也就不需要去期待什么了. 本着这样的心情, 我开始了我这辈子最后一次的acm赛前准备阶段. 这段就不说了, 每次想起这些事情还是只能靠精神胜利法安慰自己, 相信这一切都是上天最好的安排, 只不过这次不太信了, 但是我还是不敢允许我不相信. 只能说这段时间确实学到了许多, 比赛过程中我确实也感觉到自己的进步. 尽力了, 但是可能还是差点吧, 如果我再聪明一点, 如果我做题再多一点, 如果我把我想交代的事情全都交代清楚了, 可能就不会这样了.</p>\n<p>至此, 我的第二个目标也终于是失败了, 可以预见的是我的第三个目标也不会有多好的结果, 我的大学终究还是变成了跟高中一样, 充满了遗憾和不甘, 可能我的命运就是这样的吧.</p>\n<p>总感觉自己的性格注定了我的生活不会轻松, 我总是把自己的累归咎于自己目前在准备的事情, 觉得这件事情结束后我就不会这么累了. 可是我现在发现了, 无论什么时候我都会太在意别人的感受和评价, 无论做什么事情我都会考虑太多太多乱七八糟的情况和后果最后一点都不敢行动, 无论什么时候我看到某导在群里的所言所行我都会愤怒痛心为什么我生活的世界会有这样的人, 无论做什么事情我都会被脑子里不属于这件事的其他的胡思乱想和担忧占用掉大部分的精力. 我总是相信我可以寻找一个自己的美好世界, 但是当我看到肮脏的东西却无能为力时, 只能不断的怀疑自己究竟能不能找到一个这样的地方, 然后安慰自己等换个地方就好了.</p>\n<p>最近也不是什么都没学, acm结束后我又总是想尽可能的多学一点来弥补自己acm耽误掉的时间, 但是总感觉效率还是不高, csapp也不在看了, 6.824的东西刚开始写Lab 2, 给自己订的去联系老师的ddl也快到了, 但是自己还是不怎么敢去联系, 还是觉得自己还可以变得更好, 可惜时间不等人了, 而且我也不敢保证这是不是又是个把自己封在舒适圈的借口.</p>\n<p>现在每天唯一稳定的快乐就是npy了, 可能我最近生活中所有让我感到高兴的事情都是关于她的吧. 想了想好像真是的.</p>\n<p>文笔不好, 我估计也没人读到这.</p>\n<p>如果真有人能读到这, 真的委屈您了.</p>\n","88a445c87543413d3f0331fafadae07302aedab4":"<p>最近遇到了好多这样的题,感觉应该是一类题.\n这一类问题就是要求满足某一限制条件下的最短路,比如每一条边都有两种边权,要求路径上其中一种边权之和小于某个值的条件下的另一个边权最小的路径.</p>\n<!--more-->\n<p>可以用状态的思想考虑,在dp时,状态设计的不好就会出现这样类似的问题,不好转移,dp中解决这种问题的方法就是重新定义状态.在这个图中,我们也可以重新定义节点.本来节点只有节点编号这个属性,我们把被限制条件限制的边权和加入到属性中,这样只需要在最后只考虑属性中的这一个边权和满足条件的节点就行了.对应到图上,就是把一个点拆成很多点,拆成的每一个点对应原来点限制边权不同时的状态.\n举个例子,考虑这样一个图:每一条边有距离和花费,要求花费小于等于K的最短路.可以把图中的每一个点拆成K个点,每一个点对应经过原来点是花费了一个数的状态.这样只需要在这个新图中跑一个最短路,用距离当边权,最后寻找终点拆出的点中对应花费小于K的点的最短路.\n其实拆点只是一个思考方式,真正写的时候不需要写拆点的代码,可以把点的编号(x)变成一个二维数据(x,k),把这一个二维数据看作是点的编号,代表x这个点拆成的对应花费为k的点.反映在dijkstra中,就是优先队列中原本的Node{d,x},d是源点到x点的距离,变成Node{d,x,k},d是源点到点(x,k)的距离.在松弛操作中,原本的三角不等式写成dis[to] &gt; dis[x] + e.d,其中dis的下标是点的编号.现在把点的编号作为二维数据考虑,就是disto &gt; disx + e.d,其中x和cost分别对应当前所在点的编号和到这个点的花费,换句话说,就是新图中这个点的二维编号.</p>\n<p>模板题:</p>\n<p>Environment-Friendly Travel: <a href=\"https://codeforces.com/group/2l2uaz0vCx/contest/102501/problem/A\">https://codeforces.com/group/2l2uaz0vCx/contest/102501/problem/A</a></p>\n<p>题意是在二维平面中,给你N个中转点和一个起点一个终点共N+2个点的坐标,中转点之间有一些点之间有一些交通方式,这些交通方式经过的距离都是两个点的欧几里得距离,但是每一种交通方式平均每单位距离的碳排放量不一样.同时你可以从起点开始,开汽车到任何一个点,然后经过各种交通方式折腾,在一个点开汽车到终点,这也是起终点和中转点的唯一交通方式,并且中转点之前不能用汽车,汽车也有碳排放量.让你求在经过距离小于B的情况下碳排放量最小的路径,坑点在于可以直接开车从起点到终点.就是个二维最短路模板题.</p>\n","d2e40ca24a89ef1f51b91761ba0d1d7f2a395abd":"<p>由于在上个月的CSP取得了高达330分的优(sha)异(bi)成绩，这次有幸能公费参加一下这报名费只要800大洋的比赛。可能是线上举办的原因吧感觉这次CCSP的参赛门槛低了好多，上个月CSP还是IOI赛制，330分的全国排名甚至还不如我大一刚开学打的290那次高。</p>\n<!--more-->\n<h2 id=\"Day0\"><a href=\"#Day0\" class=\"headerlink\" title=\"Day0\"></a>Day0</h2>\n<p>前一天晚上是西电MSC的新生见面会，作为一个mentor当然要去跟新生们抢蛋糕吃，还体验到了被一群围着拍照片是啥感觉。\n玩完到九点多了，突然意识到我准考证还没打，正好创佬说他一会去实验室可以给我打，明天给我送过去，我就让创佬帮我打了。\n晚上回寝室想去找舍友借一本C++ Primer防止他出阴间题，可惜没借到，只找到了我之前去图书馆借的Head First Java。\n博客又出事了，修修补补的折腾到了一点。</p>\n<h2 id=\"Day1\"><a href=\"#Day1\" class=\"headerlink\" title=\"Day1\"></a>Day1</h2>\n<p>八点签到，刚睡五个多小时的我六点五十就爬起来了，拉着fth一起吃个饭就到机房门口等创佬给我送准考证。七点五十五创佬还没来，QQ问他说他起晚了还在寝室，还好进机房不用准考证，8点签到也没有开始。\n签到的时候还被问了一下有没有清真需求，搞得跟没有你就会给我猪肉吃一样。\n<img src=\"/img/CCSP2020-travel-notes/a.jpg\" alt=\"img\">\n发了一个袋子，里面有一些奇怪的零食还有水啥的，还有一本秩序册。又发了一个狗牌，狗牌挺好看的，就是名字写的太大了，感觉戴着他别人八百米开外都能知道我叫啥。\n机房环境挺好，我还是才知道西电还有这么好的机房，鼠标键盘看起来都挺好用的，可惜我自己带了没用他的。\n九点开局，开幕雷击，这不是上次CSP的题? 一看就是又出锅了，等了五六分钟那边修好了换了个压缩包自己下，但是下下来的zip压缩包又解压不了，折腾了半天unzip，重新下了一遍，发现下下来的东西变成pdf了，终于看到题了。\n第一题是个大图论题，带限制的最短路，有30分的无限制的，拿到题直接想到了30分解法，但是当时觉得30分的解法改不了后面的\n测试数据，就没着急打30分的，想想能不能再来一点分。时间过的很快，这时候已经过去快一小时了。\n挣扎了大约半小时，放弃了，开始打30分的解法。修修补补打了半小时交了，正好30分。这时候看了一下榜，发现华北赛区已经一堆200分的了。\n开第二题，一个超超超超超超超超超超超超超超超超超大模拟，花了十分钟构思了一下怎么设计存储，奔着76分的read+write+ls+unlink+commit+checkout去的。\n虽然一开始是按照76分的构思，但是实现还是一点点实现的。刚刚把框架写好，闻到了一股香气。十一点半开饭了。\n干啥啥不行，吃饭第一名。本来就坐在最后的我直接上去领盒饭，不得不说，这饭确实不错，应该是我在西电除了综合楼吃过的最好的一顿饭了，而且居然真的有肉，还有一个。\n十分钟光速吃完饭，接着把read+write打了，交了上去正好二十分。这时已经快十二点了。\n然后打ls+unlink，打完交上去，40分。这时评测已经很慢了，这个结果我交上去十分钟才下来。\n感觉一切都很顺利，开始打commit和checkout。按照我设计的框架，这两个功能是很好实现的。而且之前的find函数什么的都是适配了这个功能的写法。\n打完交上去，可能是之前太顺利了，交上去我直接回到第一题了。过了二十分钟评测结果出来了，还是40，有点慌了，这时候大概两点多。看了一下榜，lzy已经变成西南赛区第一了。\n自己造数据都是过的，题目给的第一和第二个数据也是过的，随后在大样例里用merge前的大概二三十条语句测出了问题，研究了一下发现我把ls的细节理解错了。\n开始改，改完已经两点五十了，突然听到监考老师说是以最后一次提交为准，我现在交肯定比赛前评测结果出不来，万一写挂了铜估计都没了，就没敢交。\n下午三点比赛结束，70分爬了。苦涩的心情和寒冷的机房给我冻的瑟瑟发抖。\n出来恍若隔世，毕竟已经七个多小时没见到太阳了。\n下午到寝室有点困，但是不想睡觉，感觉下午四五点就睡觉太浪费大好时光了。骑个车去综合楼转了一圈，顺便买了点吃的。在综合楼头还有点晕，差点没死外面。\n回来在tlb群里语音通话了一晚上，然后看到分赛区的奖，发现我70分还能拿个银奖，高兴了一下。然后就睡觉了。</p>\n<h2 id=\"Day2\"><a href=\"#Day2\" class=\"headerlink\" title=\"Day2\"></a>Day2</h2>\n<p>早上九点多才醒，错过了lzy的获奖感言，进直播听了一下题解，发现听不懂就爬了。全国奖也出来了，果然又是个破铜。\n总体没有特别发挥失常的地方，就是最后理解错题意有点可惜，我水平也就这样了。发了个说说显摆了一下我认识lzy，就去抄实验报告了。下午还要去打训练赛，晚上还要回来抄fth的电路作业，明天就要交了。下周还有IEEE Xtreme和小米的ICPC，真是忙碌划水又自闭的生活呢。</p>\n","f1df628b367cbad36dc6052c911bccede24533e2":"<h1><a href=\"https://codeforces.com/contest/1325\">Codeforces Round #628 (Div. 2)</a></h1>\n<p><img src=\"/img/CF-1325/a.png\" alt=\"\"></p>\n<p><a href=\"https://codeforces.com/contest/1325\">Codeforces Round #628 (Div. 2)</a></p>\n<p>比赛还有五十分钟才结束,但是后面那两道现在才不到30人过了的题对于我来说应该是不可做题,就先写总结了.(希望不会FST)</p>\n<h2 id=\"A-EhAb-AnD-gCd\"><a href=\"#A-EhAb-AnD-gCd\" class=\"headerlink\" title=\"A. EhAb AnD gCd\"></a>A. EhAb AnD gCd</h2>\n<p>设<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.265ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5421.2 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-I-1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path><path id=\"MJX-1-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-1-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-1-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D454\" xlink:href=\"#MJX-1-TEX-I-1D454\"></use></g><g data-mml-node=\"mo\" transform=\"translate(754.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1810.6,0)\"><use data-c=\"1D454\" xlink:href=\"#MJX-1-TEX-I-1D454\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2287.6,0)\"><use data-c=\"1D450\" xlink:href=\"#MJX-1-TEX-I-1D450\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2720.6,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-1-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3240.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3629.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-1-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4158.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4603.2,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-1-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5032.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g></g></g></svg>,</p>\n<p>题目要求就是要找<svg style=\"vertical-align: -1.108ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.929ex\" height=\"3.11ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -884.7 5272.5 1374.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path><path id=\"MJX-2-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-2-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-2-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-2-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D454\" xlink:href=\"#MJX-2-TEX-I-1D454\"></use></g><g data-mml-node=\"mo\" transform=\"translate(699.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-2-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(1699.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,394) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-2-TEX-N-D7\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1307,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-2-TEX-I-1D44F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(665.1,-345) scale(0.707)\"><use data-c=\"1D454\" xlink:href=\"#MJX-2-TEX-I-1D454\"></use></g><rect width=\"1427.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3644.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4700.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></svg></p>\n<p>让a=1,b=x-1即可.</p>\n<h2 id=\"B-CopyCopyCopyCopyCopy\"><a href=\"#B-CopyCopyCopyCopyCopy\" class=\"headerlink\" title=\"B. CopyCopyCopyCopyCopy\"></a>B. CopyCopyCopyCopyCopy</h2>\n<p>因为序列重复了n次,完全可以在每次重复中选序列中的一个数,这样就相当于可以不考虑顺序地选择数组成LIS,排个序后就是西电C语言期末考试真题.</p>\n<!--more-->\n<h2 id=\"C-Ehab-and-Path-etic-MEXs\"><a href=\"#C-Ehab-and-Path-etic-MEXs\" class=\"headerlink\" title=\"C. Ehab and Path-etic MEXs\"></a>C. Ehab and Path-etic MEXs</h2>\n<p>只要能让0 1 2这三个数不在一条路径上,就能让这棵树的答案达到2.</p>\n<p>并且,对于任意一棵树,答案最小是2,因为总可以找到一条路径包括0和1.</p>\n<p>除了一条链的情况,其他的都可以通过先给叶子连的边填上0 1 2构造出答案.</p>\n<h2 id=\"D-Ehab-the-Xorcist\"><a href=\"#D-Ehab-the-Xorcist\" class=\"headerlink\" title=\"D. Ehab the Xorcist\"></a>D. Ehab the Xorcist</h2>\n<p>异或和一定小于等于加和,这是因为异或和是\"不进位的加法\",异或和比加和少的部分就是本该进位的两位变成了0,所以当异或和&gt;加和或者两者差值为奇数时,无解.</p>\n<p>答案不会超过3,这是因为可以构造这样一个数组:[a,a,b],其中a为两者差值的一半,b为满足加和条件的唯一b.这样通过异或,可以损失掉两个a,即两者的差值,并且不会影响到加和的结果.</p>\n<p>因为每一位是独立的,如果a和b的1位不重叠,可以把他们压缩为一个数,即(a|b).</p>\n<p>(umi生日快乐!)</p>\n","a8245ba56b8cb7c6f27aa2148ae24d43879be145":"<h1><a href=\"http://codeforces.com/contest/1326\">Codeforces Global Round 7</a></h1>\n<h2 id=\"A-Bad-Ugly-Numbers\"><a href=\"#A-Bad-Ugly-Numbers\" class=\"headerlink\" title=\"A. Bad Ugly Numbers\"></a>A. Bad Ugly Numbers</h2>\n<p>n=1时,显然无解.</p>\n<p>n&gt;1时,第一位为2,后面全为3就是一个解.</p>\n<h2 id=\"B-Maximums\"><a href=\"#B-Maximums\" class=\"headerlink\" title=\"B. Maximums\"></a>B. Maximums</h2>\n<p>递推.</p>\n<h2 id=\"C-Permutation-Partitions\"><a href=\"#C-Permutation-Partitions\" class=\"headerlink\" title=\"C. Permutation Partitions\"></a>C. Permutation Partitions</h2>\n<p>最优答案肯定是让最大的k个数全部算上,让每个最大的k个数全部单独处在一个区间即可.</p>\n<h2 id=\"D2-Prefix-Suffix-Palindrome-Hard-version\"><a href=\"#D2-Prefix-Suffix-Palindrome-Hard-version\" class=\"headerlink\" title=\"D2. Prefix-Suffix Palindrome (Hard version)\"></a>D2. Prefix-Suffix Palindrome (Hard version)</h2>\n<p>先找到仅由长度相等的最长的前后缀构成的回文串,然后如果前缀之后或者后缀之前还有一个回文串,可以把这个回文串插入到中间,易知这样构造出的答案一定是最优的.</p>\n<p>将字符串翻转一下再扫一遍就可以求出两边的回文串,然后去掉两边的回文串,在中间剩下的字符串跑一边马拉车,就可以找到前缀后最长的回文串,翻转一下再跑一边就可以找到后缀前最长的回文串,看哪个长加哪个就行了.</p>\n<p>赛后题解没有用马拉车,用了一个神奇的方法求某位置开始的最长回文串,但是我没看懂.</p>\n","68da05540ab1e342b2eedf493c7d8d282fea8ea7":"<h1 id=\"CF-Round-624-div-3\"><a href=\"#CF-Round-624-div-3\" class=\"headerlink\" title=\"CF Round #624 div.3\"></a>CF Round #624 div.3</h1>\n<p>unrated,佛系比赛,不急不躁,不怒不争.</p>\n<h2 id=\"A-Add-Odd-or-Subtract-Even\"><a href=\"#A-Add-Odd-or-Subtract-Even\" class=\"headerlink\" title=\"A.Add Odd or Subtract Even\"></a>A.Add Odd or Subtract Even</h2>\n<p>若 <svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.185ex\" height=\"1.661ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2291.6 734\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-1-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path><path id=\"MJX-1-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-1-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(806.8,0)\"><use data-c=\"3E\" xlink:href=\"#MJX-1-TEX-N-3E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1862.6,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-1-TEX-I-1D44F\"></use></g></g></g></svg> ,且<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-2-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-2-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-2-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1751.4,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-2-TEX-I-1D44F\"></use></g></g></g></svg>为偶数,直接减去<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-3-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-3-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1751.4,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-3-TEX-I-1D44F\"></use></g></g></g></svg>即可,答案为1.</p>\n<p>若 <svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.185ex\" height=\"1.661ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2291.6 734\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-4-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path><path id=\"MJX-4-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-4-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(806.8,0)\"><use data-c=\"3E\" xlink:href=\"#MJX-4-TEX-N-3E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1862.6,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-4-TEX-I-1D44F\"></use></g></g></g></svg> ,且<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-5-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-5-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-5-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-5-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1751.4,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-5-TEX-I-1D44F\"></use></g></g></g></svg>为奇数,减去一个偶数再加上一个奇数,答案为2.</p>\n<p>若 <svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.185ex\" height=\"1.661ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2291.6 734\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-6-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-6-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-6-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(806.8,0)\"><use data-c=\"3C\" xlink:href=\"#MJX-6-TEX-N-3C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1862.6,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-6-TEX-I-1D44F\"></use></g></g></g></svg> ,且<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-7-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-7-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44F\" xlink:href=\"#MJX-7-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(651.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-7-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1651.4,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-7-TEX-I-1D44E\"></use></g></g></g></svg>为偶数,加上一个奇数再加上一个奇数,答案为2.</p>\n<p>若 <svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.185ex\" height=\"1.661ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2291.6 734\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-8-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path><path id=\"MJX-8-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-8-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(806.8,0)\"><use data-c=\"3E\" xlink:href=\"#MJX-8-TEX-N-3E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1862.6,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-8-TEX-I-1D44F\"></use></g></g></g></svg> ,且<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-9-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-9-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44F\" xlink:href=\"#MJX-9-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(651.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-9-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1651.4,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-9-TEX-I-1D44E\"></use></g></g></g></svg>为奇数,直接加上<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.933ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2180.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-10-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-10-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44F\" xlink:href=\"#MJX-10-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(651.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-10-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1651.4,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-10-TEX-I-1D44E\"></use></g></g></g></svg>即可,答案为1.</p>\n<!--more-->\n<h2 id=\"B-WeirdSort\"><a href=\"#B-WeirdSort\" class=\"headerlink\" title=\"B. WeirdSort\"></a>B. WeirdSort</h2>\n<p>对每个可以相互交换的连续区间排序,最后判断是否单调不减即可.</p>\n<h2 id=\"C-Perform-the-Combo\"><a href=\"#C-Perform-the-Combo\" class=\"headerlink\" title=\"C. Perform the Combo\"></a>C. Perform the Combo</h2>\n<p>记录在每个位置断连的次数,扫字符串的同时更新答案即可.</p>\n<p>最后要加一次全连.</p>\n<h2 id=\"D-Three-Integers\"><a href=\"#D-Three-Integers\" class=\"headerlink\" title=\"D. Three Integers\"></a>D. Three Integers</h2>\n<p>刚开始写的<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.434ex\" height=\"2.758ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -969 4170 1219\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-11-TEX-N-221A\" d=\"M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-11-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-11-TEX-I-1D441\"></use></g><g data-mml-node=\"msqrt\" transform=\"translate(2040,0)\"><g transform=\"translate(853,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-11-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(0,109)\"><use data-c=\"221A\" xlink:href=\"#MJX-11-TEX-N-221A\"></use></g><rect width=\"888\" height=\"60\" x=\"853\" y=\"849\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3781,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>算法：</p>\n<p>枚举B,令A为离A最近的B的一个因数,C为离C最近的B的一个倍数,维护最优解即可.</p>\n<p>找最近的因数只需枚举B的因数,与C最近的倍数一定是<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.182ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4500.4 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-12-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-12-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-12-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-12-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-12-TEX-N-2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-12-TEX-I-1D436\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1149,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-12-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1649,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-12-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2408,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3019.2,0)\"><use data-c=\"2217\" xlink:href=\"#MJX-12-TEX-N-2217\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3741.4,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-12-TEX-I-1D435\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.079ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6222.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-13-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-13-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-13-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-13-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-13-TEX-N-2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-13-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-13-TEX-I-1D436\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1149,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-13-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1649,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-13-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2630.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3630.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4130.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-13-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4741.7,0)\"><use data-c=\"2217\" xlink:href=\"#MJX-13-TEX-N-2217\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5463.9,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-13-TEX-I-1D435\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.079ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6222.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-14-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-14-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-14-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-14-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-14-TEX-N-2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-14-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-14-TEX-I-1D436\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1149,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-14-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1649,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-14-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2630.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-14-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3630.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4130.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-14-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4741.7,0)\"><use data-c=\"2217\" xlink:href=\"#MJX-14-TEX-N-2217\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5463.9,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-14-TEX-I-1D435\"></use></g></g></g></svg>之一.</p>\n<p>把枚举上界设成15000可以卡过</p>\n<p>题解是枚举A,然后枚举A的倍数作为B,然后确定C.</p>\n<p>根据调和级数求和,可知该算法复杂度<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.052ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4001 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-15-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-15-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-15-TEX-I-1D454\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-15-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-15-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1752,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-15-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2050,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-15-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2535,0)\"><use data-c=\"1D454\" xlink:href=\"#MJX-15-TEX-I-1D454\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3012,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-15-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3612,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg></p>\n<h2 id=\"E-Construct-the-Binary-Tree\"><a href=\"#E-Construct-the-Binary-Tree\" class=\"headerlink\" title=\"E. Construct the Binary Tree\"></a>E. Construct the Binary Tree</h2>\n<p>自然地想到可以从一条链的情况开始,每一次移动节点让答案减一.</p>\n<p>不考虑非叶节点的移动一定不会让答案更坏,所以只考虑叶节点的移动.</p>\n<p>因为移动是从下往上移动,所以如果先移动下方叶节点可能会在移动过程中被上方叶节点“挡住”,所以先考虑上方叶节点的移动.</p>\n<p>因为初始是一条链,并且按从上到下编号依次增大的顺序排列,所以初始只有一个叶节点,编号为<svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-16-TEX-I-1D441\"></use></g></g></g></svg>.</p>\n<p>用N个栈来维护第i层可以用来当作父节点的节点编号,如果一个节点为叶节点,那么他的编号将在对应的栈中出现两次,这样方便节点移动后更新栈的内容.使用栈来维护是因为这题没有对节点位置的要求,所以移动是只要是同一层的,选择哪个节点作为新的父节点都无所谓,并且入栈和出栈操作都是<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.618ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2041 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-17-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1152,0)\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1652,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg>.</p>\n<p>移动时注意不仅要更新新父节点的那一层的栈的状态,还要更新父节点和自己本身那一层的栈的状态.</p>\n<p>当一个叶节点无法继续移动时,由于初始是一条从上往下编号递增的链,所以如果这棵树还有可以移动的叶节点,那么他的编号一定是上一个叶节点编号-1.并且如果一个新的叶节点已经无法移动了,这棵树的答案就已经到了最小,如果此时的答案还未满足题目要求,那么题目的要求就不可能满足.方便写代码,可以当指定的叶节点的编号变为0时输出NO.</p>\n<p>另外,题解给出了一种简单的方法判断题目的要求是否能满足：节点数固定时,这棵树答案最大的形态是一条链,最小的形态是一颗满二叉树,因为可以通过一个节点的上下移动来在这两个形态之间变换,所以这两种形态的答案之间的所有答案都能满足,在这之外的都不能满足.</p>\n<h2 id=\"F-Moving-Points\"><a href=\"#F-Moving-Points\" class=\"headerlink\" title=\"F. Moving Points\"></a>F. Moving Points</h2>\n<p>因为速度是常量,时间没有限制,所以两个点要么距离越来越小,最后相遇,要么距离越来越大或不变,永远不会相遇.</p>\n<p>不失一般性地,考虑<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.937ex\" height=\"1.355ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -441 856 598.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-18-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-18-TEX-I-1D44E\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(562,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-18-TEX-I-1D456\"></use></g></g></g></g></g></svg>和<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.044ex\" height=\"1.663ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -441 903.3 735.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-19-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-19-TEX-I-1D44E\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(562,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-19-TEX-I-1D457\"></use></g></g></g></g></g></svg>两点,其中<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.192ex\" height=\"1.887ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -540 3178.8 834.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-20-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-20-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path><path id=\"MJX-20-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-20-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1176.7,0)\"><use data-c=\"3E\" xlink:href=\"#MJX-20-TEX-N-3E\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2232.5,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-20-TEX-I-1D457\"></use></g></g></g></g></g></svg>.若<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.798ex\" height=\"2.105ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 3004.8 930.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-I-1D463\" d=\"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z\"></path><path id=\"MJX-21-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-21-TEX-N-2A7D\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM94 170Q102 172 104 172Q110 171 254 103T535 -30T678 -98Q694 -106 694 -118Q694 -136 676 -138H670L382 -2Q92 135 90 137Q83 142 83 154Q84 164 94 170Z\"></path><path id=\"MJX-21-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D463\" xlink:href=\"#MJX-21-TEX-I-1D463\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(518,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-21-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1137.1,0)\"><use data-c=\"2A7D\" xlink:href=\"#MJX-21-TEX-N-2A7D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2192.9,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D463\" xlink:href=\"#MJX-21-TEX-I-1D463\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(518,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-21-TEX-I-1D456\"></use></g></g></g></g></g></svg>,这两点就永远不会相遇,d(i,j)为初始时两点的距离,即<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.941ex\" height=\"1.985ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -583 3067.7 877.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-22-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-22-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-22-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-22-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-22-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1121.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-22-TEX-N-2212\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2121.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-22-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-22-TEX-I-1D457\"></use></g></g></g></g></g></svg>,否则两点一定会在某一时刻相遇,d(i,j)为0.</p>\n<p>对于一个点<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.937ex\" height=\"1.355ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -441 856 598.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-23-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-23-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-23-TEX-I-1D44E\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(562,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-23-TEX-I-1D456\"></use></g></g></g></g></g></svg>,需要找到所有初始坐标小于这个点并且速度小于等于这个点的点,来<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.937ex\" height=\"1.355ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -441 856 598.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-24-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-24-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-24-TEX-I-1D44E\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(562,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-24-TEX-I-1D456\"></use></g></g></g></g></g></svg>计算对答案的贡献.</p>\n<p>这是一个二维偏序问题,不同的是为了计算贡献,我们不仅仅要计算满足这个条件的点的个数,同时也要计算满足这个条件的点的坐标之和.离散化之后使用两个树状数组,分别维护这两个信息即可.</p>\n","fc43eae6832f1b3f2207bfcbe9b299580945251a":"<p>今年一如既往还是期末预习, 计网学了大概一星期, 比其他所有课学的时间加起来都长. 学的也比较认真(埋下了操作系统翻车的伏笔), 中间还记了笔记, 主要记了数据链路层网络层和传输层(期末考试错了一个物理层一个应用层的题), 因为刚开始预习的时候记笔记的时候记了一天笔记都丢了, 所以这个笔记后来也被放到了github上. 最后计网总评91分, 课程排名在前5%. 感觉这种知识点散到离谱的学科速成的时候记笔记还是挺有用的.</p>\n<h1 id=\"Chapter-11-数据链路控制\"><a href=\"#Chapter-11-数据链路控制\" class=\"headerlink\" title=\"Chapter 11 数据链路控制\"></a>Chapter 11 数据链路控制</h1>\n<h2 id=\"HDLC\"><a href=\"#HDLC\" class=\"headerlink\" title=\"HDLC\"></a>HDLC</h2>\n<p>数据链路层可以提供不可靠的传输, 也可以提供可靠的传输.</p>\n<p>HDLC就是一种可靠的传输.</p>\n<h3 id=\"HDLC帧\"><a href=\"#HDLC帧\" class=\"headerlink\" title=\"HDLC帧\"></a>HDLC帧</h3>\n<ol>\n<li>标志(8位), 01111110, 为帧的开始标志.</li>\n<li>地址(8位)</li>\n<li>控制字(8位), 有三类：<strong>信息帧, 监督帧, 无编号帧</strong></li>\n<li>信息, 长度任意</li>\n<li>帧检测序列, 16位</li>\n<li>结束标志</li>\n</ol>\n<p><strong>PPP是面向字节的, HDLC是面向比特的</strong></p>\n<h1 id=\"Chapter-12-多路访问\"><a href=\"#Chapter-12-多路访问\" class=\"headerlink\" title=\"Chapter 12 多路访问\"></a>Chapter 12 多路访问</h1>\n<p>当一群东西共享介质的时候, 就需要点方法来控制这些东西说话.</p>\n<p>控制多路访问的方法有三类:</p>\n<ol>\n<li>随机访问\n<ol>\n<li>ALOHA</li>\n<li>CSMA</li>\n<li>CSMA/CD</li>\n<li>CSMA/CA(十四章)</li>\n</ol>\n</li>\n<li>受控访问\n<ol>\n<li>预约</li>\n<li>轮询</li>\n<li>令牌</li>\n</ol>\n</li>\n<li>通道化\n<ol>\n<li>TDM</li>\n<li>FDM</li>\n<li>...</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"随机访问\"><a href=\"#随机访问\" class=\"headerlink\" title=\"随机访问\"></a>随机访问</h2>\n<h3 id=\"ALOHA\"><a href=\"#ALOHA\" class=\"headerlink\" title=\"ALOHA\"></a>ALOHA</h3>\n<h4 id=\"纯ALOHA协议\"><a href=\"#纯ALOHA协议\" class=\"headerlink\" title=\"纯ALOHA协议\"></a>纯ALOHA协议</h4>\n<p>发, 发不出去就等 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18.428ex\" height=\"2.497ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -853.7 8145 1103.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-1-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-1-TEX-N-2217\" d=\"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z\"></path><path id=\"MJX-1-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45F\" xlink:href=\"#MJX-1-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(451,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-1-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(980,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1580,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-1-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2100,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2489,0)\"><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2989,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(3433.7,0)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-1-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4607.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5607.5,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6107.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6718.7,0)\"><use data-c=\"2217\" xlink:href=\"#MJX-1-TEX-N-2217\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7441,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g></g></g></svg> 再发, k++;(截断型二进制指数退让算法).</p>\n<p>T可以是Tp或者Tfr.</p>\n<p>可能冲突时间是<svg style=\"vertical-align: -0.667ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.072ex\" height=\"2.364ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4893.8 1045\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-2-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-2-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-2-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-2-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-2-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-2-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-2-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-2-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-2-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(500,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-2-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-2-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1361,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1706,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-2-TEX-I-1D45A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2584,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-2-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3050,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-2-TEX-I-1D460\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3519,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D447\" xlink:href=\"#MJX-2-TEX-I-1D447\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(617,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-2-TEX-I-1D453\"></use></g><g data-mml-node=\"mi\" transform=\"translate(550,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-2-TEX-I-1D45F\"></use></g></g></g></g></g></svg></p>\n<p>意思是在这一帧发之前的Tfr和开始发之后的Tfr内都有可能有人再发, 这时候发就会干扰这一帧.</p>\n<p>吞吐量 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.799ex\" height=\"2.135ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 4773 943.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-I-1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path><path id=\"MJX-3-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-3-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(922.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1978.6,0)\"><use data-c=\"1D43A\" xlink:href=\"#MJX-3-TEX-I-1D43A\"></use></g><g data-mml-node=\"msup\" transform=\"translate(2764.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-3-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1278,0)\"><use data-c=\"1D43A\" xlink:href=\"#MJX-3-TEX-I-1D43A\"></use></g></g></g></g></g></svg>, <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.63ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5582.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path><path id=\"MJX-4-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-4-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-4-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-4-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-4-TEX-I-1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43A\" xlink:href=\"#MJX-4-TEX-I-1D43A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1063.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-4-TEX-N-3D\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2119.6,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-4-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(2619.6,0)\"><use data-c=\"1D453\" xlink:href=\"#MJX-4-TEX-I-1D453\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3169.6,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-4-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3620.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-4-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4149.6,0)\"><use data-c=\"1D450\" xlink:href=\"#MJX-4-TEX-I-1D450\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(4582.6,0)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(5082.6,0)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g></g></g></g></svg>的时候取<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.741ex\" height=\"1.952ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2095.4 862.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-5-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-5-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-5-TEX-I-1D446\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45A\" xlink:href=\"#MJX-5-TEX-I-1D45A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(878,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-5-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1407,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-5-TEX-I-1D465\"></use></g></g></g></g></g></svg></p>\n<p>G是Tfr内系统产生帧的期望.</p>\n<h4 id=\"时隙ALOHA协议\"><a href=\"#时隙ALOHA协议\" class=\"headerlink\" title=\"时隙ALOHA协议\"></a>时隙ALOHA协议</h4>\n<p>纯aloha协议太拉了, 就有时隙ALOHA协议, 时间被分成了离散的.</p>\n<p>可能冲突时间少了一半, 只有Tfr</p>\n<p>吞吐量  <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.999ex\" height=\"2.135ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -861.5 4419.5 943.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-6-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-6-TEX-I-1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path><path id=\"MJX-6-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-6-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-6-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(922.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-6-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1978.6,0)\"><use data-c=\"1D43A\" xlink:href=\"#MJX-6-TEX-I-1D43A\"></use></g><g data-mml-node=\"msup\" transform=\"translate(2764.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-6-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"2212\" xlink:href=\"#MJX-6-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(778,0)\"><use data-c=\"1D43A\" xlink:href=\"#MJX-6-TEX-I-1D43A\"></use></g></g></g></g></g></svg>, <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.927ex\" height=\"1.781ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2619.6 787\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D43A\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z\"></path><path id=\"MJX-7-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-7-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43A\" xlink:href=\"#MJX-7-TEX-I-1D43A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1063.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-7-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2119.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-7-TEX-N-31\"></use></g></g></g></svg>的时候取<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.741ex\" height=\"1.952ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 2095.4 862.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-8-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-8-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-8-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-8-TEX-I-1D446\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(646,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45A\" xlink:href=\"#MJX-8-TEX-I-1D45A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(878,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-8-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1407,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-8-TEX-I-1D465\"></use></g></g></g></g></g></svg></p>\n<h3 id=\"CSMA协议\"><a href=\"#CSMA协议\" class=\"headerlink\" title=\"CSMA协议\"></a>CSMA协议</h3>\n<p>CSMA全称是载波侦听多路访问, 意思就是在发之前他会探一下信道是否空闲.</p>\n<p>CSMA常用有三种策略:</p>\n<ul>\n<li>\n<p>1-坚持型CSMA</p>\n<p>就是一直探, 能发就赶紧发, 不能发就一直探.</p>\n</li>\n<li>\n<p>p-坚持型CSMA</p>\n<p>一直探, 能发就以p的几率发, 否则就等一段固定的时间再探</p>\n</li>\n<li>\n<p>非坚持型CSMA</p>\n<p>能发就发, 不能发就随机延迟(二进制啥玩意的方法延迟)</p>\n</li>\n</ul>\n<h3 id=\"CSMA-CD协议\"><a href=\"#CSMA-CD协议\" class=\"headerlink\" title=\"CSMA/CD协议\"></a>CSMA/CD协议</h3>\n<p>带冲突检测的CSMA, 主要是CD部分.</p>\n<p>还是一直探, 能发就发, 发的时候听, 如果发现自己发的和听的不一样, 就说明冲突了, 停下来, 随机延迟避让.</p>\n<p>争用期/冲突窗口是<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.4ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5481 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-9-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-9-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-9-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-9-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-9-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-9-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(500,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-9-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-9-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1361,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1706,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-9-TEX-I-1D45A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2584,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-9-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3050,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-9-TEX-I-1D460\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3519,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-9-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(4019,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-9-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4380,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-9-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4909,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-9-TEX-I-1D462\"></use></g></g></g></svg> , 意思是这段时间听不到错误不代表一定能不冲突地发出去. 但是过了这段时间, 就说明信道抢占成功, 一定能发出去了.</p>\n<p>对于10M的以太网, 争用期规定为51.2us, 意思是只要把前512bits(64B)发送出去, 那以后就没人能干扰自己了.</p>\n<p>同时, 以太网的最小帧长也是这样来的, 64B.</p>\n<p>要注意的是, 对于100M, 1000M的以太网, 最小帧长也是64B, 只不过把争用时间减少了, 同时最大的网线长度也减少了.</p>\n<p>还有, 只有半双工的环境下需要CD, 全双工是不需要CD的.</p>\n<h5 id=\"截断型二进制指数退让算法\"><a href=\"#截断型二进制指数退让算法\" class=\"headerlink\" title=\"截断型二进制指数退让算法\"></a>截断型二进制指数退让算法</h5>\n<p>先选个基本时间, 一般就是<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.4ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5481 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-10-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-10-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-10-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-10-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-10-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-10-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-10-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(500,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-10-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-10-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1361,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-10-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1706,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-10-TEX-I-1D45A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2584,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-10-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3050,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-10-TEX-I-1D460\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3519,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-10-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(4019,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-10-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4380,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-10-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4909,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-10-TEX-I-1D462\"></use></g></g></g></svg> .</p>\n<p>然后k刚开始等于0, 碰撞一次就+1,</p>\n<p>然后等待rand[0,M] * 基本时间, 其中</p>\n<ol>\n<li><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"26.241ex\" height=\"2.48ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -846 11598.6 1096\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-11-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-11-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-11-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-11-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-11-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-11-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-11-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-11-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path><path id=\"MJX-11-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-11-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-11-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(500,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-11-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1000,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-11-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1298,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-11-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1764,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-11-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2224,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-11-TEX-I-1D441\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3112,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-11-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(3612,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-11-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3910,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-11-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4376,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-11-TEX-I-1D45E\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4836,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-11-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5836,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-11-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6280.7,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-11-TEX-I-1D440\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7609.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-11-TEX-N-3D\"></use></g><g data-mml-node=\"msup\" transform=\"translate(8665.2,0)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-11-TEX-I-1D441\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(10098.4,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-11-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(11098.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g></svg></li>\n<li><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.094ex\" height=\"2.452ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 15511.3 1083.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-12-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-12-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-12-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-12-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-12-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-12-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-12-TEX-N-35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path><path id=\"MJX-12-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-12-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path><path id=\"MJX-12-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-12-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-12-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-12-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(1000,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-12-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(1500,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-12-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1798,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-12-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2264,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-12-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2724,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-12-TEX-I-1D441\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(3612,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-12-TEX-N-2F\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(4112,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-12-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4410,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-12-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4876,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-12-TEX-I-1D45E\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5336,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use><use data-c=\"35\" xlink:href=\"#MJX-12-TEX-N-35\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6336,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-12-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6780.7,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-12-TEX-I-1D440\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8109.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"msup\" transform=\"translate(9165.2,0)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-12-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\" transform=\"translate(500,0)\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(10677.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-12-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(11677.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12455.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(13511.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"32\" xlink:href=\"#MJX-12-TEX-N-32\" transform=\"translate(1000,0)\"></use><use data-c=\"33\" xlink:href=\"#MJX-12-TEX-N-33\" transform=\"translate(1500,0)\"></use></g></g></g></svg></li>\n<li><svg style=\"vertical-align: -0.452ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20.613ex\" height=\"2.149ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9110.9 950\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-13-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-13-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-13-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-13-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-13-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2221.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use><use data-c=\"36\" xlink:href=\"#MJX-13-TEX-N-36\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3221.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-13-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3666.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">直</text></g><g data-mml-node=\"mi\" transform=\"translate(4666.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">接</text></g><g data-mml-node=\"mi\" transform=\"translate(5666.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">扔</text></g><g data-mml-node=\"mi\" transform=\"translate(6666.2,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">了</text></g><g data-mml-node=\"mo\" transform=\"translate(7666.2,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-13-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8110.9,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">爬</text></g></g></g></svg></li>\n</ol>\n<h2 id=\"受控访问\"><a href=\"#受控访问\" class=\"headerlink\" title=\"受控访问\"></a>受控访问</h2>\n<p>我感觉就考一个令牌.</p>\n<h3 id=\"令牌\"><a href=\"#令牌\" class=\"headerlink\" title=\"令牌\"></a>令牌</h3>\n<p>就是网络是个圈, 有个特殊的帧在圈里转, 拿到了帧的才能发数据.</p>\n<h1 id=\"Chapter-13-以太网\"><a href=\"#Chapter-13-以太网\" class=\"headerlink\" title=\"Chapter 13 以太网\"></a>Chapter 13 以太网</h1>\n<p>局域网是形容网络规模的, 以太网是在局域网中一中最受欢迎的解决方案.</p>\n<p>局域网的控制方法主要有CSMA/CD, 令牌总线/令牌环. 前两种用于线性网, 最后一种用于环形网.</p>\n<p>以太网有两个标准:</p>\n<ol>\n<li>DIX Ethernet V2</li>\n<li>802.3</li>\n</ol>\n<p>主要都用第一种, 第二种基本没人用了.</p>\n<p>所以我大胆推测只考第一种.</p>\n<p>注意, 数据链路层不提供重传, 以太网也是不可靠的. 但是这并不代表以太网一定不会重传. 以太网会在确定自己数据对面一定接收不到的时候重传, 例如CSMA/CD中数据都没发完, 那肯定要重传的. 但是当他不确定对方是不是没收到的时候, 他就不会重传, 所以他还是不可靠的.</p>\n<h2 id=\"以太网的MAC帧\"><a href=\"#以太网的MAC帧\" class=\"headerlink\" title=\"以太网的MAC帧\"></a>以太网的MAC帧</h2>\n<p>同样的, 以太网还是根据标准不同有两种MAC帧, 主要只看V2版本的.</p>\n<p><img src=\"/img/Chapter11-15/image-20210620162503357.png\" alt=\"image-20210620162503357\"></p>\n<ol>\n<li>前导码, 8Bytes, 这个是物理层加进去的, 前7B叫前同步码, 最后一个Byte叫帧开始定界符. MAC帧是不需要结束符的, 因为每一个帧都有开始符.</li>\n<li>目的地址, 源地址, 都是6Bytes.</li>\n<li>类型. 这个是说明这个帧交给上层哪个协议处理的, 例如IP数据包. 好像不重要.</li>\n<li>数据, 长度为46-1500Bytes. 46是因为一个帧最小64B, 减去18Bytes的其他东西, 这个东西至少46B. 1500是规定的, 记住就好. 如果不到46B, 就补成46B.</li>\n<li>校验码, 就是CRC. 校验了包括目的地址开始到数据结束的所有东西, 但是不包括前导码, 因为那个是物理层的哈哈.</li>\n</ol>\n<p>802.3的格式与V2的区别:</p>\n<ol>\n<li>帧起始标志不一样.</li>\n<li>没有类型了, 改成了长度.</li>\n</ol>\n<p><strong>以太网的MAC层提供的是无连接不可靠的服务</strong>, 但不代表所有链路层的东西都是无连接不可靠的.</p>\n<h2 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h2>\n<p>传统以太网主要有四种介质:</p>\n<ul>\n<li>10Base5 (粗缆)</li>\n<li>10Base2 (细缆)</li>\n<li>10Base-F (Fiber 光纤)</li>\n<li>10Base-T (T啥的 双绞线)</li>\n</ul>\n<p>第一个数字表示速率, 第二个Base基带信号, 采用曼彻斯特编码.</p>\n<p>后面的数字表示电缆最长距离, 500m/200m(实际上185m).</p>\n<h2 id=\"MAC地址\"><a href=\"#MAC地址\" class=\"headerlink\" title=\"MAC地址\"></a>MAC地址</h2>\n<p>MAC地址, 6个字节.</p>\n<p>第一个字节最后一位表明单播还是组播.</p>\n<p>最后一位是0是单播地址, 是1就是多播地址.</p>\n<h1 id=\"Chapter-14-无线局域网\"><a href=\"#Chapter-14-无线局域网\" class=\"headerlink\" title=\"Chapter 14 无线局域网\"></a>Chapter 14 无线局域网</h1>\n<p>协议IEEE 802.11</p>\n<p>还是定义了物理层和数据链路层.</p>\n<p>BSS就是一小块连在一起的移动站和一个基站, BSS内部他们可以互相通信.</p>\n<p>一个BSS可以是独立的, 也可以连到一个主干分配系统(DS)组成一个ESS.</p>\n<p>ESS也可以通过门桥连到其他标准的局域网, 例如有线的因特网, 这里的门桥就相当于网桥.</p>\n<h2 id=\"两大问题\"><a href=\"#两大问题\" class=\"headerlink\" title=\"两大问题\"></a>两大问题</h2>\n<h3 id=\"隐蔽站问题\"><a href=\"#隐蔽站问题\" class=\"headerlink\" title=\"隐蔽站问题\"></a>隐蔽站问题</h3>\n<p>A想发给B东西, A看没人发东西, 就给B发了, 但是另一个方向C也在给B发东西A看不到, 数据就坏了.</p>\n<h3 id=\"暴露站问题\"><a href=\"#暴露站问题\" class=\"headerlink\" title=\"暴露站问题\"></a>暴露站问题</h3>\n<p>A在发给B东西, 同时C也想给D发东西, 虽然A发的东西D接收不到, 但是C能接收到, 就不敢发, 浪费了时间.</p>\n<p><strong>这些问题决定了无线局域网不能使用CSMA/CD协议.</strong></p>\n<h2 id=\"CSMA-CA协议\"><a href=\"#CSMA-CA协议\" class=\"headerlink\" title=\"CSMA/CA协议\"></a>CSMA/CA协议</h2>\n<p>带有碰撞避免的CSMA.</p>\n<p><img src=\"/img/Chapter11-15/image-20210620170337714.png\" alt=\"image-20210620170337714\"></p>\n<p>CSMA/CA主要有三个东西:</p>\n<p>帧间间隔(IFS), 竞争窗口和确认.</p>\n<p>CSMA/CA有好多种帧间间隔, SIFS/PIFS/EIFS啥玩意的, 不同的东西发之前会等不同的IFS, SIFS是最短的, CTS/ACK什么玩意的之前就只等一个SIFS.</p>\n<p>竞争窗口就是等完IFS之后,判断一下是否空闲, 然后类似二进制退让算法, 他会等R(随机的, 就是二进制退让算法那样随机)个slots, 每个slots之后都会判断信道是否空闲, 如果不空闲就卡住, 等空闲了继续从刚刚数到的位置继续数.</p>\n<p>确认就是发送之后他还要确认, 如果超时了还没收到ACK, K++, 从等IFS之前再重来.</p>\n<h2 id=\"RTS-CTS\"><a href=\"#RTS-CTS\" class=\"headerlink\" title=\"RTS/CTS\"></a>RTS/CTS</h2>\n<p>为了解决隐蔽站问题, RTS/CTS方法可以选用:</p>\n<p>A要发给B帧之前, 先发一个RTS, 让A旁边的傻逼们闭嘴.</p>\n<p>B收到RTS之后, 再发一个CTS, 让B旁边的nt们小点声.</p>\n<p>然后A和B就可以bb了.</p>\n<p>暴露站问题解决成本要大于效益, 所以就不解决了.</p>\n<p>要解决的话要把数据信道和控制信道分离.</p>\n<h2 id=\"DCF-PCF\"><a href=\"#DCF-PCF\" class=\"headerlink\" title=\"DCF/PCF\"></a>DCF/PCF</h2>\n<p>802.11的MAC层有两个子层, 下层是DCF, DCF之上有PCF.</p>\n<p>DCF采用了CSMA/CA协议.</p>\n<p>PCF在DCF之上实现, 采用轮询访问协议.</p>\n<p>RTS/CTS是独立于他们的可选项, 与DCF/PCF好像无关.</p>\n<p>PCF的优先级要比DCF高.</p>\n<h2 id=\"帧格式\"><a href=\"#帧格式\" class=\"headerlink\" title=\"帧格式\"></a>帧格式</h2>\n<p>我感觉不考.</p>\n<p>控制帧有三种:RTS/CTS/ACK帧</p>\n<h2 id=\"寻址机制\"><a href=\"#寻址机制\" class=\"headerlink\" title=\"寻址机制\"></a>寻址机制</h2>\n<p><img src=\"/img/Chapter11-15/image-20210620172128842.png\" alt=\"image-20210620172128842\"></p>\n<p><img src=\"/img/Chapter11-15/image-20210620172138820.png\" alt=\"image-20210620172138820\"></p>\n<p>非常罕见的ppt说的我能听懂.</p>\n<h1 id=\"Chapter-15-连接局域网主干网-虚拟局域网\"><a href=\"#Chapter-15-连接局域网主干网-虚拟局域网\" class=\"headerlink\" title=\"Chapter 15 连接局域网主干网, 虚拟局域网\"></a>Chapter 15 连接局域网主干网, 虚拟局域网</h1>\n<h2 id=\"物理层连接\"><a href=\"#物理层连接\" class=\"headerlink\" title=\"物理层连接\"></a>物理层连接</h2>\n<h3 id=\"中继器\"><a href=\"#中继器\" class=\"headerlink\" title=\"中继器\"></a>中继器</h3>\n<p>是regenerator(数字信号), 不是amplifier(模拟信号).</p>\n<p>中继器就是集线器的前身.</p>\n<h3 id=\"无源集线器\"><a href=\"#无源集线器\" class=\"headerlink\" title=\"无源集线器\"></a>无源集线器</h3>\n<p><img src=\"/img/Chapter11-15/image-20210620201714249.png\" alt=\"image-20210620201714249\"></p>\n<p>就是直接连起来而已</p>\n<h3 id=\"有源集线器\"><a href=\"#有源集线器\" class=\"headerlink\" title=\"有源集线器\"></a>有源集线器</h3>\n<p>还可以对信号放大再生.</p>\n<p><strong>以上都是物理层设备</strong></p>\n<h2 id=\"数据链路层连接\"><a href=\"#数据链路层连接\" class=\"headerlink\" title=\"数据链路层连接\"></a>数据链路层连接</h2>\n<h3 id=\"网桥\"><a href=\"#网桥\" class=\"headerlink\" title=\"网桥\"></a>网桥</h3>\n<p>数据链路层设备, 相较于物理层设备, 他有更复杂的控制逻辑, 可以避免不必要的转发.</p>\n<h4 id=\"透明网桥\"><a href=\"#透明网桥\" class=\"headerlink\" title=\"透明网桥\"></a>透明网桥</h4>\n<p>透明网桥的透明体现在它可以即插即用, 不需要人工配置转发表.</p>\n<h5 id=\"透明网桥的自学习算法\"><a href=\"#透明网桥的自学习算法\" class=\"headerlink\" title=\"透明网桥的自学习算法\"></a>透明网桥的自学习算法</h5>\n<p>透明网桥的自学习算法可以帮助透明网桥配置转发表.</p>\n<p>其实就是一个设备给他发帧, 帧里面肯定有他的MAC地址, 网桥也知道他从哪个端口发过来的, 就在他的转发表加上一个他的MAC地址和端口的行就行了.</p>\n<p>同时, 他会记录这个帧进入的时间, 并且在转发表有这一项的时候更新时间. 如果转发表没有这个MAC地址, 他就广播帧.</p>\n<h5 id=\"生成树\"><a href=\"#生成树\" class=\"headerlink\" title=\"生成树\"></a>生成树</h5>\n<p>为了避免数据在网络内转着跑, 透明网桥会使用生成树算法来生成树, 具体算法考研不做要求, 我猜考试也不考.</p>\n<h4 id=\"源选径网桥\"><a href=\"#源选径网桥\" class=\"headerlink\" title=\"源选径网桥\"></a>源选径网桥</h4>\n<p>用一个神奇的好像不考的算法得到了最佳路由, 反正知道他是最佳路由就好.</p>\n<p>最佳路由并不是一定就是经过路由器最少的路由, 他可能也是花费时间最少的路由, 这样也有利于负载均衡. 一个路由器数据太多卡住了, 就会换一个可能更远的路由.</p>\n<h3 id=\"二层交换机\"><a href=\"#二层交换机\" class=\"headerlink\" title=\"二层交换机\"></a>二层交换机</h3>\n<p>普通的交换机一般指的是二层交换机, 就是工作在数据链路层的交换机.</p>\n<p>他就是一个多端口的网桥.</p>\n<p>一般工作在全双工模式.</p>\n<h4 id=\"交换机总容量\"><a href=\"#交换机总容量\" class=\"headerlink\" title=\"交换机总容量\"></a>交换机总容量</h4>\n<p>交换机的给每个用户的带宽并不会因为用户的增加而减少.</p>\n<p>相反, 用户增加后, 交换机的总容量也会增加.</p>\n<p><strong>全双工下:</strong> 总容量=用户数*带宽 * 2</p>\n<p><strong>半双工下:</strong> 总容量=用户数*带宽</p>\n<p><strong>题目不说, 默认半双工</strong></p>\n<h4 id=\"交换机的两种工作模式\"><a href=\"#交换机的两种工作模式\" class=\"headerlink\" title=\"交换机的两种工作模式\"></a>交换机的两种工作模式</h4>\n<h5 id=\"存储转发\"><a href=\"#存储转发\" class=\"headerlink\" title=\"存储转发\"></a>存储转发</h5>\n<p>先全接收完, 检查数据是否正确, 正确才去查转发表转发.</p>\n<h5 id=\"直通式交换\"><a href=\"#直通式交换\" class=\"headerlink\" title=\"直通式交换\"></a>直通式交换</h5>\n<p>收到目的地址就直接一个一个位发出去, 不检查了.</p>\n<p>这种方式很快, 但是缺乏安全性, 也不支持不同速率端口的交换.</p>\n<p><strong>交换机和网桥差不多, 自学习转发表</strong></p>\n<h2 id=\"冲突域和广播域\"><a href=\"#冲突域和广播域\" class=\"headerlink\" title=\"冲突域和广播域\"></a>冲突域和广播域</h2>\n<h3 id=\"冲突域\"><a href=\"#冲突域\" class=\"headerlink\" title=\"冲突域\"></a>冲突域</h3>\n<p>冲突域就是只用第一层设备连接起来的物理层链路, 这种链路中只要有一个人发东西, 所有人都能听到, 如果在以太网中, 其他所有人还都不能说话, 所以叫冲突域.</p>\n<p>如果中间加一个二层设备, 例如交换机, 他会隔绝不需要转发的帧, 只有当他不知道发给谁的时候他才会广播. 这样, 这个交换机就起到了隔离冲突域的作用, 所以冲突域是一个一级网络的概念, 二层设备可以隔离冲突域.</p>\n<h3 id=\"广播域\"><a href=\"#广播域\" class=\"headerlink\" title=\"广播域\"></a>广播域</h3>\n<p>广播域就是能收到广播的范围, 交换机在广播的时候, 会把与自己相联的所有设备全部广播一遍, 所以二层设备不能隔离广播域.</p>\n<p>但是路由器默认不转发广播, 所以路由器这种三层设备可以隔离广播域.</p>\n","d68ac503561a2dd9772c3fb89f83d590a785c20f":"<h1 id=\"CF1305-Div-1-Div-2\"><a href=\"#CF1305-Div-1-Div-2\" class=\"headerlink\" title=\"CF1305 (Div.1 + Div.2)\"></a>CF1305 (Div.1 + Div.2)</h1>\n<p><a href=\"https://codeforces.com/contest/1305\">Ozon Tech Challenge 2020 (Div.1 + Div.2, Rated, T-shirts + prizes!)</a></p>\n<h2 id=\"A-Kuroni-and-the-Gifts\"><a href=\"#A-Kuroni-and-the-Gifts\" class=\"headerlink\" title=\"A. Kuroni and the Gifts\"></a>A. Kuroni and the Gifts</h2>\n<p>排个序就行了</p>\n<!--more-->\n<h2 id=\"B-Kuroni-and-Simple-Strings\"><a href=\"#B-Kuroni-and-Simple-Strings\" class=\"headerlink\" title=\"B. Kuroni and Simple Strings\"></a>B. Kuroni and Simple Strings</h2>\n<p>觉得应该和第三题换一下比较好.</p>\n<p>为了求稳写了个模拟,从左往右每次扫到左括号的个数小于等于右括号的最后一个左括号时,就把前面的左括号和最后几个右括号同时删掉.</p>\n<p>但是可以发现只用删一次,剩下的一定不是合法括号串.</p>\n<h2 id=\"C-Kuroni-and-Impossible-Calculation\"><a href=\"#C-Kuroni-and-Impossible-Calculation\" class=\"headerlink\" title=\"C. Kuroni and Impossible Calculation\"></a>C. Kuroni and Impossible Calculation</h2>\n<p>坑比题,由抽屉原理可知<svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.404ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3272.6 723\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-1-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"></path><path id=\"MJX-1-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-1-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3E\" xlink:href=\"#MJX-1-TEX-N-3E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-1-TEX-I-1D440\"></use></g></g></g></svg>时一定有两个数字同余,直接输出0.</p>\n<p><svg style=\"vertical-align: -0.09ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.404ex\" height=\"1.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3272.6 723\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-2-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-2-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-2-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3C\" xlink:href=\"#MJX-2-TEX-N-3C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-2-TEX-I-1D440\"></use></g></g></g></svg>n方暴力就行.</p>\n<h2 id=\"D-Kuroni-and-the-Celebration\"><a href=\"#D-Kuroni-and-the-Celebration\" class=\"headerlink\" title=\"D. Kuroni and the Celebration\"></a>D. Kuroni and the Celebration</h2>\n<p>交互题,第一次做,比赛时没敢开,其实很简单的.</p>\n<p>每次选两个叶节点询问,如果这两个叶节点的lca是其中一个叶节点,那答案已经就是这个叶节点,否则删掉这连个点,继续询问.</p>\n<h2 id=\"E-Kuroni-and-the-Score-Distribution\"><a href=\"#E-Kuroni-and-the-Score-Distribution\" class=\"headerlink\" title=\"E. Kuroni and the Score Distribution\"></a>E. Kuroni and the Score Distribution</h2>\n<p>可以发现,对于固定的N,[1,2,...,N]是balance最多的序列,所以M&gt;这个序列的balance时一定是-1.</p>\n<p>同时,从[1,2,...,N]到[1,2,...,N+1],balance多了<svg style=\"vertical-align: -0.781ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.765ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -877 1955.9 1222\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-N-230A\" d=\"M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z\"></path><path id=\"MJX-3-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-3-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-3-TEX-N-230B\" d=\"M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"230A\" xlink:href=\"#MJX-3-TEX-N-230A\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(444,0)\"><g data-mml-node=\"mi\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-3-TEX-I-1D441\"></use></g><g data-mml-node=\"mn\" transform=\"translate(357.2,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(1511.9,0)\"><use data-c=\"230B\" xlink:href=\"#MJX-3-TEX-N-230B\"></use></g></g></g></svg>.</p>\n<p>可以先找出最大的N,使[1,...,N]的balance不大于M,用t代表这个序列的balance与M的差值,显然,这个t是小于<svg style=\"vertical-align: -0.781ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.425ex\" height=\"2.765ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -877 1955.9 1222\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-230A\" d=\"M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z\"></path><path id=\"MJX-4-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-4-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-4-TEX-N-230B\" d=\"M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"230A\" xlink:href=\"#MJX-4-TEX-N-230A\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(444,0)\"><g data-mml-node=\"mi\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-4-TEX-I-1D441\"></use></g><g data-mml-node=\"mn\" transform=\"translate(357.2,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(1511.9,0)\"><use data-c=\"230B\" xlink:href=\"#MJX-4-TEX-N-230B\"></use></g></g></g></svg>的.</p>\n<p>然后,输出这个序列倒数第一个(即N)与倒数第(2*t)个(即<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.385ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 5916.3 765\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-5-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-5-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-5-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-5-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-5-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-5-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1110.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-5-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2110.4,0)\"><use data-c=\"32\" xlink:href=\"#MJX-5-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2832.7,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-5-TEX-N-D7\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3832.9,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-5-TEX-I-1D461\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4416.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-5-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5416.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg>)的和,这样就可以多出t对数与新输出的这个数组成一个合法对.</p>\n<p>如果此时还剩下数没有输出,可以按照<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.319ex\" height=\"1.717ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 6770.9 759\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-6-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-6-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-6-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-6-TEX-I-1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path><path id=\"MJX-6-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-6-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-6-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-6-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-6-TEX-I-1D452\"></use></g><g data-mml-node=\"mn\" transform=\"translate(966,0)\"><use data-c=\"38\" xlink:href=\"#MJX-6-TEX-N-38\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1688.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-6-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2688.4,0)\"><use data-c=\"1D450\" xlink:href=\"#MJX-6-TEX-I-1D450\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3121.4,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-6-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3721.4,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-6-TEX-I-1D461\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4304.7,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-6-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5304.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5804.9,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-6-TEX-I-1D452\"></use></g><g data-mml-node=\"mn\" transform=\"translate(6270.9,0)\"><use data-c=\"34\" xlink:href=\"#MJX-6-TEX-N-34\"></use></g></g></g></svg>输出剩下的数,其中cnt代表剩下的第几个数.因为前面的数不会大于1e4,而cnt不会大于5e3,所以新输出的数不会超过2e8,这样就保证的新输出的这些数不会影响到这个序列的balance.</p>\n","4a443f89da36ded9086916b9c1e575f44c390305":"<p>现在是6月22日下午15:38, 学不完了</p>\n<p>期末速成计网这种层次感分明的东西有种爬天梯的感觉.</p>\n<h1 id=\"Chapter-23-24-UDP-TCP和SCTP-拥塞控制和服务质量\"><a href=\"#Chapter-23-24-UDP-TCP和SCTP-拥塞控制和服务质量\" class=\"headerlink\" title=\"Chapter 23/24 UDP,TCP和SCTP/拥塞控制和服务质量\"></a>Chapter 23/24 UDP,TCP和SCTP/拥塞控制和服务质量</h1>\n<p>传输层概述(自己编的):</p>\n<p>传输层提供的是端到端的逻辑通信, 一台主机上的所有进程<strong>复用</strong>同一个IP层. 数据到了传输层, 就会被<strong>分用</strong>到不同的应用程序上.</p>\n<p>传输层所有功能:</p>\n<ol>\n<li>应用进程的逻辑通信</li>\n<li>差错检测</li>\n<li>无连接或者面向连接的服务\n<ol>\n<li>无连接</li>\n<li>面向连接\n<ol>\n<li>连接管理(三次握手)</li>\n<li>流量控制/拥塞控制</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>复用/分用</li>\n</ol>\n<p>我们经常说传输层是可靠的, 但是传输层的UDP并不提供可靠性, 所以说传输层是可靠的是面对TCP来说的. 实际上每一层都有可靠和不可靠的协议, 单独直接说某一层可靠或者不可靠是笼统的. 例如在几十年前人们都说链路层就已经是可靠的了, 是因为那时候链路层普遍使用了HDLC协议. 现在由于网络质量改善, 链路层普遍使用了不可靠的PPP协议, 我们又说链路层是不可靠的了. 同样, 有无连接也是这样的, 现在我们说网络层无连接, TCP才提供了连接, 是因为IP协议是无连接的, 之前的X.25之类有连接的网络层协议被淘汰了而已.</p>\n<p>马上就要考试了这么多没学我还在这写这些东西, 迟早要挂.</p>\n<h2 id=\"熟知的端口号\"><a href=\"#熟知的端口号\" class=\"headerlink\" title=\"熟知的端口号\"></a>熟知的端口号</h2>\n<p>常识</p>\n<ol>\n<li>FTP: 20(数据),21(控制)</li>\n<li>Telnet: 23</li>\n<li>SMTP: 25</li>\n<li>DNS: 53</li>\n<li>TFTP: 69</li>\n<li>HTTP: 80</li>\n<li>SNMP: 161</li>\n</ol>\n<h2 id=\"套接字\"><a href=\"#套接字\" class=\"headerlink\" title=\"套接字\"></a>套接字</h2>\n<p>套接字就是IP+端口号.</p>\n<h2 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h2>\n<p>常识就不多说了.</p>\n<h3 id=\"UDP校验\"><a href=\"#UDP校验\" class=\"headerlink\" title=\"UDP校验\"></a>UDP校验</h3>\n<p>UDP的头只记录了源端口, 目的端口, 和数据的长度(包括头部).</p>\n<p>在检验的时候, 需要加一个12B的伪头部一起校验, 但是这终究还是个伪头部, 不会被发出去.</p>\n<p>伪头部里包含了源IP和目的IP, 还有一些奇怪的东西.</p>\n<p>校验就是把从首部到数据结束的所有东西两个字节两个字节加在一起, 如果数据不是偶数就要补一个0字节.</p>\n<p>注意, 校验过程中遇到的校验位按照0算.</p>\n<p>算出来一个2B的东西, 取反就是校验位.</p>\n<p>验证的时候把校验位和所有东西加在一起, 如果结果是全1, 就说明数据没大问题.</p>\n<h2 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h2>\n<h3 id=\"段格式\"><a href=\"#段格式\" class=\"headerlink\" title=\"段格式\"></a>段格式</h3>\n<p>我服了, 这nm全要背.</p>\n<p><img src=\"/img/Chapter23-24.assets/image-20210622163103789.png\" alt=\"image-20210622163103789\"></p>\n<ol>\n<li>懒得解释了</li>\n<li>懒得解释了</li>\n<li>序号, 就是Seq, 现在要发的第一个字节的编号. 注意TCP是给字节编号, 所以如果这个TCP发了100B数据, Seq=701, 下一个TCP的Seq=801</li>\n<li>确认号, 字节编号, 是累积确认, 是期望得到的下一个字节的编号.</li>\n<li>数据偏移, 其实就是头部的长度, 跟IP首部长度一样, 单位是4B. 注意这个跟IP分段的那个数据偏移不一样.</li>\n<li>保留字段,  现在没用.</li>\n<li>紧急URG, 表示这个TCP包比较急, 从开始到紧急指针指向的地方这部分数据不进缓冲区直接发出去吧, 剩下的数据还是要进缓冲区的.</li>\n<li>确认ACK, ACK=1的时候确认号才有用. 一旦TCP建立了, ACK必须都要为1.</li>\n<li>推送PSH, 这个数据也急, 但是不完全急, 要进缓冲区, 但是进了缓冲区就赶紧交付给上层, 不要等缓冲区满了再交付.</li>\n<li>复位RST, RST=1的时候, 表示出了大问题, 要把TCP断掉重连.</li>\n<li>同步SYN, 建立连接用的.</li>\n<li>终止FIN, 终止连接标志.</li>\n<li>窗口字段, 表示接收方现在还有多少接收缓存.</li>\n<li>校验和, 和UDP一样, 计算的时候要加假头(假头的内容和UDP有一个东西不一样, 要把17改成6)</li>\n<li>紧急指针, 就是开始到这里的数据都是紧急数据, 在URG里面提到过.</li>\n<li>选项字段, 长度可变.</li>\n<li>填充字段, 要把整个首部填成4B的整数倍.</li>\n</ol>\n<h3 id=\"TCP连接建立\"><a href=\"#TCP连接建立\" class=\"headerlink\" title=\"TCP连接建立\"></a>TCP连接建立</h3>\n<p>经典三次握手.</p>\n<ol>\n<li>发送方发, SYN = 1, Seq = x. 这时不能带数据.</li>\n<li>服务器发, SYN = 1, Seq = y, ACK = x+1. 这时也不能带数据.</li>\n<li>发送方发, SYN = 0, Seq = x+1, ACK = y+1. 可以带数据发了.</li>\n</ol>\n<p><strong>只有最后一个段能带数据发, 但是所有的段都占用了编号</strong></p>\n<h3 id=\"TCP连接拆除\"><a href=\"#TCP连接拆除\" class=\"headerlink\" title=\"TCP连接拆除\"></a>TCP连接拆除</h3>\n<p>经典四次挥手.</p>\n<ol>\n<li>要关闭连接的一方A发, FIN = 1, Seq = u.</li>\n<li>B发, ACK = u+1, Seq = v. 这时候B有可能还有数据要发, B会接着发, A这时候也要接着收, 但是A不会再发东西了.</li>\n<li>B数据发完了, 发FIN=1, Seq = w, ACK = u+1. B到了LAST-ACK.</li>\n<li>A发, ACK = w+1, Seq = u+1.</li>\n</ol>\n<p><strong>FIN只有第一次和第三次为1</strong></p>\n<h3 id=\"TCP可靠传输机制\"><a href=\"#TCP可靠传输机制\" class=\"headerlink\" title=\"TCP可靠传输机制\"></a>TCP可靠传输机制</h3>\n<h4 id=\"序号\"><a href=\"#序号\" class=\"headerlink\" title=\"序号\"></a>序号</h4>\n<p>TCP每次建立连接的时候, 都要选择一个不同的初始序号.</p>\n<h4 id=\"重传\"><a href=\"#重传\" class=\"headerlink\" title=\"重传\"></a>重传</h4>\n<p>首先, 发送方会动态估计RTT.</p>\n<p><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"39.1ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 17282.3 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path><path id=\"MJX-1-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-I-1D6FC\" d=\"M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-1-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-1-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-1-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(759,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1463,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2444.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3500.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3889.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4611.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5612,0)\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-1-TEX-I-1D6FC\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6252,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6863.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-1-TEX-N-D7\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7863.4,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">旧</text></g><g data-mml-node=\"mi\" transform=\"translate(8863.4,0)\"><use data-c=\"1D445\" xlink:href=\"#MJX-1-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9622.4,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10326.4,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11252.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-1-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12252.9,0)\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-1-TEX-I-1D6FC\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13115.1,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-1-TEX-N-D7\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14115.3,0)\"><text data-variant=\"normal\" transform=\"scale(1,-1)\" font-size=\"884px\" font-family=\"serif\">新</text></g><g data-mml-node=\"mi\" transform=\"translate(15115.3,0)\"><use data-c=\"1D445\" xlink:href=\"#MJX-1-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15874.3,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g><g data-mml-node=\"mi\" transform=\"translate(16578.3,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g></g></g></svg></p>\n<p>然后, 超时重传时间<svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"17.002ex\" height=\"2.034ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 7515 899\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path><path id=\"MJX-2-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-2-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D6FD\" d=\"M29 -194Q23 -188 23 -186Q23 -183 102 134T186 465Q208 533 243 584T309 658Q365 705 429 705H431Q493 705 533 667T573 570Q573 465 469 396L482 383Q533 332 533 252Q533 139 448 65T257 -10Q227 -10 203 -2T165 17T143 40T131 59T126 65L62 -188Q60 -194 42 -194H29ZM353 431Q392 431 427 419L432 422Q436 426 439 429T449 439T461 453T472 471T484 495T493 524T501 560Q503 569 503 593Q503 611 502 616Q487 667 426 667Q384 667 347 643T286 582T247 514T224 455Q219 439 186 308T152 168Q151 163 151 147Q151 99 173 68Q204 26 260 26Q302 26 349 51T425 137Q441 171 449 214T457 279Q457 337 422 372Q380 358 347 358H337Q258 358 258 389Q258 396 261 403Q275 431 353 431Z\"></path><path id=\"MJX-2-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-2-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(759,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-2-TEX-I-1D447\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1463,0)\"><use data-c=\"1D442\" xlink:href=\"#MJX-2-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2503.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3559.6,0)\"><use data-c=\"1D6FD\" xlink:href=\"#MJX-2-TEX-I-1D6FD\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4347.8,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-2-TEX-N-D7\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5348,0)\"><use data-c=\"1D445\" xlink:href=\"#MJX-2-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6107,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-2-TEX-I-1D447\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6811,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-2-TEX-I-1D447\"></use></g></g></g></svg></p>\n<p>这个方法只有在TCP有用, UDP没有重传, 所以不需要.</p>\n<p>即使链路层是完美的, 这些可靠传输机制也是必要的. 数据报可能会因经过的路由不同而失序, 或者路由错误计算导致TTL减到0, 或者中间某个路由器缓存炸了.</p>\n<h3 id=\"TCP流量控制\"><a href=\"#TCP流量控制\" class=\"headerlink\" title=\"TCP流量控制\"></a>TCP流量控制</h3>\n<h4 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h4>\n<p>发送方和接收方都维护了一个滑动窗口, 长度在连接过程中会协商.</p>\n<p>这个窗口和之前ARQ的窗口差不多, 注意就是发送方和接收方的窗口大小都是不固定的. 而且TCP的序号没有限制, 所以不会出现特别奇怪的问题.</p>\n<h4 id=\"超时\"><a href=\"#超时\" class=\"headerlink\" title=\"超时\"></a>超时</h4>\n<p>TCP为每个发送的报文段设置单独的计时器, 计时器超过RTO的时还没收到ACK就会重发.</p>\n<h4 id=\"快速重传\"><a href=\"#快速重传\" class=\"headerlink\" title=\"快速重传\"></a>快速重传</h4>\n<p>如果发送方连续接收到三次同一个ACK, 就知道那个数据肯定出事了, 就会直接重传那一个. 不用等到超时.</p>\n<h4 id=\"零窗口\"><a href=\"#零窗口\" class=\"headerlink\" title=\"零窗口\"></a>零窗口</h4>\n<p>接收方返回的ACK里面包含了接收方的缓存还有多大, 如果接收方不想收了, 或者收不了了, 可以返回一个带有rwnd=0的ACK, 这样发送方就会暂停发送. 等到接收方想收了, 它可以再发一个东西通知他继续发. 并且发送方还会每隔一段时间发一个试探性的包来询问接收窗口.</p>\n<h2 id=\"TCP拥塞控制\"><a href=\"#TCP拥塞控制\" class=\"headerlink\" title=\"TCP拥塞控制\"></a>TCP拥塞控制</h2>\n<p>流量控制只是两端的问题, 格局小了.</p>\n<p>拥塞控制是为了整个网络着想, 格局很大.</p>\n<h3 id=\"rwnd和cwnd\"><a href=\"#rwnd和cwnd\" class=\"headerlink\" title=\"rwnd和cwnd\"></a>rwnd和cwnd</h3>\n<p>rwnd是接收端窗口, 与接收端缓存大小有关.</p>\n<p>cwnd是拥塞窗口, 与发送方对网络情况的估计有关.</p>\n<p>发送端真正的窗口大小应该是两个窗口的最小值.</p>\n<h3 id=\"慢启动算法\"><a href=\"#慢启动算法\" class=\"headerlink\" title=\"慢启动算法\"></a>慢启动算法</h3>\n<p>在刚开始, 发送方将cwnd设为1, 就是一个MSS的大小.</p>\n<p>然后每次收到一个ACK之后, cwnd都会+1.</p>\n<p>这样看起来增长的很慢, 实际上cwnd+1之后, 每次发送的数据也会变多, 收到的ACK也会变多, 所以cwnd实际上是指数级增长的.</p>\n<h3 id=\"拥塞避免算法\"><a href=\"#拥塞避免算法\" class=\"headerlink\" title=\"拥塞避免算法\"></a>拥塞避免算法</h3>\n<p>为了阻止cwnd指数增长, 在TCP开始之前, 需要一个慢启动门限ssthresh.</p>\n<p>在cwnd小于等于ssthresh时, 使用慢启动算法; (指数增长)</p>\n<p>cwnd大于ssthresh时, cwnd每过一个RTT就会+1. (线性增长)</p>\n<p>无论在什么时候, 只要出现网络堵塞的情况(就是ACK超时没发过来), ssthresh就会变成拥塞窗口的一半(但是不能小于2)(乘法减小), cwnd从1开始重新来.</p>\n<h3 id=\"快速重传算法\"><a href=\"#快速重传算法\" class=\"headerlink\" title=\"快速重传算法\"></a>快速重传算法</h3>\n<p>上面讲过了.</p>\n<h3 id=\"快速恢复算法\"><a href=\"#快速恢复算法\" class=\"headerlink\" title=\"快速恢复算法\"></a>快速恢复算法</h3>\n<p>发送端连续收到三个连续相同确认后, 就执行乘法减小, 把门限减少为原来的一半. 但是新的cwnd不是改成1, 而是改成新的门限.</p>\n","364b8030e2008f19fdf353358acb26b358f39361":"<h1 id=\"Chapter-19-逻辑寻址\"><a href=\"#Chapter-19-逻辑寻址\" class=\"headerlink\" title=\"Chapter 19 逻辑寻址\"></a>Chapter 19 逻辑寻址</h1>\n<p><img src=\"/img/Chapter19-22.assets/image-20210620224317997.png\" alt=\"image-20210620224317997\"></p>\n<p>哈哈, 全加粗了.</p>\n<h2 id=\"IPv4地址\"><a href=\"#IPv4地址\" class=\"headerlink\" title=\"IPv4地址\"></a>IPv4地址</h2>\n<p>常识性的东西就不说了.</p>\n<h3 id=\"地址分类\"><a href=\"#地址分类\" class=\"headerlink\" title=\"地址分类\"></a>地址分类</h3>\n<p>ABCDE五类地址</p>\n<p><img src=\"/img/Chapter19-22.assets/image-20210620224445372.png\" alt=\"image-20210620224445372\"></p>\n<p>重点在ABC类上.</p>\n<h4 id=\"A类地址\"><a href=\"#A类地址\" class=\"headerlink\" title=\"A类地址\"></a>A类地址</h4>\n<p>A类地址网络号只有前8位, 其中第一位必须是0.</p>\n<p>网络号全0表示本网络, 是预留的.</p>\n<p>网络号后七位全1用于本地环回测试, 也是预留的.</p>\n<p><strong>所以A类地址有 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.016ex\" height=\"2.088ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841 2659 923\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"37\" xlink:href=\"#MJX-1-TEX-N-37\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1158.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2159,0)\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g></g></g></svg> 个网络</strong></p>\n<p>主机号是后面24位.</p>\n<p>主机号全0表示网络号指定的该网络, 预留.</p>\n<p>主机号全1表示广播, 预留.</p>\n<p><strong>所以A类地址一个网络最多有 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.816ex\" height=\"2.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841.7 3012.6 923.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-2-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-2-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-2-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-2-TEX-N-32\"></use><use data-c=\"34\" xlink:href=\"#MJX-2-TEX-N-34\" transform=\"translate(500,0)\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1512.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-2-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2512.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-2-TEX-N-32\"></use></g></g></g></svg> 个主机</strong></p>\n<h4 id=\"B类地址\"><a href=\"#B类地址\" class=\"headerlink\" title=\"B类地址\"></a>B类地址</h4>\n<p>网络号有前面16位, 其中前两位必须是10.</p>\n<p>网络号128.0是不指派, 最少也得是128.1</p>\n<p><strong>所以B类地址有 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.816ex\" height=\"2.09ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841.7 3012.6 923.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-3-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use><use data-c=\"34\" xlink:href=\"#MJX-3-TEX-N-34\" transform=\"translate(500,0)\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1512.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2512.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g></g></svg> 个网络</strong></p>\n<p>类似的, <strong>B类地址一个网络最多有 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.816ex\" height=\"2.072ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 3012.6 915.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-4-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use><use data-c=\"36\" xlink:href=\"#MJX-4-TEX-N-36\" transform=\"translate(500,0)\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1512.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-4-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2512.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g></g></g></svg> 个主机</strong></p>\n<h4 id=\"C类地址\"><a href=\"#C类地址\" class=\"headerlink\" title=\"C类地址\"></a>C类地址</h4>\n<p>与B类地址类似:</p>\n<p><strong>C类地址有 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.816ex\" height=\"2.072ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 3012.6 915.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-5-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-5-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-5-TEX-N-32\"></use><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\" transform=\"translate(500,0)\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1512.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-5-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2512.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg> 个网络, 最多<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.016ex\" height=\"2.072ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 2659 915.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-6-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-6-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-6-TEX-N-32\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(533,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"38\" xlink:href=\"#MJX-6-TEX-N-38\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1158.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-6-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2159,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g></g></g></svg> 个主机</strong></p>\n<h3 id=\"几类特殊的地址\"><a href=\"#几类特殊的地址\" class=\"headerlink\" title=\"几类特殊的地址\"></a>几类特殊的地址</h3>\n<h4 id=\"网络地址\"><a href=\"#网络地址\" class=\"headerlink\" title=\"网络地址\"></a>网络地址</h4>\n<p>就是主机号全为0, 只能用来标识网络, 不能分配给主机</p>\n<h4 id=\"直接广播地址\"><a href=\"#直接广播地址\" class=\"headerlink\" title=\"直接广播地址\"></a>直接广播地址</h4>\n<p>网络号+全1的主机号, 只能用来当目的地址, 在这个网络上的所有设备都将接受处理.</p>\n<h4 id=\"受限广播地址\"><a href=\"#受限广播地址\" class=\"headerlink\" title=\"受限广播地址\"></a>受限广播地址</h4>\n<p>就是255.255.255.255, 只能当目的地址.</p>\n<p>这个网络的所有设备都要收.</p>\n<p>不是整个英特网, 路由器会屏蔽这个包.</p>\n<p>是一个<strong>E</strong>类地址</p>\n<h4 id=\"这个网络中的这个主机\"><a href=\"#这个网络中的这个主机\" class=\"headerlink\" title=\"这个网络中的这个主机\"></a>这个网络中的这个主机</h4>\n<p>就是0.0.0.0, 在主机第一次加入网络的时候问ip用.</p>\n<p>是一个<strong>A</strong>类地址</p>\n<h4 id=\"这个网络的特定主机\"><a href=\"#这个网络的特定主机\" class=\"headerlink\" title=\"这个网络的特定主机\"></a>这个网络的特定主机</h4>\n<p>就是网络号全0+主机号</p>\n<p>是一个<strong>A</strong>类地址</p>\n<h4 id=\"环回地址\"><a href=\"#环回地址\" class=\"headerlink\" title=\"环回地址\"></a>环回地址</h4>\n<p>网络号是127, 主机号随意.</p>\n<p>是一个<strong>A</strong>类地址</p>\n<h2 id=\"NAT\"><a href=\"#NAT\" class=\"headerlink\" title=\"NAT\"></a>NAT</h2>\n<p>NAT可以解决ip地址不够用的问题.</p>\n<p>其实就是一个NAT服务器后面罩着一群小东西, 小东西用一个端口发的数据包到了NAT服务器就变成了NAT的另一个端口发的.</p>\n<p>然后NAT服务器会记录下来这个对应关系, 收到对应的数据包再按照NAT表发回去.</p>\n<p>如果从外面收到NAT表里面没有的数据包, 那就把他给扔了.</p>\n<h2 id=\"子网划分\"><a href=\"#子网划分\" class=\"headerlink\" title=\"子网划分\"></a>子网划分</h2>\n<h3 id=\"子网\"><a href=\"#子网\" class=\"headerlink\" title=\"子网\"></a>子网</h3>\n<p>网络号+主机号不合理, 借用主机号的几位区别子网.</p>\n<p>划分子网纯属网络单位内部的事情, 在外面看他还是一个网络.</p>\n<h3 id=\"子网掩码\"><a href=\"#子网掩码\" class=\"headerlink\" title=\"子网掩码\"></a>子网掩码</h3>\n<p>子网掩码标识网络地址.</p>\n<p>子网掩码与IP地址按位与结果就是他的网络地址, 只有子网掩码按位与之后相等的两个IP地址, 才在一个子网里.</p>\n<h3 id=\"划分子网的方法\"><a href=\"#划分子网的方法\" class=\"headerlink\" title=\"划分子网的方法\"></a>划分子网的方法</h3>\n<h4 id=\"直接按类\"><a href=\"#直接按类\" class=\"headerlink\" title=\"直接按类\"></a>直接按类</h4>\n<p>ABC类+子网划分, 不太好吧</p>\n<h4 id=\"CIDR\"><a href=\"#CIDR\" class=\"headerlink\" title=\"CIDR\"></a>CIDR</h4>\n<p>无分类编址.</p>\n<p>就是没有ABC类之分, 一切都靠子网掩码.</p>\n<p>IP地址化成两部分: <strong>网络前缀; 主机号</strong></p>\n<p>用斜线记法: ip地址/掩码1的长度</p>\n<p>就是前多少位是前缀, 掩码长度就多少</p>\n<h5 id=\"路由聚合-超网\"><a href=\"#路由聚合-超网\" class=\"headerlink\" title=\"路由聚合/超网\"></a>路由聚合/超网</h5>\n<p>就是几个前几位相同的地址块, 可以合在一起用一个CIDR地址块包含起来, 就是看最长公共前缀.</p>\n<h2 id=\"IPv6地址\"><a href=\"#IPv6地址\" class=\"headerlink\" title=\"IPv6地址\"></a>IPv6地址</h2>\n<p>128位, 16字节, 32个数, 8段.</p>\n<h3 id=\"缩短\"><a href=\"#缩短\" class=\"headerlink\" title=\"缩短\"></a>缩短</h3>\n<p>每段开头有连续的0, 可以省去, 但是一段至少有一位.</p>\n<p>如果有连续的全0段, 可以用一个**::**表示.</p>\n<p>但是一个地址里最多只能出现一个**::**</p>\n<h1 id=\"Chapter-20-IP协议\"><a href=\"#Chapter-20-IP协议\" class=\"headerlink\" title=\"Chapter 20 IP协议\"></a>Chapter 20 IP协议</h1>\n<h2 id=\"IP数据包的格式\"><a href=\"#IP数据包的格式\" class=\"headerlink\" title=\"IP数据包的格式\"></a>IP数据包的格式</h2>\n<p><img src=\"/img/Chapter19-22.assets/image-20210621184004060.png\" alt=\"image-20210621184004060\"></p>\n<p>一个一个说</p>\n<ol>\n<li>版本: 4bits, 说明IP数据报用的IPv4还是v6</li>\n<li>首部长度: 4bits, ipv4数据报首部最大60字节, 一般都是20字节, 这个0-15的数字*4就是字节数. <strong>单位是4字节</strong></li>\n<li>服务类型: 8bits, 没人用过.</li>\n<li>总长度: 就是包括头部的, 整个IP数据报的长度, 最长65535B(具体多长限制于MTU) <strong>单位是1字节</strong></li>\n<li>标识: 是一个计数器, 用来产生数据包的标识</li>\n<li>标志: 前两位是MF/DF, 第三位没人用, 分片用的.</li>\n<li>片漂移: 分片用的 <strong>单位是8字节</strong></li>\n<li>生存时间(TTL): 到一个路由器就-1, 为0就给他扔了, 防止他转圈.</li>\n<li>协议: 标明这个数据报应该交给什么协议处理.</li>\n<li>首部校验和: 用一个更简单的方式, <strong>只检查首部是否有错</strong>.</li>\n<li>源地址</li>\n<li>目的地址</li>\n</ol>\n<h2 id=\"分段\"><a href=\"#分段\" class=\"headerlink\" title=\"分段\"></a>分段</h2>\n<h3 id=\"MTU\"><a href=\"#MTU\" class=\"headerlink\" title=\"MTU\"></a>MTU</h3>\n<p>Maximum Transmission Unit, <strong>链路层</strong>的一个属性.</p>\n<p>就是一个帧里面他能装的最大数据字节数, 不包括链路层的头.</p>\n<p>也就是说一个IP数据报长度不能超过他的下层链路层的MTU.</p>\n<p>以太网的MTU是1500</p>\n<p>所以数据一大肯定是要分段的</p>\n<h3 id=\"标志位MF\"><a href=\"#标志位MF\" class=\"headerlink\" title=\"标志位MF\"></a>标志位MF</h3>\n<p>More Frames: 指示后面是不是还有这一帧被分出来的续帧.</p>\n<p>也就是一个长达14800B的数据被做成了ip数据报, 长度15020, MF=0;</p>\n<p>但是中间遇到了以太网, 看门的路由器就会把他分成10段, 每段1480B, 加上头正好1500B.</p>\n<p>这十个数据报里面, 前九个的MF都是1, 只有最后的MF=0;</p>\n<h2 id=\"IPv6数据报格式\"><a href=\"#IPv6数据报格式\" class=\"headerlink\" title=\"IPv6数据报格式\"></a>IPv6数据报格式</h2>\n<p><img src=\"/img/Chapter19-22.assets/image-20210621191854631.png\" alt=\"image-20210621191854631\"></p>\n<p>好, 除了版本都不一样.</p>\n<p><img src=\"/img/Chapter19-22.assets/image-20210621192721966.png\" alt=\"image-20210621192721966\"></p>\n<p>拓展首部是算在载荷里的.</p>\n<ol>\n<li>\n<p>版本: 4bits, 就是v4或者v6</p>\n</li>\n<li>\n<p>通信量类, 8bits, 是一种优先级. 优先级中有两类, 前8个优先级可以被拥塞控制, 后8个不能被拥塞控制.</p>\n</li>\n<li>\n<p>流标号, 20bits, 好像有一些神奇的用途, 视频和语音的传输之类的.</p>\n</li>\n<li>\n<p>有效载荷长度: 16bits, 拓展首部+数据的长度, 最长能表示64KB.</p>\n</li>\n<li>\n<p>下一个首部, 8bits, 协议字段或者类似链表指向下一个可选字段</p>\n</li>\n<li>\n<p>跳数限制, 8bits, 类似TTL</p>\n</li>\n<li>\n<p>源地址, 128bits.</p>\n</li>\n<li>\n<p>目的地址, 128bits.</p>\n<p><img src=\"/img/Chapter19-22.assets/image-20210621193900812.png\" alt=\"image-20210621193900812\"></p>\n</li>\n</ol>\n<h2 id=\"IPv4和IPv6混合\"><a href=\"#IPv4和IPv6混合\" class=\"headerlink\" title=\"IPv4和IPv6混合\"></a>IPv4和IPv6混合</h2>\n<p>三种技术:</p>\n<ol>\n<li>\n<p>双协议栈</p>\n</li>\n<li>\n<p>头部转换</p>\n</li>\n<li>\n<p>隧道</p>\n</li>\n</ol>\n<h1 id=\"Chapter-21-地址映射-差错报告-多播\"><a href=\"#Chapter-21-地址映射-差错报告-多播\" class=\"headerlink\" title=\"Chapter 21 地址映射 差错报告 多播\"></a>Chapter 21 地址映射 差错报告 多播</h1>\n<h2 id=\"ARP\"><a href=\"#ARP\" class=\"headerlink\" title=\"ARP\"></a>ARP</h2>\n<h3 id=\"作用\"><a href=\"#作用\" class=\"headerlink\" title=\"作用\"></a>作用</h3>\n<p>一个主机在给另一个主机发IP数据报, 他知道对面的IP, 做好了IP数据报. 问题是链路层需要知道他的MAC地址.</p>\n<p>这就是ARP的作用, 用一个IP就能拿到对应的MAC地址.</p>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3>\n<p>就是这个主机先<strong>广播</strong>一个ARP数据报, 说明自己想要谁的MAC地址.</p>\n<p>然后这个主机收到之后, 就会<strong>单播</strong>一个ARP数据报, 告诉他自己的MAC地址.</p>\n<p>如果要发送给的主机和自己不在一个子网, 发送方就先找路由器的MAC地址.</p>\n<h3 id=\"数据报格式\"><a href=\"#数据报格式\" class=\"headerlink\" title=\"数据报格式\"></a>数据报格式</h3>\n<p><img src=\"/img/Chapter19-22.assets/6-1911061F551c3.gif\" alt=\"6-1911061F551c3\"></p>\n<ol>\n<li>硬件类型, 以太网都是1.</li>\n<li>协议类型, IP协议都是0800H</li>\n<li>硬件地址长度, MAC地址都是6</li>\n<li>协议(地址)长度, IPv4都是4</li>\n<li>操作类型, 请求是1, 回复是2</li>\n</ol>\n<p>请求的时候, 目标MAC地址全0</p>\n<h3 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h3>\n<p>ARP是三层协议, 还是要经过链路层的封装.</p>\n<p>封装的时候, 发送时目的MAC地址是广播地址, 全1.</p>\n<h2 id=\"DHCP\"><a href=\"#DHCP\" class=\"headerlink\" title=\"DHCP\"></a>DHCP</h2>\n<p>好像不太考, 只要知道他分ip的就行了</p>\n<h2 id=\"ICMP\"><a href=\"#ICMP\" class=\"headerlink\" title=\"ICMP\"></a>ICMP</h2>\n<p>ICMP报文有两种:</p>\n<ol>\n<li>差错报告报文</li>\n<li>询问报文</li>\n</ol>\n<h3 id=\"差错报告报文\"><a href=\"#差错报告报文\" class=\"headerlink\" title=\"差错报告报文\"></a>差错报告报文</h3>\n<ol>\n<li>终点不可达: 路由器或者主机不能交付数据报.</li>\n<li>源站抑制: 拥塞而丢弃数据报.</li>\n<li>时间超过: TTL为0, 或者终点在规定时间内不能收到数据报的全部报片.</li>\n<li>参数问题: 数据报首部有不正确的值. (现在一般不发了)</li>\n<li>改变路由: 仅由路由器发送, 让主机知道下一次应该发给其他路由(更好的路由).</li>\n</ol>\n<h4 id=\"不应发送差错报告报文的情况\"><a href=\"#不应发送差错报告报文的情况\" class=\"headerlink\" title=\"不应发送差错报告报文的情况\"></a>不应发送差错报告报文的情况</h4>\n<ol>\n<li>对ICMP差错报文不应再发一次.</li>\n<li>对不是第一个的分片数据报不发</li>\n<li>对具有组播地址的数据报不发</li>\n<li>特殊地址(127.0.0.0或者0.0.0.0)不发</li>\n</ol>\n<h3 id=\"询问报文\"><a href=\"#询问报文\" class=\"headerlink\" title=\"询问报文\"></a>询问报文</h3>\n<p>我感觉这个分类不重要</p>\n<h3 id=\"差错报文格式\"><a href=\"#差错报文格式\" class=\"headerlink\" title=\"差错报文格式\"></a>差错报文格式</h3>\n<p>ICMP虽然是网络层协议, 但是ICMP报文还是要当成IP数据报的内容, 前面加个IP头送给链路层.</p>\n<p>ICMP的差错报文包括了ICMP头, 还有出错了的数据报的IP头, 和那个IP数据报的数据的前8字节(包括了传输层的端口号)</p>\n<p><strong>所以ICMP封装好的报文实际上有两个IP头, 一个是他应该有的IP头, 还有出错了的IP头</strong></p>\n<p><img src=\"/img/Chapter19-22.assets/image-20210622091632516.png\" alt=\"image-20210622091632516\"></p>\n<h2 id=\"IGMP\"><a href=\"#IGMP\" class=\"headerlink\" title=\"IGMP\"></a>IGMP</h2>\n<p>好像不太重要.</p>\n<p>控制网络中加入离开之类的东西.</p>\n<p>跟ICMP一样, 装在IP数据报里发出去.</p>\n<p>IGMP的IP数据报的TTL一定为1.</p>\n<h1 id=\"Chapter-22-传递-转发和路由选择\"><a href=\"#Chapter-22-传递-转发和路由选择\" class=\"headerlink\" title=\"Chapter 22 传递,转发和路由选择\"></a>Chapter 22 传递,转发和路由选择</h1>\n<h2 id=\"传递和转发和路由选择的区别\"><a href=\"#传递和转发和路由选择的区别\" class=\"headerlink\" title=\"传递和转发和路由选择的区别\"></a>传递和转发和路由选择的区别</h2>\n<p>传递是指知道了从哪发向哪之后, 把数据传过去的物理过程.</p>\n<p>转发是指路由器根据<strong>转发表</strong>在决定从哪发向哪的过程.</p>\n<p>路由选择是根据路由选择算法得到<strong>路由表</strong>的过程, <strong>转发表是从路由表得到的</strong>.</p>\n<p>在讨论路由选择的原理的时候, 不区分路由表和转发表, 都叫路由表.</p>\n<p>路由表只给出下一跳的地址, 这样可以让路由表更灵活.</p>\n<h2 id=\"路由协议\"><a href=\"#路由协议\" class=\"headerlink\" title=\"路由协议\"></a>路由协议</h2>\n<p>自治系统: 就是比一个局域网更大的一个单位, 可以是一个机构的全部网络这样的, 这里面使用相同的路由选择协议.</p>\n<p>路由协议分为两类:</p>\n<ol>\n<li>内部网关协议, 在一个自治系统内使用的协议\n<ol>\n<li>RIP</li>\n<li>OSPF</li>\n</ol>\n</li>\n<li>外部网关协议, 组织不同的自治系统的协议\n<ol>\n<li>BGP</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"RIP\"><a href=\"#RIP\" class=\"headerlink\" title=\"RIP\"></a>RIP</h3>\n<p>使用<strong>距离-向量算法</strong>.</p>\n<p>每个路由器每隔一段时间就把自己的路由表发给相邻的路由器.</p>\n<p>一个路由器收到其他路由器的路由表后, 先把这个路由表的下一跳全部改成发给他路由表的这个路由器, 然后跳数全部+1.</p>\n<p>然后把这个修改后的路由表跟自己的路由表比对, 发现改过的路由表有自己路由表没有的子网, 就把这一项加进去, 下一跳就走他.</p>\n<p>发现他记录的哪一个地方自己的路由表也有, 看看自己本来是不是走他的. 如果本来就走他, 那无论如何都要更新一下, 变成他的距离+1.</p>\n<p>如果自己本来不是走他的, 就看一下走他是不是会更近, 是的话更新一下.</p>\n<p>每一段时间所有路由器都要跟最近的路由器沟通一下路由表, 如果有个路由器半天不说话, 旁边的路由器就知道他死了, 把距离改成16(不可达).</p>\n<p>如果有个网死了, 旁边最近的一个路由器会在发自己的路由表的时候告诉旁边的人这个网死了, 其他路由器都会更新自己的路由表知道这个网死了.</p>\n<p>但是可能会出现这样的情况, 就是有个网死了, 这个路由器刚想告诉别人这个网死了, 结果旁边有个傻逼嘴快发路由表告诉他自己可以到这个网, 只需要4步. 但是这个路由器可不知道这四步第一步就是从他那走. 然后这个路由器就听信这个傻逼把自己的路由表也给改了. 过了一会这个路由器告诉这个傻逼自己也能到这个网了, 只需要先到你那, 这样只需要5步. 这个傻逼一看自己本来就是走他那的, 他现在到那个网需要5步了, 是不是路变远了, 就把自己的路由表改成了6步到这个网. 这样捯饬半天, 等他们俩都把自己路由表折腾到16的时候, 两个傻逼才知道这个网死了. 所以不能把无限大设的太大, 要不然这俩傻逼搞半天都搞不懂这网死了. 这个叫, <strong>坏消息传得慢</strong>.</p>\n<p>RIP属于<strong>应用层</strong>的协议, 他的报文通过<strong>UDP</strong>发出去.</p>\n<h3 id=\"OSPF\"><a href=\"#OSPF\" class=\"headerlink\" title=\"OSPF\"></a>OSPF</h3>\n<p>这个方法比较强一点, 不是一种分布式算法.</p>\n<p>每个路由器定时戳一戳身边的路由器看看他还活着没. 如果发现旁边有个人死了或者莫名其妙突然多了个人, 就赶紧发个通告告诉旁边的人自己身边人变了. 旁边的路由器收到这个通告的时候改一下自己的<strong>链路数据库</strong>, 并且把这个通过告诉给自己身边的其他人. 这样, 每个人的<strong>链路数据库</strong>都保持到了最新的拓扑情况. 这个链路数据库记录了整个网络长啥样. 然后每个路由器就能用Dijkstra记录出来到每个地方最近的路线了, 按照这个路线发给下一个人就行.</p>\n<p>链路数据库保存了每个路由器的位置, 还有每条线路的速度延迟之类的数据, 不再像RIP只使用跳来衡量了.</p>\n<p>OSPF的报文直接作为IP数据报的数据, 加个IP头就送给链路层了, 不用UDP, 可以看成传输层的协议.</p>\n<p>但是一个自治系统太大了, 路由器可能存不下这么大的链路数据库, 更新链路数据可也很占带宽. 所以OSPF又把一个自治系统分成了一堆区域, 然后一个主干部分把所有区域连起来.</p>\n<h3 id=\"BGP\"><a href=\"#BGP\" class=\"headerlink\" title=\"BGP\"></a>BGP</h3>\n<p>BGP属于外部网关协议, 是用于连接不同自治系统的协议.</p>\n<p>每个自治系统需要找一个路由器当发言人, 然后每个自治系统之间的发言人刚开始会把自己的BGP路由表全部发出去, 之后只有当自己的自治系统网络结构发生变化之后才发.</p>\n<p>BGP的报文使用<strong>TCP</strong>发出去, 所以BGP属于应用层协议.</p>\n<p>BGP使用的是路径-向量协议.</p>\n<h2 id=\"多-组-播\"><a href=\"#多-组-播\" class=\"headerlink\" title=\"多(组)播\"></a>多(组)播</h2>\n<p>就是一个数据报用个组播地址, 到了一个路由器这个路由器就会把他复制几份发给不同的端口.</p>\n<p><strong>组播地址使用D类地址</strong></p>\n<p>组播地址需要换算成多播MAC地址, 但是D类地址中间有28位自由的, 但是换算成MAC地址只有23位与IP地址有关, 有5位信息丢失. 但是在一个网络中这样的冲突概率很小, 所以就不管了.</p>\n","09065d2c12bfcbf0ec97c2f891ab44c17229c1de":"<p>IEEE极限编程, 从周六早上八点(UTC 0点)一直到周日早上八点结束, 每小时都会放出新题目. 第一次打这种比赛, 属实难顶.</p>\n<!--more-->\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3>\n<p>星期五上午体育课体测跑一千米, 一年没锻炼的我居然只比去年慢了十秒钟, 不过四分四十秒还是没及格, 而且跑完之后跟死了一样, 课上第一批跑的等到下课半个小时才从网球场的椅子上站起来一步一步挪回宿舍, 下午还发烧了. 晚上又累又困十一点多就睡了.</p>\n<h3 id=\"Day-1\"><a href=\"#Day-1\" class=\"headerlink\" title=\"Day 1\"></a>Day 1</h3>\n<p>早上六点五十起床, 收拾收拾磨蹭磨蹭吃点饭正好八点零一到lyf老师的电工实验室. 队友还没来, 我先开了电脑看了下题, 发现前五分钟只有个神必环境测试题, 让我随便输出一个东西, 输出啥都是0分.</p>\n<p>五分钟结束后放了个三道题. 一个傻逼签到题, 随便打打交了就过了. 然后一个计算几何和一个大模拟. 队友们来了, 我给他们解释一下计算几何的题意, 就去写大模拟了. 傻逼计算几何用的支持向量机当的背景, 要我们做一个线性分类: 给我们平面上两种点, 问能不能用一条经过原点的直线给他们分开. zirrtu没看到要经过原点, 直接上python交机器学习, 折腾了半天没过一个点. 我大模拟打了一小部分, 测了一下样例发现我连有效单词数都没统计对, 应该是题目读错了, 但是没找到问题在哪, 就直接去支援计算几何了.\n机器学习失败被迫想正统做法, 但是没人学过计算几何的我们很容易就会想到一些很高深的计算几何算法. 三个人往凸包上搞了半天, 交了几发都是0分. 比赛开始两小时, 第四题放出来了, 一个图论题, 但是我们没去看. 我继续钻研计算几何, 发现根本不用什么凸包, 直接把每个点极角搞出来然后瞎搞搞就可以了. 给他们讲了一下, 他们也觉得毫无破绽, 然后我们准备去吃饭了. 临走之前看了一下第四题, 就是给一个无向图, 每次查询两个点之间路径必须经过的点.\n出去吃饭的时候我们开始嘴第四题的算法, 我们想两点之间任意一条路径上不在环上的点都是必须经过的点. 然后好像是先做一个生成树, 然后枚举每个非树边, 这样就能找到所有的环, 用树剖可以标记这个环上的所有点, 然后查询两个点之间不在环上的点就行了. 后来忘了为什么弃用了这个算法, 找到了一个无向图缩环的模板. 吃完饭hx去打这题, 我开始打我嘴的计算几何. hx打着打着发现不对劲, 因为如果一个点在环内, 根据他在环内的位置, 会有不同个数的环和外界的联通点是必须经过的点, 而如果缩了环, 就无法得知这个点在环中的位置. 这题就这样放弃了.\n然后我就开始了我长达几小时的计算几何自闭时间. 吃饭的时候放了一个水题, 他俩直接给过了. 我嘴的计算几何方法实现很麻烦, 而且一点点小的精度误差都会导致答案错误.\n打了几小时,最多的也只是过了20%的点. 开始去看4小时放的一个构造题. 看了五分钟直接嘴了一个构造, 跟队友讲了一下也觉得天衣无缝. 交上去0分.\n然后队友过来看, 找到了问题. 接着我又想了一个构造, 打了出来, 样例都过不去.\n又自闭了. 回去继续计算几何. 自闭了一下午,毫无输出. 有人搬了一箱红牛和一堆水果进来了.\n干啥啥不行,吃饭第一名. 五六点我就带着队友们买东西, 买了点面包,糖,咖啡和一包蒟蒻果冻. 然后就回去继续肝了. 过了一会hx发现我的第一个构造会只会在大于N/2列出事, 他把前N/2列的构造方法镜像到后N/2列, 然后又构造了一个方法填上了中间两列的空隙, 给我们讲了一下觉得毫无问题. 敲了一遍交了果然过了. 这时候发现又多了个水题, zirrtu已经给过了. 还打了几个暴力.\n到了晚上, 我完全失去了战斗力. 出了一个奇怪的感觉是解方程的问题, 我用了个奇怪的线性规划, 打了个假到不能再假的暴力, 居然过了75分, 赛后发现这题75分还是高分, 只能说运气好.\n出了一个更奇怪的题目, 给了一段Brain Fuck代码, 什么也没说, 有种CTF的感觉. 其实刚看到这个题目名字我就觉得不太对劲, 题目名字Furin Back, 正好是Brain Fuck的一个排列, 一打开果然就是一段Brain Fuck的代码, 还有一个奇怪的看起来像蛋白质结构的图. 题面只有一个代码, 我甚至怀疑是不是图片隐写, 这个图片里是不是藏了什么东西, 下下来binwalk了一下没找到什么, 就放弃了. 最后找了个BF解释器, 随随便便优化了一下, 就拿了个暴力分跑路了.</p>\n<h3 id=\"Day2\"><a href=\"#Day2\" class=\"headerlink\" title=\"Day2\"></a>Day2</h3>\n<p>zirrtu跑路了, 后半夜我也完全没输出. 从十点到第二天四五点我都是划水状态, 也没怎么睡, 就读读题, 拍拍创佬黑照, 出去看看西电的夜景顺便发个说说, 附和一下hx的想法说没问题. 后半夜全靠hx, 一个人感觉做了有四五题, 太强了.\nzirrtu还不起, 给他打了几个电话也没用. 六点多他起了, 让他继续去改改计算几何. 我做了个傻逼题. 计算几何最后也没有改对太多, 不过差不多就行了, 那题属实恶心.\n最后一小时, 是个字符串题, 我想到了一个很对的算法, 但是交上去总是T一半. 结束后发现创佬跟我一样的做法, 他就A了. 然后发现string的有个地方用的不对, 导致复杂度不对了, 以后还是自己写哈希吧.\n八点结束了, 去做分光计物理实验. 这是这期实验的最后一次实验, 所以一个教室只有八个人. 那个老师让我们不用调实验仪器, 直接大概做一下就行了, 然后当场把报告交了. 我头有点发热, 但是很精神, 可能是回光返照. 但是这样我还是做不出来实验现象, 无奈最后只能编数据. 事后才知道这个实验不调仪器根本不可能做出来实验现象.\n做完实验中午吃个饭, 下午睡了一下午, 没事了, 结束了奇妙的极限编程+物理实验之旅.</p>\n","aabb8de6722a7975cd402e1163129b4cb691c14a":"<p>默认JupyterHub是使用PAM, 与系统用户绑定的认证方式, 这使得JupyterHub的多用户非常不灵活,参见这个Issue:    <a href=\"https://github.com/jupyterhub/jupyterhub/issues/710\">https://github.com/jupyterhub/jupyterhub/issues/710</a>.</p>\n<p>JupyterHub默认支持了很多第三方的OAuth的认证渠道,但是这些大部分是在线的,不适合我的需求. 于是我在GitHub上找到了一个基于sqlite3数据库的离线认证器: <a href=\"https://github.com/sparkingarthur/jupyterhub-localsqliteauthenticator\">https://github.com/sparkingarthur/jupyterhub-localsqliteauthenticator</a></p>\n<p>按照Readme文件的步骤,安装成功后,在JupyterHub配置文件中将认证器修改为这个认证器:</p>\n<p><img src=\"/img/JupyterHubAuth/1.png\" alt=\"image-20200521213734811\"></p>\n<!--more-->\n<p>注意export修改环境变量并不是永久的,如果出现如下错误一般是环境变量出了问题,可以重新添加环境变量或者直接修改文件永久添加环境变量.</p>\n<p><img src=\"/img/JupyterHubAuth/2.png\" alt=\"image-20200521173137534\"></p>\n<p>如果出现这样的问题,请使用sudo运行JupyterHub</p>\n<p><img src=\"/img/JupyterHubAuth/3.png\" alt=\"image-20200521205520398\"></p>\n<p>登录第三方认证器自带的admin用户,登陆成功.</p>\n<p><img src=\"/img/JupyterHubAuth/4.png\" alt=\"image-20200521211235194\"></p>\n<p>此时管理员面板中的的添加用户仍然是添加系统用户,并不是在我们的认证器中添加用户.</p>\n<p><img src=\"/img/JupyterHubAuth/5.png\" alt=\"image-20200521211405293\"></p>\n<p><img src=\"/img/JupyterHubAuth/6.png\" alt=\"image-20200521211412070\"></p>\n<p>可以使用认证器提供的api来添加用户,右边就是这个认证器使用的数据库,默认是/etc/jupyterhub/jupyterhub-users.db</p>\n<p>使用api添加用户后,会在数据库中生成记录,密码是用AES加密后存储的.</p>\n<p><img src=\"/img/JupyterHubAuth/7.png\" alt=\"image-20200521212626837\"></p>\n<p>添加用户后,登陆成功.(<strong>注意如果不需要白名单功能应该在配置文件中将白名单配置删掉,否则不在白名单中的用户还是登陆不了</strong>)</p>\n<p><img src=\"/img/JupyterHubAuth/8.png\" alt=\"image-20200521212651326\"></p>\n<p><s>邦邦pico沙雕小剧场更新了快去看</s></p>\n","76e14ddf7a7a2f5077097c78f61f9496459ec734":"<p>zhy出的b题</p>\n<!--more-->\n<h1 id=\"题目背景\"><a href=\"#题目背景\" class=\"headerlink\" title=\"题目背景\"></a>题目背景</h1>\n<p>化学是一个神奇的学科，其中的分析化学方面的运算规则更是令人绝望。\nLZY是一个五国金的选手，但是他想冲击世界乃至宇宙化学竞赛金奖是，遇到了一个简单的小问题——他突然忘记分析化学的有效数字修约规则了。没有它，LZY就没办法正确书写他的计算结果从而得到100分夺取金奖了。位居99.5分自然是LZY所不能容忍的。所以现在你快来帮他计算一下下面数据的应有结果吧！</p>\n<h1 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h1>\n<p>数据有多组，均遵循修约规则。数据之间的运算为加合运算。数据范围为-100~100.小数位数均小于6位，所需输出的小数位数均小于4，输出值将被限定在一个合理范围，无需二次化简。</p>\n<p><strong>正经的修约规则</strong>（针对一个特定的结果进行位数的保留和舍去）</p>\n<ol>\n<li>\n<p>如果在要求位数之后的第一位（即平时所说的四舍五入部分）数字大于等于6或者小于等于4，那么直接进一或舍去</p>\n<p><strong>（四舍六入）</strong></p>\n</li>\n<li>\n<p>如果在要求位数之后的第一位是5.分为以下下列情况：</p>\n<p><i> 如果5不为小数部分最后一位，5之后的数不全为0，则进一。</i></p><i>\n<p><ii> 如果5为小数部分最后一位，那么\n如果5前面是奇数，则进一。\n如果5前面是偶数，则舍去。\n<strong>（奇进偶舍）</strong></ii></p>\n</i></li><i>\n</i></ol><i>\n<p>而对于多组数据，想判断那组数据最可靠（即误差最小），需要用到下列规则：</p>\n<p><strong>样本标准偏差的判断</strong>\n对于一组数据（有n个数），保证n小于等于5\n令其平均值为x0，这n个数分别为x1，x2,...,xn则\n样本标准偏差</p>\n<pre><code>s越大，此组数据越不精确，本题最后的加合运算选用最精确的一组数据进行（即s最小的那个）\n</code></pre>\n<p>最后，在进行加合运算计算时，结果的有效数字时由各个加合数据决定的，这一个判断的依据为绝对误差。\n运算结果的有效数字决定于这些数据中绝对误差的最大者。如\n0.0121 25.64 1.05782相加。\n其中，25.64为绝对误差的最大者（其绝对误差为正负0.01）（依最后一位数字计算），故按小数后保留2位报出结果</p>\n<h1 id=\"输入\"><a href=\"#输入\" class=\"headerlink\" title=\"输入\"></a>输入</h1>\n<p>见前，保留有效数字位数以上绝对误差确定。</p>\n<p>共五组输入数据，第一个数为每组数据的数据个数，接下来为各组的数据。</p>\n<h1 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h1>\n<p>n组数据中，最精确的一组数据的所有数之和，再依绝对误差保留后的结果。</p>\n</i>","7f3edf530d588efd832297ed46de19ad023f6f62":"<p>咕了好长时间的Logistic回归, 今天晚上不小心睡着了现在不困就写一点.</p>\n<!--more-->\n<p>Logistic回归主要是解决二分类问题,  普通的线性拟合拟合出的函数值域是实数集, 通过套一个激活函数就可以把这个实数集映射到上<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.526ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2000.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-1-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-1-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-1-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(278,0)\"><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(778,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1222.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-1-TEX-N-5D\"></use></g></g></g></svg>.</p>\n<p>常见的激活函数之一是Sigmoid函数:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.738ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.825ex\" height=\"4.774ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1342 6994.6 2110\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-2-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-2-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-2-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-2-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-2-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-2-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(645,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1034,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1606,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2272.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3328.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(1583,676)\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-2-TEX-N-2B\"></use></g><g data-mml-node=\"msup\" transform=\"translate(1722.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-2-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,289) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"2212\" xlink:href=\"#MJX-2-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(778,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></g><rect width=\"3426\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>这个函数有个性质, 就是求导之后可以用原函数的一个简单的多项式表达, 一会推导的时候有用:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.959ex\" height=\"2.396ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -809 10148.1 1059\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-3-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,413) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-3-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(974.1,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1363.1,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1935.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2601.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3657.6,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4302.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4691.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5263.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5652.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(6041.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6763.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7764.1,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8409.1,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8798.1,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9370.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9759.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>然后就可以用之前的线性拟合套一个这个函数拟合, 因为这个函数可导, 推导过程和线性拟合的推导过程差不多.</p>\n<p>如果反过来写, 把<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.573ex\" height=\"2.47ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841.7 5115.4 1091.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-4-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-4-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-4-TEX-I-1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path><path id=\"MJX-4-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-4-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-4-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-4-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(767.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-4-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1823.6,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-4-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2468.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msup\" transform=\"translate(2857.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D464\" xlink:href=\"#MJX-4-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(749,363) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-4-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(4154.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-4-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4726.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g></g></g></svg>的<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-5-TEX-I-1D465\"></use></g></g></g></svg>解出来, 可以写成:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.016ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.278ex\" height=\"4.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1118 6752.8 2009\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-6-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-6-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-6-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-6-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-6-TEX-I-1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path><path id=\"MJX-6-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-6-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-6-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(298,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-6-TEX-I-1D45B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(898,0)\"><g data-mml-node=\"mi\" transform=\"translate(1081.2,676)\"><use data-c=\"1D466\" xlink:href=\"#MJX-6-TEX-I-1D466\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-6-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1722.4,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-6-TEX-I-1D466\"></use></g></g><rect width=\"2412.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3828.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-6-TEX-N-3D\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4884,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D464\" xlink:href=\"#MJX-6-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(749,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-6-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(6180.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-6-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>其中这个<svg style=\"vertical-align: -1.108ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.856ex\" height=\"2.913ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -797.5 2588.2 1287.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-7-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-7-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-7-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-7-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-7-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(298,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-7-TEX-I-1D45B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(898,0)\"><g data-mml-node=\"mi\" transform=\"translate(671.8,485) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-7-TEX-I-1D466\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-7-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(500,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-7-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1278,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-7-TEX-I-1D466\"></use></g></g><rect width=\"1450.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>又叫对数几率, <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-8-TEX-I-1D466\"></use></g></g></g></svg>是概率, 在<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.526ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2000.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(278,0)\"><use data-c=\"30\" xlink:href=\"#MJX-9-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(778,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1222.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg>上, 通过这个函数映射到<svg style=\"vertical-align: -0.048ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 704\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-10-TEX-I-1D445\"></use></g></g></g></svg>上, 实际上Logistic回归就是用线性拟合去拟合对数几率.</p>\n<p>关于Loss函数, 有些文章直接给出了这个Loss函数的表达式, 然后简单的定性说明一下, 实际上这个函数就是极大似然函数. (只在期末考试前学了一天概率论的我记住的为数不多的东西)</p>\n<p>对线性拟合的系数矩阵进行极大似然估计, 写出似然函数<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.921ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2175 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43F\" xlink:href=\"#MJX-11-TEX-I-1D43F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(681,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1070,0)\"><use data-c=\"1D464\" xlink:href=\"#MJX-11-TEX-I-1D464\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1786,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>, 然后求个导就能用梯度下降了. 推导过程就不写Latex了, 太麻烦了, 放一个我之前自己推导的草稿吧.</p>\n<p><img src=\"/img/logistic-basis/image.png\" alt=\"img\"></p>\n<p>还有, Sigmoid函数是任意阶可导的, 所以牛顿法也是可以用的.</p>\n<p>下面都是我瞎想口胡的, 还没来得及验证.</p>\n<p>Logistic回归是解决二分类问题的, 得到的结果是一个点属于其中一类的概率. 顺着这个思路, 我想如果把里面的一个数改成一个向量, 然后函数得到的结果是也是一个向量, 向量的每一个元素代表这个点属于这个类的概率, 这样就可以解决多分类问题了.</p>\n<p>按照Logistic回归的想法, 首先得到的是一个在<svg style=\"vertical-align: -0.048ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.717ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 759 704\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-12-TEX-I-1D445\"></use></g></g></g></svg>上的数, 在我这个多分类模型的想法中, 首先就要得到一个<svg style=\"vertical-align: -0.048ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.865ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1266.3 704\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path><path id=\"MJX-13-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-13-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-13-TEX-I-1D45B\"></use></g></g></g></g></svg>的向量, 其中每一个元素都是单独线性拟合出的结果. 然后对这个向量加一个激活函数, 就可以得到最终的结果向量. 这个激活函数需要把一个<svg style=\"vertical-align: -0.048ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.865ex\" height=\"1.593ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1266.3 704\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D445\" d=\"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z\"></path><path id=\"MJX-14-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D445\" xlink:href=\"#MJX-14-TEX-I-1D445\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-14-TEX-I-1D45B\"></use></g></g></g></g></svg>的向量映射到一个<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.674ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2507.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-15-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-15-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-15-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-15-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-15-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-15-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(278,0)\"><use data-c=\"30\" xlink:href=\"#MJX-15-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(778,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-15-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1222.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-15-TEX-N-31\"></use></g><g data-mml-node=\"msup\" transform=\"translate(1722.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"5D\" xlink:href=\"#MJX-15-TEX-N-5D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(311,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-15-TEX-I-1D45B\"></use></g></g></g></g></svg>的向量, 并且这个向量元素加起来等于1. 查了一下, 都用的softmax做到这个.</p>\n<p>Loss函数也按照极大似然估计的思路来推, 应该就可以实现多分类了, 有时间去试验一下.</p>\n","33c8c1f3d40c7add3e4ccfe690ea9f220a78d8ea":"<p>博客换了个服务商, 之前在Digital Ocean上的, 太贵了养不起了, 换了个便宜VPS, 期末考试一直没来得及迁移. 数据库考试给我整麻了, 不会真有人给局部变量上了个锁吧.</p>\n<p>前几天找了篇文章学习了一下透明代理的fake-ip, 写了个这东西总结一下, 然后博客今天才修好, 今天再传上来.</p>\n<p>想写的东西挺多的, 但是好累, 我又变懒了.</p>\n<!--more-->\n<h3 id=\"不使用代理\"><a href=\"#不使用代理\" class=\"headerlink\" title=\"不使用代理\"></a>不使用代理</h3>\n<ol>\n<li>浏览器向操作系统发送DNS查询</li>\n<li>查询到ip后, 建立tcp连接.</li>\n</ol>\n<h3 id=\"使用代理但是没有远程服务器\"><a href=\"#使用代理但是没有远程服务器\" class=\"headerlink\" title=\"使用代理但是没有远程服务器\"></a>使用代理但是没有远程服务器</h3>\n<ol>\n<li>浏览器发现有代理, 直接向代理软件使用socks5发送流量, 流量里包含了域名.</li>\n<li>代理软件使用自己的或操作系统的dns服务解析dns, 建立tcp连接.</li>\n</ol>\n<h3 id=\"使用代理-直接全局流量转发到远程服务器\"><a href=\"#使用代理-直接全局流量转发到远程服务器\" class=\"headerlink\" title=\"使用代理, 直接全局流量转发到远程服务器\"></a>使用代理, 直接全局流量转发到远程服务器</h3>\n<ol>\n<li>浏览器发现有代理, 直接向代理软件使用socks5发送流量, 流量里包含了域名.</li>\n<li>代理软件抽出域名和其他数据, 把数据重组为ss协议发送到远程服务器.</li>\n<li>远程服务器使用dns查询, 这个是由远程服务器的操作系统提供的dns查询.</li>\n</ol>\n<h3 id=\"使用代理-但是本地分流\"><a href=\"#使用代理-但是本地分流\" class=\"headerlink\" title=\"使用代理, 但是本地分流\"></a>使用代理, 但是本地分流</h3>\n<p>分流的时候, 如果是域名分流, 那代理软件直接比对域名就行了, 如果发现这个域名应该是直连, 那本地请求dns建立连接就行. 如果发现要转发到远程的服务器, 那就连着域名封装到ss里发过去, 本地不需要解析.</p>\n<p>如果是ip分流, 就比较麻烦了. 本地的代理一定要进行一次dns解析, 因为需要拿到ip进行分流. 如果发现是直连, 就用刚刚解析的IP建立连接就行. 如果是发送给远程服务器, 这个ip就没用了, 封装进ss的还是域名, 解析还是由远程服务器解析, 跟本地解析的ip地址没关系.</p>\n<h3 id=\"使用TUN-TAP\"><a href=\"#使用TUN-TAP\" class=\"headerlink\" title=\"使用TUN/TAP\"></a>使用TUN/TAP</h3>\n<p>这种东西是透明的, 也就是说浏览器不知道自己经过了代理, 所以也不需要在浏览器上配置代理, 相当于强制让浏览器走了代理.</p>\n<ol>\n<li>浏览器请求DNS, 调用操作系统的DNS服务.</li>\n<li>操作系统会向系统级别设置的DNS服务器请求, 有些代理会把这个DNS服务器设置为自己, 127.0.0.1, 但是无所谓, 因为操作系统发出的DNS请求都会被代理截获.</li>\n<li>代理服务器可以选择把这个DNS请求发出去, 或者使用自己的dns服务返回给操作系统.</li>\n<li>浏览器拿到这个解析, 再建立tcp连接, 这个连接同样被代理服务器截获.</li>\n<li>代理服务器拥有之前发送的dns请求和返回结果, 就可以确定这个tcp连接刚刚发的是哪一个dns请求, 就能确定这个tcp连接的对应域名. 可以直接把域名封装进ss发送给远程服务器. 远程服务器再进行一次解析.</li>\n</ol>\n<p>也就是说, 如果使用域名进行分流, 本地代理软件的返回的dns结果是没有用的, 而且还多了一次dns查询, 可以直接让本地代理软件返回一个假ip, 应用程序就能立刻建立tcp连接. 这个就是Fake-IP. 如果使用IP进行分流, 代理软件也可以先返回一个假IP, 然后再去等待DNS回应.</p>\n<p>返回假IP后代理软件会维护一个Fake-IP和域名的对应表, 等到操作系统再发起TCP请求的时候从他请求的IP找到对应的域名, 封装进ss发出去.</p>\n<p>如果是使用Redir-host模式, 代理会等真实的DNS请求回来的时候把真实的DNS发送给操作系统, 这样即使有些TCP流量不走代理软件, 因为他有真实的ip, 所以也是能用的. 但是Fake-IP模式所有流量必须都走代理, 因为他tcp头的那个目的地址是瞎编的, 必须要给代理软件把流量改成域名封装进ss里交给远程服务器来解析连接, 直接连肯定连不上瞎编的ip的.</p>\n<h3 id=\"缓存问题\"><a href=\"#缓存问题\" class=\"headerlink\" title=\"缓存问题\"></a>缓存问题</h3>\n<ol>\n<li>在Redir-host模式下, 如果操作系统或浏览器缓存了DNS解析记录, 代理软件就不会收到DNS解析请求, 只收到一个含有目的ip地址的TCP连接, 这样代理软件不会知道域名是什么, 基于域名的分流策略会失效. 但是基于ip的分流策略还有效.</li>\n<li>在Fake-IP模式下, 操作系统或浏览器缓存了DNS解析记录也问题不大, 因为这时候有Fake-IP与真实域名的表, 可以用假ip查出域名. 但是这样从Fake-IP模式切换出来会有很大的麻烦, 所以很多软件都把Fake-IP返回的DNS解析记录的TTL设置为1, 尽力避免Fake-IP被缓存.</li>\n<li>如果使用了Fake-IP, 操作系统试图访问一个不存在的域名时, 并不会收到DNS解析错误的信息, 因为DNS解析错误的只会在远程代理服务器上产生, 操作系统不会收到任何信息.</li>\n<li>如果操作系统缓存了Fake-IP, 但是代理软件的Fake-IP表丢失, 也会导致打不开网页.</li>\n</ol>\n","e41328656a21b8ae0089a76f2c57156b26af9edc":"<p><img src=\"/img/ccpc2021_network/cover.jpg\" alt=\"\"></p>\n<p>西电的网其实还行, 虽然也是一直打不开, 但是最起码我们的题目都交上去了, 听说有的学校5个小时就没打开过.</p>\n<!--more-->\n<p>本来我说28号返校, 把买火车票的记录往Double Rainbow群里一发, hx提醒我28有ccpc网络赛, 他说他29号走. 我说这么重要的比赛当然要线下打, 就唆使他们跟我一起27号回去了. zirrtu家就在西安, 所以他没什么紧张的. zirrtu家在四号线旁边, 去学校的话要换5号线再换6号线, 所以我们约好在5号线西工大站见面.</p>\n<p>我和hx坐的一班火车, 还在一个车厢, 我本来说让他把票退了, 跟我一起买, 这样可以坐一起. 但他说他要是自己买的话就要自己付钱, 就没跟我一起买.</p>\n<p>下了车, 坐二号线去南稍门站, 进站的时候发现我们没安检就进地铁站了, 我认为这是因为我们没出火车站所以才这样. 进地铁站扫码的时候有一个出站的二维码和一个坐2号线的二维码, 所以应该是坐地铁这样也不算出站.</p>\n<p>到南稍门换乘, 上了5号线, 还有一站到西工大的时候zirrtu说他快到了, 还有一站, 我合理推断我们三个在一个地铁上. 果然, 一下车出车厢门就看到他了.</p>\n<p>zirrtu说他的导师总以为他是计科专业的, 他说他不会操作系统他导师就说他对课上的知识理解不深, zirrtu说他对他的课上的天线原理理解很深, 可以做一个收音机, 能收八个台.</p>\n<p>在六号线上, zirrtu说他核酸是14天前的, 我们俩有点震惊, 觉得他这个不太行, 毕竟学校要求的是48小时之内. 下了地铁hx让zirrtu去医学中心做个核酸, 我跟zirrtu就去了, hx在地铁站看包.</p>\n<p>医学中心人还挺多, 我跟他排了二十分钟的队, 排队的时候zirrtu说他刚知道芜湖和蚌埠都是安徽的, 他很震惊为什么安徽能有两大抽象城市. 快到他的时候我去旁边坐着等他了, 等他的时候还看到一个老外坐轮椅上, 穿着University of Oxford的衣服, 好像挺强的. 推着他的人叫了一辆救护车, 把他推上去, 走了.</p>\n<p>过了一会, 我在群里问他做好了没有, 他说做好了, 快到地铁站了. 我直接一个?发出去了, 我坐医院等你呢. 他说那你快出来, 他就在医院门口.</p>\n<p>然后hx打车回学校, 滴滴接单之后我打电话问司机能不能装得下三个行李箱, 司机说三个装不下, 我说有两个挺小的, 司机说到那看吧. 等了一会司机说他到了, 但是没看见人, 然后才发现hx选错上车点了, 我们在C口, 他选的B口.</p>\n<p>过去之后, 司机还说装不下, 我说这装着试试, 司机抱起我的箱子说,\"你看你这一个大的就占满了\", 然后放车子里, 发现只占了一半空. 然后我在我箱子上面和旁边把另外两个小箱子放下了, 还把后备箱门关上了.</p>\n<p>在车上, zirrtu说他的返校申请导员还没批. 我说你直接给你导员打电话, zirrtu说他这次返校申请写的导员不是他的导员, 很奇怪. 然后zirrtu打电话给他导员, 他导员把返校申请上写的审批人的电话给他了, zirrtu打电话给那个人, 那个人没接.</p>\n<p>到北门了, 那个人还是没接, 又打电话给他导员, 导员说他没啥办法, 让他继续给那个人打电话, 然后还解决了zirrtu的疑惑, 原来是他导员升职了, 不再是导员了, 所以那个人成了zirrtu的导员.</p>\n<p>zirrtu给那个人打了十几个电话, 那个人终于接了, 然后特别凶地说了三个字\"我有事\", 就给挂了.</p>\n<p>我们三个在门口等了十几分钟, 那个人终于打电话过来了, zirrtu说他返校申请没批, 那个人说他疫情通没填够14天, 不让他返校.</p>\n<p>然后我跟他说, 可以我们把他行李拿走, 让他偷渡进去, zirrtu说他刚刚有可能保研, 怕给整没了, 就没敢. 然后我和hx帮他把大件行李拿到hx寝室, 他一个人骑个小黄车去地铁站了.</p>\n<p>然后我们本来约去师大附中打, 但是那边好像不太确定能不能进, 就算了.</p>\n<p>第二天我和hx去G346, 进去用我电脑外放开了个qq语音, 让zirrtu进去了, 我这边把声音调到了最大, 他那边把他一千多块钱的麦的增益调了好高我们俩才听到, 不过测试的时候旁边有点吵, 等到大家安静的时候全教室都能听到他的声音.</p>\n<p>我坐在了第二排, 本来以为前面没人坐了, 一会王老师他们队坐我们前面了. 又要被气场压制了.</p>\n<p>还差5秒钟开局, 就遇到了经典问题:\n<img src=\"/img/ccpc2021_network/cover.jpg\" alt=\"\"></p>\n<p>不过西电的网还行, 刷了一会就刷出来了.</p>\n<p>上来我开了第9题, 就是两个前缀和套成pair就行, 不过第一次我用了multiset, 不知道怎么回事第一发T了, 这时候hx把第1题过了, 然后我换成map就把第9题过了, 贡献一发罚时.</p>\n<p>然后一起做第6题, 研究了二十分钟吧我发现一个惊天大秘密, 就是连续四个完全平方数, 最后一个加上第一个减去中间两个居然永远等于4! 然后用这个东西就把这题过了.</p>\n<p>然后一起开第7题, 想了三四十分钟吧, hx发现g(x)最大只有六十多, 可以枚举, 然后我说把g(x)看成常数剩下的就是个二次函数, 直接乱搞求极值就行, zirrtu写了个暴力, 我写好之后对拍了一下, 发现了一堆小问题, 改好了之后交了就过了.</p>\n<p>然后一起开第二题, zirrtu说这名字是啥东西, 我说这个不就是TDM, 时分复用, 唤醒了他的DNA.</p>\n<p>然后我发现这玩意一个最多<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.466ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9487.8 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-1-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-1-TEX-N-4C\" d=\"M128 622Q121 629 117 631T101 634T58 637H25V683H36Q48 680 182 680Q324 680 348 683H360V637H333Q273 637 258 635T233 622L232 342V129Q232 57 237 52Q243 47 313 47Q384 47 410 53Q470 70 498 110T536 221Q536 226 537 238T540 261T542 272T562 273H582V268Q580 265 568 137T554 5V0H25V46H58Q100 47 109 49T128 61V622Z\"></path><path id=\"MJX-1-TEX-N-43\" d=\"M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z\"></path><path id=\"MJX-1-TEX-N-4D\" d=\"M132 622Q125 629 121 631T105 634T62 637H29V683H135Q221 683 232 682T249 675Q250 674 354 398L458 124L562 398Q666 674 668 675Q671 681 683 682T781 683H887V637H854Q814 636 803 634T785 622V61Q791 51 802 49T854 46H887V0H876Q855 3 736 3Q605 3 596 0H585V46H618Q660 47 669 49T688 61V347Q688 424 688 461T688 546T688 613L687 632Q454 14 450 7Q446 1 430 1T410 7Q409 9 292 316L176 624V606Q175 588 175 543T175 463T175 356L176 86Q187 50 261 46H278V0H269Q254 3 154 3Q52 3 37 0H29V46H46Q78 48 98 56T122 69T132 86V622Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-1-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(1000,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-1-TEX-N-D7\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2722.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"4C\" xlink:href=\"#MJX-1-TEX-N-4C\"></use><use data-c=\"43\" xlink:href=\"#MJX-1-TEX-N-43\" transform=\"translate(625,0)\"></use><use data-c=\"4D\" xlink:href=\"#MJX-1-TEX-N-4D\" transform=\"translate(1347,0)\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4986.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5375.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5875.4,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6320.1,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-1-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6764.8,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-1-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7209.4,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-1-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7654.1,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-1-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(8098.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9098.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g></g></g></svg>就会循环, 而且<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.306ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6765.3 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-N-4C\" d=\"M128 622Q121 629 117 631T101 634T58 637H25V683H36Q48 680 182 680Q324 680 348 683H360V637H333Q273 637 258 635T233 622L232 342V129Q232 57 237 52Q243 47 313 47Q384 47 410 53Q470 70 498 110T536 221Q536 226 537 238T540 261T542 272T562 273H582V268Q580 265 568 137T554 5V0H25V46H58Q100 47 109 49T128 61V622Z\"></path><path id=\"MJX-2-TEX-N-43\" d=\"M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z\"></path><path id=\"MJX-2-TEX-N-4D\" d=\"M132 622Q125 629 121 631T105 634T62 637H29V683H135Q221 683 232 682T249 675Q250 674 354 398L458 124L562 398Q666 674 668 675Q671 681 683 682T781 683H887V637H854Q814 636 803 634T785 622V61Q791 51 802 49T854 46H887V0H876Q855 3 736 3Q605 3 596 0H585V46H618Q660 47 669 49T688 61V347Q688 424 688 461T688 546T688 613L687 632Q454 14 450 7Q446 1 430 1T410 7Q409 9 292 316L176 624V606Q175 588 175 543T175 463T175 356L176 86Q187 50 261 46H278V0H269Q254 3 154 3Q52 3 37 0H29V46H46Q78 48 98 56T122 69T132 86V622Z\"></path><path id=\"MJX-2-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-2-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-2-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-2-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-2-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-2-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"4C\" xlink:href=\"#MJX-2-TEX-N-4C\"></use><use data-c=\"43\" xlink:href=\"#MJX-2-TEX-N-43\" transform=\"translate(625,0)\"></use><use data-c=\"4D\" xlink:href=\"#MJX-2-TEX-N-4D\" transform=\"translate(1347,0)\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2264,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2653,0)\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3153,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-2-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3597.7,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-2-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4042.3,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-2-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4487,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-2-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4931.7,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-2-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5376.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use><use data-c=\"32\" xlink:href=\"#MJX-2-TEX-N-32\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6376.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g></g></g></svg>只有两三万的样子, 所以直接把这个字符串写两遍循环节, 然后来个双指针就行了. 感觉比上一题简单多了.</p>\n<p>这时候服务器已经不太行了, 都是zirrtu在那边先把提交页面刷出来等我和hx改好, 然后给他让他交. 我和zirrtu搞这题的时候, hx交了一发11题TLE了, 剩下感觉也没什么题可做, 我也不会dp, 就把希望寄托在hx上了, 不过我分析了一波, 好像他即使不做出来那题也基本能进现场赛, 所以我就没太在意. 感觉那天下我状态不错, 输出挺多的. 我和zirrtu都在给hx刷提交页面, 我的提交页面用掉了就用zirrtu的, 我接着刷提交页面.</p>\n<p>最后十分钟, hx把那题过了, 他好强.</p>\n<p>最后排名西电第三, 前面一个7题一个6题, 我们队也是6题, 然后看了一下即使我们最后那题不出也是5题第一名, 也是第三名.</p>\n<p>比赛结束才知道最后一题是原题, 好傻逼.</p>\n<p>本来以为这次ccpc现场赛稳进了, 结果又要重赛了, 下次不知道还有没有这么好的状态.</p>\n<p>最近托rx的福, 在210搞了个工位, 每天有效学习时间指数级增长, 开始复健了, 马上就又有一堆比赛了, 还要学CV的东西.</p>\n<p><img src=\"/img/ccpc2021_network/fufu.jpg\" alt=\"\"></p>\n","0e479cb4db46d150c9d36147177ea7ec8bd63f86":"<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2432.jpg\" alt=\"IMG_2432\"></p>\n<p>13号99就回家了，12号99要开一天团代会，所以11号就出来玩啦。</p>\n<!--more-->\n<p>本来上篇文章最后写了一点这些事情的，但是</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/t.png\" alt=\"t\"></p>\n<p>今天送她的时候跟她梳理了一路，把那天的行程完整的理一遍了。</p>\n<h3 id=\"Day-0\"><a href=\"#Day-0\" class=\"headerlink\" title=\"Day 0\"></a>Day 0</h3>\n<p>前一天，本来是想去看电影的，找到了想看的电影之后去订票。发现都是空的，以为我们要包场，但是怎么都订不下来，就放弃了。</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/44B5A49DF615B15136615DC71C59FDA5.jpg\" alt=\"44B5A49DF615B15136615DC71C59FDA5\"></p>\n<p>太晚了，当时只想到一个momopark可以去，因为有好喝的草莓长岛冰茶，然后去哪还不知道就睡了。</p>\n<h3 id=\"出发\"><a href=\"#出发\" class=\"headerlink\" title=\"出发\"></a>出发</h3>\n<p>早上九点多从丁香出发，先去图书馆超市买点东西，我买了一瓶热带风味和两个香肠。进超市的时候听到后面有很熟悉的声音，但是当时没注意。出门的时候99说刚刚孙江可带着他俩孩子在外面玩，还跟她打了招呼，我出来的时候他们已经走了。不过我就是见到他估计他也不认识我了，我只是一个平平无奇马原每节课都坐第二排的小透明。</p>\n<p>99说他之前跟舍友打车去的时候，司机的导航不会念momopark，只会M-O-M-O-P-A-R-K这样念出来。</p>\n<p>然后找了两辆小黄车，准备从北门骑出去骑到地铁站。但是失算了，北门门口的雷沣路在快到西太路上的部分有一个超大的大水坑，后面还都是车，趁着车停下来等红灯的时候我们俩蹭过去了。</p>\n<p>路上回头看到了云和山, 超级好看, 但是99的相机一直在我那, 我今天还没带, 就被埋怨没带相机了, 我是罪人.</p>\n<p>骑到国际医学，进6号线，到科技路转3号线，到吉祥村下车，就到momopark啦。</p>\n<h3 id=\"MOMOPARK\"><a href=\"#MOMOPARK\" class=\"headerlink\" title=\"MOMOPARK\"></a>MOMOPARK</h3>\n<p>第一步先去买草莓长岛冰茶，99说她本来想要半糖，但是要成了无糖，但是我感觉还是挺甜的，可能是我的味觉有点问题。</p>\n<p>然后去了无印良品，又看到了爆款透明笔盒和上次来就发现的瓶装咖啡。为了找点事干，99问我，“你要喝咖啡嘛”，我说我不。</p>\n<p>出去的时候看到一个奇怪的店名，我叫它一撇一捺。应该也不是日语，长音符号也不会出现在开头。</p>\n<p>看到了popmart的盲盒机。为了找点事干，99问我，“你要买盲盒嘛”。我们俩上去看一下，最低59，算了。</p>\n<p>旁边有一家火炉旁烤肉，之前99陪我去医院的时候就在火炉旁烤肉吃的，但是当时是去四楼那家，比较大。这一家比较小，上次跟科科和王老师去北校区的时候来问过，说这一家只能坐两个人，三个人只能去四楼那家。</p>\n<p>连续两次来momopark都吃的烤肉，而且这里除了烤肉也没太多好吃的东西，只能随便吃吃。然后99提议去问问杨神momopark有什么好吃的，当时我也没太纠结为什么要找杨神，反正就找了，杨神真万能。</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/ys.jpg\" alt=\"IMG_2444\"></p>\n<p>然后去了乐高店，进去看到了一个打字机. 店员过来给我们介绍这个打字机是新品, 跟真的打字机一样的效果. 我小心嘀咕了一句\"这玩意可以打字嘛\", 然后99直接去问店员了. 店员看着我们, 沉默了几秒, 说这个是不能真的打出字的, 因为你想打字是要墨的, 这里面肯定没有墨. 我感觉他沉默的时候可能在想他面前这两个人是什么东西.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2409.jpg\" alt=\"IMG_2409\"></p>\n<p>(左下角打字机)</p>\n<p>去了西西弗书店, 看了好长时间的书. 还找到一些很有格局的东西.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2413-1626193074306.jpg\" alt=\"IMG_2413\"></p>\n<p>99看中了一个名著徽章, 但是问了店员才知道卖完了. 最后她去网上买了一个, 她刚走今天东西就到学校了, 我帮她拿了.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/E6729ABD1BF350C240B73209FA8DC631.jpg\" alt=\"img\"></p>\n<p>还不是很饿，就先上二楼逛了。刚上二楼有个那种传声筒，就是很多颜色的弯曲的管子，然后一个人站在一个管子的一边，另一个人站在另一边，就可以互相说话了。然后我们俩去试了一下，她先去听我去另一边拍了一下，然后我也想试试，我们俩就换了个位置，然后她拍我听。后来才想到为什么一定要换位置呢。最近的智商越来越不够用了。</p>\n<p>对面有家Calvin Klein Jeans, 99也有他家的东西, 只不过是块表, 而这家店只卖牛仔裤.</p>\n<p>然后接着去找点事干，三楼都是女装和童装, 我们努力想要融入这层, 但是还是不太行. “你要买高跟鞋嘛”，“你要买裙子嘛”，\"你要给你家亲戚小孩买衣服嘛\", \"你要买珠宝嘛\".</p>\n<p>不过momopark有个好地方就是他里面挺多艺术品的. 这个叫婚变的作品, 里面有好多烧了的写满了字的纸. 我们研究了半天, 还是没看清纸上写的什么.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2410.jpg\" alt=\"IMG_2410\"></p>\n<p>上楼进四层, 里面都是吃的, 而且基本都是烤肉和火锅之类的. 逛了一圈也没找到啥想吃的, 倒是99遇到了两个图灵同学, 我也不认识, 也不敢说话.</p>\n<p>之后去B1找杨神说的牛肉dong饭, 都进去了, 看菜单, 发现不辣的都是带牛肉的, 不带牛肉的都是辣的, 99不吃牛肉也不吃辣, 就走了. 随便找了家卖面的, 里面只有biangbiang面和绿绿的菠菜面, 我们点了两份biangbiang面, 感觉还可以. 给我们的小票上写的是叫BB面, 挺神奇的.</p>\n<p>吃完了去MINISO, 99想买个墨镜, 顺便看看有没有玉桂狗口罩. 进去虽然没有找到玉桂狗口罩, 但是找到了玉桂狗的浴垫和拖鞋. 我觉得把玉桂狗踩在脚下也太残忍了, 但是99说拖鞋是把玉桂狗放在脚面上, 其实还行, 我觉得这样一说好像也有点道理.</p>\n<p>99试了几个墨镜, 前几个我都觉得太大了, 但她说她之前在福州丢的墨镜就这么大, 但是我还是觉得比例不是很协调. 最后换了几个我觉得还可以, 她就买了. 我还想找个帽子, 这几天去师大附中路上也太晒了, 但是没找到合适的.</p>\n<p>临走的时候99试了几个香水, 我觉得那个海盐的挺好闻的, 比较清新, 还买了个iPhone 11的手机膜.</p>\n<p>momopark的艺术品有的还挺有感觉, 两个人又参观了一会, 去了赛格.</p>\n<h3 id=\"赛格\"><a href=\"#赛格\" class=\"headerlink\" title=\"赛格\"></a>赛格</h3>\n<p>从三号线吉祥村上车, 坐一站就到小寨, 出站直接到赛格B2层.</p>\n<p>B2层一出地铁站有个奇怪的店, 99说刚刚在momopark是不是也有这个店, 但是我经典🐟的记忆, 没什么印象.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/BC66DSUOKE7QJW%7DV%25%608QXN8.png\" alt=\"img\"></p>\n<p>旁边是一家Zippo, \"你要买打火机嘛\", \"吹灭了可以召唤鬼怪\".</p>\n<p>遇到一家毛绒玩具店, 里面的动物真的和真的一模一样, 特别像. 还有个小的猫, 包装袋上印着\"按压此处发出声音\", 99按了一下发现这个猫真的可以叫.</p>\n<p>B1层中间有个贼大的钻石💎形的建筑, 是周大福, 还挺好看的.</p>\n<p>一楼全都是化妆品店, 99给我介绍了好多化妆品牌子, 不过大部分我都知道, 但是还是有很多没听说过.</p>\n<p>二楼三楼全都是女装, 童装和鞋子, 和momopark的三楼差不多. 然后进了四楼一家匡威, 过来的导购和99穿的还是一样的鞋子, 逛了一圈就出来了, 感叹一下匡威的鞋越做越丑了.</p>\n<p>五楼全都是电子产品店, 先去看了一家苹果, 体验了一下M1的MacBook和新的12.9的IPad Pro. 然后我用我的和他的比一下, 发现新的IPad Pro 12.9变厚了一点点, 可能是因为Mini-LED吧.</p>\n<p>不过妙控键盘真的挺好用的, 就是有点贵.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2417-1626192927589.jpg\" alt=\"IMG_2417\"></p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2418.jpg\" alt=\"IMG_2418\"></p>\n<p>然后去逛了京东之家, 外星人, 微软. 我们俩还都拿着上次去西交发的微软手提袋进去的, 不过没啥用, surface还是用着挺难受.</p>\n<p>去了6楼, 但是都是吃的, 中午也吃过饭了, 就准备下楼. 太累了 , 所以选择去坐直梯.</p>\n<p>在六楼没找到直梯, 就下到了五楼, 找到了直梯. 电梯在11楼, 一层一层下来, 大概到六七层电梯就满了, 五楼根本不停. 我以为他下一次会只到五楼来接我们, 但是发现我想多了, 他还是去11楼然后一层一层下来.</p>\n<p>我们要去B2, 我们发现旁边有个只停偶数层的电梯, 正好可以去B2. 等了半天电梯还是不在这停, 我们以为电梯满了. 过了一会才想起来这是5楼, 人只停偶数层.</p>\n<p>然后找了个只停奇数层的电梯, 但是到我们这还是满了, 我决定拉着她去走扶梯. 其实扶梯走起来还挺快, 一会就到地铁了.</p>\n<p>地铁二号线小寨上车, 到北大街换一号线, 到皂河地铁站下车去宜家.</p>\n<h3 id=\"宜家\"><a href=\"#宜家\" class=\"headerlink\" title=\"宜家\"></a>宜家</h3>\n<p>一号线不愧是一号线, 整体都比较破旧. 特别是皂河地铁站, 本来感觉这里的空调就不是很凉快, 出站上楼梯的时候觉得每上一个台阶气温都上升了1度.</p>\n<p>不愧是西安, 一出站大太阳直接给我送走.</p>\n<p>周围还不是很繁华的样子, 我很怀疑自己是不是走错了, 直到出站一群小三轮喊着\"来来来宜家宜家\"我才知道这地方是对的, 但是还要走一段.</p>\n<p>地铁上还遇到了两个喝醉酒的, 我拉着99远离了他们, 离远点好.</p>\n<p>从地铁站到宜家路上遇到了一个高楼, 玻璃外墙映着云和天空, 挺好看的.</p>\n<p>宜家旁边这个商业中心叫搜宝中心, 这名字也很奇怪.</p>\n<p>一进宜家我们俩就都闻到一股山核桃味, 不知道是什么东西让我们都觉得这是山核桃味, 可能就是山核桃, 虽然可能性不大.</p>\n<p>宜家先从二楼逛, 第一个区域就是卖沙发的. 99说她好累, 找到了一个1299的沙发就坐了上去. 坐了大概十分钟, 我问她你还能动一动嘛, 她说能, 就换了个地方.</p>\n<p>找了个2499的很orangecheers的沙发(橙色的)坐着, 然后我们把刚买的手机膜给她手机贴上了, 在宜家里贴膜可能也只有我们能干出来.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2423.jpg\" alt=\"IMG_2423\"></p>\n<p>在沙发上看到一个小女孩, 她爸拿着一条玩具狗, 说\"我把这个买给你\". 99跟我说\"我要不要买个那个给你\", 然后她一看售价99大洋, 99瞬间没有了嚣张气焰.</p>\n<p>然后把其他几乎所有沙发都体验了一遍, 发现沙发除了皮质的, 其他的沙发都是越贵越舒服. 但是皮质的沙发都很贵而且不是很舒服, 主要是比较有质感.</p>\n<p>继续往后走, 有个展示用的55平的三人小屋, 我们去卧室里看了下, 是单独的隔间, 里面还有个大床. 我们在里面躺了一会才出来.</p>\n<p>后面是办公区, 试了几个椅子, 感觉都不是很舒服.</p>\n<p>99说她累了, 我抬头看一下指引牌, 给她指了一下说第7个就是卧室展间, 里面一定是很多床. 然后就直奔卧室了.</p>\n<p>路上我看到了卖夹子的, 我买了两套夹子.</p>\n<p>中间有展示用的相框, 99说这相框里的照片还没她拍的好看.</p>\n<p>看到了有小车, 我就拉了一个, 把我们俩的伞和包都放进去了.</p>\n<p>看到了好多台灯, 但是他们的开关都很隐蔽, 我们花了点时间把那些台灯的开关都找到啦.</p>\n<p>卧室展间里的床都有提示, 说体验床垫不能用手压, 不能用膝盖压, 不能坐着压, 必须躺下感受. 他都这么说了, 那我们也必须要躺着了.</p>\n<p>所以我们把所有的床都躺了一遍, 发现那个宣传什么云端体验的床垫还不错.</p>\n<p>还有那种好硬的床垫, 说是什么加强弹簧, 反正我们都不是很喜欢.</p>\n<p>躺下来的时候正好能看到屋顶上的一些奇奇怪怪的装饰. 都是用塑料纸挂起来的大波浪的感觉, 然后每次躺下99都会给我指哪里的大波浪有瑕疵, 掉下来了或者挂歪了, 逼死我这个强迫症.</p>\n<p>在其他床躺下的人换了一拨又一波, 只有我们俩一直在一个床上躺着. 然后过来俩人看这个床, 估计是想买. 然后他俩本来是想无视我们, 都四目相对了也假装没看到. 最后我们受不了了, 爬起来了, 他们好像是觉得我们输了一样笑我们, 99还比了个手势, 请他们躺床上.</p>\n<p>后面是儿童区. 看到了那种拆卸下来装一包的儿童小板凳, 四个板凳腿拆下来和保龄球的那个瓶子一样, 99觉得和胡萝卜一样, 反正就不像板凳腿.</p>\n<p>有个可以让你试笔的地方, 99在上面写了代码, 也就是上个文章的题图.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2425.jpg\" alt=\"IMG_2418\"></p>\n<p>看到了经典宜家大鲨鱼, 还有好多熊, 熊猫和蟒蛇. 99抱了半天才走.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2424.jpg\" alt=\"IMG_2424\"></p>\n<p>那个狗熊真的不错, 抱着的时候头会搭在你的肩上, 他的头还好重, 肚子还好大, 反正就是舒服, 99说\"反馈感极强\".</p>\n<p>然后去宜家餐厅吃饭, 吃饭的事上次那个理概念的文章里最后也讲了很多. 主要就是贵, 我拿了牛排和土豆泥, 土豆泥是肯定吃不完的, 我就没吃完过那玩意.</p>\n<p>99去买两根烤肠, 我去旁边拿了个黄色大袋子, 把我们的东西都放了进去. 但是小车好像不让拉进去, 就放在了外面.</p>\n<p>然后节选一段那个文章里对饮料的描述:</p>\n<p><strong>\"还有饮料就离谱, 看出了个新口味, 什么越橘, 第一次去接了一杯是透明的, 我以为就这么高级, 结果发现这长的这么像水的东西喝起来居然也跟水一模一样. 过一会再去接一杯才知道这玩意应该是粉红色的酸不拉几的, 我合理推测我第一次接的时候是刚加了原料之类的, 还没搞好就被我接了. 临走的时候99说想喝无糖可乐, 然后我去接了一杯, 接出来了纯水密堆积无糖可乐填空隙的淡棕色的东西, 喝起来跟丁香食堂某些窗口刚开业的时候送的兑水可乐一个味, 接了几杯颜色就没变过, 就放弃了. 餐盘都送了才看到有人接出来了最起码像无糖可乐的东西, 血亏.\"</strong></p>\n<p><em>-- Orange Cheers 《重新理解简单回归相关的一些概念》</em></p>\n<p>99虽然不吃牛肉, 但是她想切牛排, 她就说我牛排切的不好, 拿着我的刀和叉切了去切了. 我说我也想切, 就让她给我留了一半.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2428.jpg\" alt=\"IMG_2418\"></p>\n<p>吃完送完餐盘之后看到了好看的晚霞, 金光闪闪的, 就拍了下来, 就是文章首图.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2432.jpg\" alt=\"IMG_2432\"></p>\n<p>99说, \"没有我你肯定看不到这么好看的晚霞\".</p>\n<p>回去快到地铁站了才发现这照片下面还有跳广场舞的.</p>\n<p>吃完出来, 我推了个大推车, 这玩意真的重还难推. 99在前面拉着控制方向, 我在后面推着才勉强控制住.</p>\n<p>下楼, 99想吃宜家经典2块钱的冰淇淋, 但是不知道在哪, 就去问了工作人员, 工作人员说在收银之后.</p>\n<p>下楼还有一段可以逛, 周围好多毛绒玩具放在奇奇怪怪的地方, 特别是那个蟒蛇, 哪里都有它. 99发现那个蟒蛇本来就有形状的, 怪不得我刚刚想把它缠脖子上不好缠.</p>\n<p>99抱了一个大鲨鱼, 一直抱到收银台都不舍得放下来.</p>\n<p>结账, 去买冰淇淋. 我就要了个2块钱的香草+巧克力的双色冰淇淋, 她要了个3块的草莓雪芭, 但她说好酸.</p>\n<p>到皂河地铁站, 坐地铁回去啦. 路上看到新年快乐, 跟我在师大附中看到\"你好十月\"一样的穿越感.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2434.jpg\" alt=\"IMG_2418\"></p>\n<p>本来准备1号线到北大街转2号线, 再到小寨转3号线, 再到科技路转6号线的. 在一号线上我灵机一动多坐了一段直接到通化门转3号线, 这样就少换乘了一次, 也不知道哪个更快.但是换乘确实少了一次, 99都在地铁上睡着啦.</p>\n<p>到了国际医学中心, 我说我渴, 我们俩就去自动售货机上买了两瓶水溶C100, 都给酸死啦.</p>\n<p><img src=\"/img/momopark-saga-ikea.assets/IMG_2481.jpg\" alt=\"IMG_2481\"></p>\n<p>从国际医学到学校走回去的, 路上聊了好多, 如果不是她我这学期连一次都不会出来玩的吧, 好幸运啊.</p>\n","b9496a03d9c143a9c03a31b990da4e6af41578ff":"<p><img src=\"/img/network/router.jpg\" alt=\"\"></p>\n<p>最近事情多到抑郁, 但是我这种佛人再忙也要绞尽脑汁想点没用的事给自己做.</p>\n<!--more-->\n<p>为了让家里各个角落都有wifi用并且有个地方能跑一些奇怪的网络服务, 我一两年前搞了个工控机当软路由用, D2550+从高一买的神船上拆下来的4g内存条刷了个openwrt系统, 我之前写玩具Ray Tracer的时候还在这个神机上出过一张图.</p>\n<p>我们家之前是router+3AP结构, 主路由是那个软路由, 然后还有三个硬路由当AP用. 其中一个AP是无线桥接上去, 另外两个是有线桥接. 后来无线桥接的路由器死了, 也懒得补上去, 就保持着router+2AP的结构了.</p>\n<p>光纤进来的时候接进了一个光猫, 这个光猫应该是集成了调制解调器和无线路由器的功能, 而且强制把PPPoE拨号放在了这上面. 但是这玩意一看就属于性能羸弱的类型, 而且这个超级密码应该是联网自动更新的. 我去恩山上面找到个在安徽移动上班的大神, 查到了自己家光猫的超级密码, 进去反手改一个桥接.</p>\n<p>然后用主路由WAN口连上光猫的LAN, 把拨号, DHCP服务器和一些奇怪的服务全部搬到了主路由上. 然后主路由的LAN接到AP1的LAN, AP1的另一个LAN接到AP2的LAN上, 相当于把这俩硬路由当成了交换机用, 全家都在一个网段(192.168.8.1/24).</p>\n<p><img src=\"/img/network/topo_1.png\" alt=\"\"></p>\n<p>(众所周知, 邦邦是路由器)</p>\n<p>现在遇到的问题就是, AP1, 也就是在我卧室的这个硬路由, 他只有两个LAN口, 全部都被用了. 现在我想把一个台式机放在这里有线接入都没有地方接了.</p>\n<p>现在初步一想, 有两个方法:</p>\n<ul>\n<li>在软件层面上把AP1的WAN口强行改成LAN口.</li>\n<li>把AP1和AP2调换一下位置, AP2的LAN口多.</li>\n</ul>\n<p>第一个方法硬路由的原生固件肯定是不支持的, 如果想要做的话, 需要给这个硬路由也刷上openwrt才有可能. 刷硬路由太折磨人了, 而且固件还有可能出问题, 所以就放弃了.</p>\n<p>看起来第二种方法好像更简单一点, 按理说, 我只需要把这俩路由器调换一下位置, 连管理界面都不需要进. 但是我们家两个AP的的wifi的SSID不一样, 为了让wifi还停留在原地, 我还想调换AP的同时把这俩wifi的SSID调换一下.</p>\n<p>这时候我遇到一个大问题, 我忘了两个硬路由的LAN口地址了. 因为是桥接网络, 所以两个硬路由的DHCP服务器一定是要关掉的, 这样我就真不知道怎么拿到他们的IP地址了/dx.</p>\n<p>只能把两个路由器重置一下, 默认他们的DHCP服务器是开的, 用个网线直接连电脑就能拿到网关地址, 然后就能进管理界面了.</p>\n<p>进去之后关DHCP, 设置两个硬路由LAN口地址分别为192.168.8.2和192.168.8.3, 192.168.8.1是给主路由用的. 把SSID换一下, 就完成了.</p>\n<p>灵异事件出现了, 之前工作的好好的超长网线这时候不起作用了, 超长网线另一端的AP根本访问不到主路由. 我以为是超长网线的问题, 但是我把超长网线接到光猫的LAN口上的时候, 那边AP接入的设备甚至还能分到光猫里DHCP服务器分来的192.168.1.1网段的IP.</p>\n<p>合理推断, 应该是换来的这个硬路由的问题, \"带不动\"这根长网线. 无奈, 只好再换回来.</p>\n<p>然后再想有没有第三种方法. 我想如果把拨号的任务交给这个硬路由, 然后DHCP和其他服务还是交给软路由做, 但是软路由只用一根网线接到主硬路由LAN上, 主硬路由的另一个LAN口还接AP2. 这样主硬路由的WAN就被利用上了, 接在了光猫上. 而这里多利用的一个口就会导致软路由上少用一个口, 软路由以前的WAN口现在是空闲的, 成了一个单臂路由. 但是因为软路由是openwrt系统, 他的WAN和LAN可以在软件上定义, 我可以把剩下这个WAN改成LAN, 这样就多了一个可以利用的LAN口了. 我们家最大带机量应该是10个左右, 我感觉这对硬路由来说应该问题不大. 唯一的缺点就是这样在千兆链路上最大只能跑500Mbps, 不过这对我们家够了.</p>\n<p><img src=\"/img/network/topo_2.png\" alt=\"\"></p>\n<p>然后遇到一个离谱的问题, 搭好结构后, 本来就挺完美的, 就是感觉好像上网稍微有点慢, 就没注意. 过了一会QQ电话打不了, 上国内网站贼慢, 再过一会直接qq发不了消息, 但是可以收消息, 国内网站也上不了. 找了一圈, 把下面这俩拒绝改成了接受就没事了, 现在也不知道是为什么.</p>\n<p><img src=\"/img/network/openwrt.png\" alt=\"\"></p>\n<p>加入了xsh的zerotier网络, 在他失去了屏幕的游戏本上开了虚拟机, 渲染了一张图.\n<img src=\"/img/network/xsh.jpg\" alt=\"\"></p>\n","0751885fc0a4c59ba81c6af91168d30c48d74daf":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>C 国有 n 个大城市和 m 条道路，每条道路连接这 n 个城市中的某两个城市。任意两个城市之间最多只有一条道路直接相连。这 m 条道路中有一部分为单向通行的道路，一部分为双向通行的道路，双向通行的道路在统计条数时也计为 1 条。</p>\n<p>C 国幅员辽阔，各地的资源分布情况各不相同，这就导致了同一种商品在不同城市的价格不一定相同。但是，同一种商品在同一个城市的买入价和卖出价始终是相同的。\n<img src=\"https://cdn.luogu.com.cn/upload/pic/27.png\" alt=\"\"></p>\n<!--more-->\n<p>商人阿龙来到 C 国旅游。当他得知同一种商品在不同城市的价格可能会不同这一信息之后，便决定在旅游的同时，利用商品在不同城市中的差价赚回一点旅费。设 C 国 n 个城市的标号从 1~ n，阿龙决定从 1 号城市出发，并最终在 n 号城市结束自己的旅行。在旅游的过程中，任何城市可以重复经过多次，但不要求经过所有 n 个城市。阿龙通过这样的贸易方式赚取旅费：他会选择一个经过的城市买入他最喜欢的商品――水晶球，并在之后经过的另一个城市卖出这个水晶球，用赚取的差价当做旅费。由于阿龙主要是来 C 国旅游，他决定这个贸易只进行最多一次，当然，在赚不到差价的情况下他就无需进行贸易。</p>\n<p>假设 C 国有 5 个大城市，城市的编号和道路连接情况如下图，单向箭头表示这条道路为单向通行，双向箭头表示这条道路为双向通行。</p>\n<p>假设 1~n 号城市的水晶球价格分别为 4，3，5，6，1。</p>\n<p>阿龙可以选择如下一条线路：1-&gt;2-&gt;3-&gt;5，并在 2 号城市以 3 的价格买入水晶球，在 3号城市以 5 的价格卖出水晶球，赚取的旅费数为 2。</p>\n<p>阿龙也可以选择如下一条线路 1-&gt;4-&gt;5-&gt;4-&gt;5，并在第 1 次到达 5 号城市时以 1 的价格买入水晶球，在第 2 次到达 4 号城市时以 6 的价格卖出水晶球，赚取的旅费数为 5。</p>\n<p>现在给出 n 个城市的水晶球价格，m 条道路的信息（每条道路所连接的两个城市的编号以及该条道路的通行情况）。请你告诉阿龙，他最多能赚取多少旅费。</p>\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3>\n<p>第一行包含 2 个正整数 n 和 m，中间用一个空格隔开，分别表示城市的数目和道路的数目。</p>\n<p>第二行 n 个正整数，每两个整数之间用一个空格隔开，按标号顺序分别表示这 n 个城市的商品价格。</p>\n<p>接下来 m 行，每行有 3 个正整数，x，y，z，每两个整数之间用一个空格隔开。如果 z=1，表示这条道路是城市 x 到城市 y 之间的单向道路；如果 z=2，表示这条道路为城市 x 和城市y 之间的双向道路。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3>\n<p>输出文件 trade.out 共 1 行，包含 1 个整数，表示最多能赚取的旅费。如果没有进行贸易，则输出 0。</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<h3 id=\"输入样例-1：\"><a href=\"#输入样例-1：\" class=\"headerlink\" title=\"输入样例#1：\"></a>输入样例#1：</h3>\n<p>5 5\n4 3 5 6 1</p>\n<p>1 2 1\n1 4 1\n2 3 2\n3 5 1\n4 5 2</p>\n<h3 id=\"输出样例-1：\"><a href=\"#输出样例-1：\" class=\"headerlink\" title=\"输出样例#1：\"></a>输出样例#1：</h3>\n<p>5\n说明</p>\n<h2 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h2>\n<p>输入数据保证 1 号城市可以到达 n 号城市。</p>\n<p>对于 10%的数据，1≤n≤6。</p>\n<p>对于 30%的数据，1≤n≤100。</p>\n<p>对于 50%的数据，不存在一条旅游路线，可以从一个城市出发，再回到这个城市。</p>\n<p>对于 100%的数据，1≤n≤100000，1≤m≤500000，1≤x，y≤n，1≤z≤2，1≤各城市</p>\n<p>水晶球价格≤100。</p>\n<p>NOIP 2009 提高组 第三题</p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1>\n<p>解法1：tarjan缩点+dp</p>\n<p>解法2：分层图思想</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/10006.png\" alt=\"\"></p>\n<p>【图源题解】</p>\n","2a97b94bdee805f959e4fa7757a859081618ddfd":"<p><img src=\"/img/regression-concept.assets/cover.jpg\" alt=\"cover\"></p>\n<p>这两天准备手写一个手写数字识别, 但是在推导公式的时候感觉还是有点费劲, 可能是对之前的那些概念理解不是很深. 先去研究一下一些概念的本质含义吧.</p>\n<!--more-->\n<h3 id=\"Loss函数\"><a href=\"#Loss函数\" class=\"headerlink\" title=\"Loss函数?\"></a>Loss函数?</h3>\n<p>首先我遇到的直接问题就是怎么写多分类的loss, 研究一下Logistic二分类中是使用的交叉熵来定义的Loss. 这个可能可以从两个方向去理解. 第一个方向是交叉熵是什么, 第二个方向就像我之前文章里说的那样, 交叉熵是二分类问题中的似然函数.</p>\n<h3 id=\"相对熵-KL散度\"><a href=\"#相对熵-KL散度\" class=\"headerlink\" title=\"相对熵(KL散度)\"></a>相对熵(KL散度)</h3>\n<p>相对熵或KL散度是衡量两个分布差异的一个量.</p>\n<p>相对熵的定义是, 站在A的角度看, B与A概率对数差的期望.</p>\n<p>用数学公式表达是:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.697ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.252ex\" height=\"6ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 15581.3 2652.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path><path id=\"MJX-1-TEX-I-1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path><path id=\"MJX-1-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-1-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-1-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-1-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-1-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-1-TEX-N-2061\" d=\"\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D437\" xlink:href=\"#MJX-1-TEX-I-1D437\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D43E\" xlink:href=\"#MJX-1-TEX-I-1D43E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-1-TEX-I-1D43F\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2021.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2410.2,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-1-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3160.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-1-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3438.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-1-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3716.2,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-1-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4475.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5141.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6197.7,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"munder\" transform=\"translate(7142.4,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-1-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(600,-1084.4) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(8753,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-1-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9504,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(9893,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-1-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10970,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11525.7,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-1-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-1-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12359.7,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-1-TEX-N-2061\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(12526.3,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-1-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1140,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D435\" xlink:href=\"#MJX-1-TEX-I-1D435\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2226,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(224.5,-710)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-1-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1140,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-1-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2217,0)\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g></g><rect width=\"2815\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>站在A的角度看的意思是, 某个概率对数差发生的概率是对应A取该值的概率.</p>\n<p>重要的是, 相对熵并不满足对称性, 也就是说站在B角度看和站在A角度看得到的结果是不一样的.</p>\n<p>站在B角度看的相对熵:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.172ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.272ex\" height=\"5.475ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 15590.3 2420\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path><path id=\"MJX-2-TEX-I-1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path><path id=\"MJX-2-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-2-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-2-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-2-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-2-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-2-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-2-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-2-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-2-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-2-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-2-TEX-N-2061\" d=\"\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D437\" xlink:href=\"#MJX-2-TEX-I-1D437\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D43E\" xlink:href=\"#MJX-2-TEX-I-1D43E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-2-TEX-I-1D43F\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2021.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2410.2,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-2-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3169.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-2-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3447.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-2-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3725.2,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-2-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4475.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5141.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6197.7,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-2-TEX-N-2212\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7142.4,0)\"><use data-c=\"2211\" xlink:href=\"#MJX-2-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8753,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-2-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9504,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(9893,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D435\" xlink:href=\"#MJX-2-TEX-I-1D435\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10979,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11534.7,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-2-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-2-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12368.7,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-2-TEX-N-2061\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(12535.3,0)\"><g data-mml-node=\"mrow\" transform=\"translate(224.5,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-2-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1140,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-2-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2217,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-710)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-2-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(751,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1140,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D435\" xlink:href=\"#MJX-2-TEX-I-1D435\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2226,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g></g><rect width=\"2815\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>也就是说, <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.027ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 11061.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path><path id=\"MJX-3-TEX-I-1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path><path id=\"MJX-3-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-3-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-3-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-3-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D437\" xlink:href=\"#MJX-3-TEX-I-1D437\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D43E\" xlink:href=\"#MJX-3-TEX-I-1D43E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-3-TEX-I-1D43F\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2021.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2410.2,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3160.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-3-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3438.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-3-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3716.2,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-3-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4475.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5141.9,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-3-TEX-N-2260\"></use></g><g data-mml-node=\"msub\" transform=\"translate(6197.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D437\" xlink:href=\"#MJX-3-TEX-I-1D437\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D43E\" xlink:href=\"#MJX-3-TEX-I-1D43E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-3-TEX-I-1D43F\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8218.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8607.9,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-3-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9366.9,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-3-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9644.9,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-3-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9922.9,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10672.9,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg>.</p>\n<h3 id=\"交叉熵\"><a href=\"#交叉熵\" class=\"headerlink\" title=\"交叉熵\"></a>交叉熵</h3>\n<p>把上面A角度下的相对熵公式进行变形:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.697ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"52.961ex\" height=\"4.847ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -950 23409 2142.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D437\" d=\"M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z\"></path><path id=\"MJX-4-TEX-I-1D43E\" d=\"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z\"></path><path id=\"MJX-4-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-4-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-4-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-4-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-4-TEX-I-1D435\" d=\"M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z\"></path><path id=\"MJX-4-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-4-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-4-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-4-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-4-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-4-TEX-N-2061\" d=\"\"></path><path id=\"MJX-4-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D437\" xlink:href=\"#MJX-4-TEX-I-1D437\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D43E\" xlink:href=\"#MJX-4-TEX-I-1D43E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(889,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-4-TEX-I-1D43F\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2021.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2410.2,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-4-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3160.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-4-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3438.2,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-4-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3716.2,0)\"><use data-c=\"1D435\" xlink:href=\"#MJX-4-TEX-I-1D435\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4475.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5141.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-4-TEX-N-3D\"></use></g><g data-mml-node=\"munder\" transform=\"translate(6197.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-4-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(600,-1084.4) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(7808.4,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-4-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8559.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(8948.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-4-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10025.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10581,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-4-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-4-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11415,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-4-TEX-N-2061\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11581.7,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-4-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12332.7,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(12721.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-4-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(13798.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(14409.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-4-TEX-N-2212\"></use></g><g data-mml-node=\"munder\" transform=\"translate(15410.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-4-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(600,-1084.4) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(17020.7,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-4-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(17771.7,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(18160.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-4-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(19237.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(19793.3,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-4-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-4-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(20627.3,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-4-TEX-N-2061\"></use></g><g data-mml-node=\"mi\" transform=\"translate(20794,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-4-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(21545,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(21934,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D435\" xlink:href=\"#MJX-4-TEX-I-1D435\"></use></g><g data-mml-node=\"mi\" transform=\"translate(792,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(23020,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>可以惊奇地发现, 第一项就是A的熵, 如果A的分布不变, 那他就是个常数.</p>\n<p>我们把后一项拿下来, 当作A对B的交叉熵.</p>\n<p>注意一下, 自己最自己的交叉熵其实就是自己的熵, 并不一定是0.</p>\n<h3 id=\"分布\"><a href=\"#分布\" class=\"headerlink\" title=\"分布\"></a>分布</h3>\n<p>这个概念也挺重要, 虽然很基本.</p>\n<p>高中学的分布列其实就是把一个随机变量所有可能取值对应的概率列出来.</p>\n<p>一个随机变量在每一个值上不同的概率分布情况.</p>\n<p>在训练的过程中, 其实出现了两个分布. 一个是正确的分布, 就是训练集的标签, 在二分类问题中, 这个是一个在一类的概率为1, 另一类概率为0的一个分布, 随机变量两种取值(在第一类和在第二类).</p>\n<p>在多分类问题中, 这个实际上是一个在一个类的概率为1, 其他类的概率都为0的一个分布.</p>\n<p>另一个分布是模型预测出的分布, 他对于输入, 给出这个输入在每一类他认为的概率.</p>\n<p><strong>我们的目标就是让这两个分布(预测出的分布和实际分布)差异尽量小.</strong></p>\n<p>实际分布是不变的, 所以我们取<strong>实际分布对预测分布的</strong>交叉熵. 为了让这两个分布差异尽量小, 我们需要让交叉熵尽量小. 所以我们用交叉熵当作Loss函数, 然后最小化Loss函数. 这就是第一种理解方法.</p>\n<p>第二种理解方法是纯数学上的.</p>\n<h3 id=\"似然\"><a href=\"#似然\" class=\"headerlink\" title=\"似然\"></a>似然</h3>\n<p>似然函数也是一种条件概率, 但是他考虑的因果关系是相反的.</p>\n<p>正常我们考虑一个分类问题, 是求在给定的参数下, 这个输入属于哪一类的分布.</p>\n<p>但是似然函数研究的是, 现在知道这个输入属于哪一类, 要求这个参数取值的相关信息.</p>\n<p>这就很有贝叶斯公式的味道. 但是似然函数研究的并不是概率.</p>\n<h3 id=\"似然性-极大似然估计\"><a href=\"#似然性-极大似然估计\" class=\"headerlink\" title=\"似然性/极大似然估计\"></a>似然性/极大似然估计</h3>\n<p>似然函数终究还没有考虑现在的自变量是参数, 他写出的还是这个事件发生的概率和参数的关系, 我们只是人为地把自变量换成了参数. 所以似然函数得到的并不是\"参数取这个值的可能性\", 而\"参数取这个值的时候, 这个事件发生的可能性\".</p>\n<p>这个和概率是很不一样的. 首先, 在给定参数下, 对于一个随机变量X, 他所有取值的概率加起来一定是1. 但是对于参数的每个取值, 这些似然函数得到的值加起来并不一定为1. 我们把这个似然函数得到的值叫做似然性.</p>\n<p>直接看似然性的取值是没有任何意义的, 只有两个同一问题下的似然性在一起比较的时候, 似然性更大的那个参数取值才被我们认为是参数更有可能取到的值. 所以, 我们可以找到似然性最大的参数取值, 并认为他就是参数的最可能取值, 这就叫极大似然估计.</p>\n<p>实际上, 交叉熵就是多分类问题的似然函数加个负号., 在之前说Logistic回归的时候, 已经证明了在二分类问题中的交叉熵就是似然函数加负号(好像只是放个了草稿). 为了做极大似然估计, 我们需要最小化交叉熵, 这是另一种理解交叉熵的方法.</p>\n<p>本来准备11号把这个文章理完的, 但是11号出去玩了一天, 上午去momopark中午去赛格下午去宜家, 宜家真是好地方, 把里面最贵的沙发和床都体验了一遍. 就是一号线好像都不是很新的样子, 从皂河地铁站出来每上一个台阶感觉周围的气温都上升了1度, 一出门看一群三轮车喊宜家宜家我才确认自己来对了地方. 饭也有点贵, 随便吃个牛排啥的就四五十了, 不过土豆泥还是一如既往的吃不完, 我就从来没吃完过宜家的土豆泥.</p>\n<p>还有饮料就离谱, 看出了个新口味, 什么越橘, 第一次去接了一杯是透明的, 我以为就这么高级, 结果发现这长的这么像水的东西喝起来居然也跟水一模一样. 过一会再去接一杯才知道这玩意应该是粉红色的酸不拉几的, 我合理推测我第一次接的时候是刚加了原料之类的, 还没搞好就被我接了. 临走的时候99说想喝无糖可乐, 然后我去接了一杯, 接出来了纯水密堆积无糖可乐填空隙的淡棕色的东西, 喝起来跟丁香食堂某些窗口刚开业的时候送的兑水可乐一个味, 接了几杯颜色就没变过, 就放弃了. 餐盘都送了才看到有人接出来了最起码像无糖可乐的东西, 血亏.</p>\n<p>这两天还在尝试自己手推多分类问题的过程, 明天上午送99去北站, 下午去师大附中讲课, 争取地铁上推完晚上就写.</p>\n","0ffe145963f880931ada9711d4ca122d22a538b1":"<p>查缺补漏 冲刺icpc</p>\n<h2 id=\"前缀函数\"><a href=\"#前缀函数\" class=\"headerlink\" title=\"前缀函数\"></a>前缀函数</h2>\n<p>前缀函数 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-1-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-1-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-1-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-1-TEX-N-5D\"></use></g></g></g></svg> 代表在字符串 <svg style=\"vertical-align: -0.023ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.023ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 469 452\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D460\" xlink:href=\"#MJX-2-TEX-I-1D460\"></use></g></g></g></svg> 中, 以 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g></g></svg> 结尾的字串中, 最长的相等的前后缀, 即前 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-4-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-4-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-4-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-4-TEX-N-5D\"></use></g></g></g></svg> 个字符组成的字符串和后 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-5-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-5-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-5-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-5-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-5-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-5-TEX-N-5D\"></use></g></g></g></svg> 个字符组成的字符串是相等的.</p>\n<!--more-->\n<p>对于字符串的第 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-6-TEX-I-1D456\"></use></g></g></g></svg> 个字符, 当前 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.677ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2067.4 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-7-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-7-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-7-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(567.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-7-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1567.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-7-TEX-N-31\"></use></g></g></g></svg> 个前缀函数都已求出时, 考虑求出 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-8-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-8-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-8-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-8-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-8-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-8-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-8-TEX-N-5D\"></use></g></g></g></svg>.</p>\n<p><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-9-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg> 的值是前多少个字符和后多少个字符相等, 如果第 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.122ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4915.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-10-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-10-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-10-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-10-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-10-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-10-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-10-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1415.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-10-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2415.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2915.4,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-10-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3415.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-10-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4415.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></svg> 个字符与新加入的第 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-11-TEX-I-1D456\"></use></g></g></g></svg> 个字符相等, 即之前字符串的前缀等于后缀, 如果新加入的这个字符等于之前相等前缀的后一个字符, 那么这个位置的前缀函数就是之前字符串前缀函数值加一.</p>\n<p>如果不相等, 考虑前缀函数的前缀与后缀相等, 前缀一定是从1开始, 后缀一定在 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.677ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2067.4 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-12-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(567.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-12-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1567.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g></g></g></svg> 结束. 并且显然, 此时新加入的位置的前缀函数不会比之前字符串最后的前缀函数值大, 因为第 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.122ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4915.9 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-13-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-13-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-13-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-13-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-13-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-13-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1415.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2415.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2915.4,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3415.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-13-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4415.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g></svg> 个字符与新加入的第 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-14-TEX-I-1D456\"></use></g></g></g></svg> 个字符不相等. 这时我们需要找下一个需要匹配的位置, 来寻找新位置的前缀函数. 可能会成为新前缀函数值指向的位置的地方, 一定是前缀已经与前 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.677ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2067.4 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-15-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-15-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-15-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(567.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-15-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1567.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-15-TEX-N-31\"></use></g></g></g></svg> 个字符组成的字符串的某一个后缀相等的地方. 又因为这个新的前后缀长度一定小于上一个前缀函数的值, 所以这个相当于求前缀函数值代表的字符串的前缀函数, 这个是我们已经求过的. 然后继续比较这个前缀函数的前缀函数的后面一个字符是否与新字符相等, 这也一直循环下去直到实在找不到某一个满足条件的前缀后缀, 这时 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.328ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 1471 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D70B\" d=\"M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z\"></path><path id=\"MJX-16-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-16-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70B\" xlink:href=\"#MJX-16-TEX-I-1D70B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(570,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(848,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-16-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1193,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g></g></g></svg> 等于0.</p>\n<p>(反正也没人看 我自己能看懂就行了)</p>\n<p>这个算法的复杂度表面上看起来不是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.844ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2141 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-17-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-17-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1752,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg>, 因为我们不仅要扫一遍每个字符, 并且在计算每个字符的前缀函数时还要去跳很多次. 但是考虑每一次跳的起点都是上一个字符的前缀函数值, 如果不考虑第一次就匹配成功, 前缀函数值+1的情况, 那么每次起跳的起点就是上一次跳的结束的点, 因为上一次是在前缀函数值处跳结束了才得到的这里就是前缀函数值. 然后考虑第一次匹配成功, 前缀函数值+1的情况. 因为前缀函数值小于等于字符串长度, 所以前缀函数值最多加 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-18-TEX-I-1D441\"></use></g></g></g></svg> 次, 最后跳的次数还是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.495ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2429 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-19-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-19-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-19-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-19-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-19-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2040,0)\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g></g></g></svg> 级别的.</p>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2>\n<ol>\n<li>当匹配字符串与模式串每次都在第一个字符失配时,暴力算法的效率并不坏.</li>\n<li>暴力算法的可优化之处在于当从某一个字符开始,后面已经与模式串匹配了很多字符,这时如果失配,下一个字符仍然要从模式串的首部开始匹配,浪费了计算资源.</li>\n<li>求出模式串的前缀函数next,当在匹配串的某一位置失配时,可以知道当匹配串指针不动的情况下,模式串应该移动到何处才能让匹配串指针前的模式串与匹配串仍是匹配的.这是一个充分必要的条件,即next数组所求得的移动位置是不会多也不会少的,证明了正确性.由于这样匹配串的指针不会倒退,只会前进,所以匹配过程的复杂度是O(N)的,这时每次从匹配串字符开始匹配时模式串的移动距离就不重要了.\n(To be continued…)</li>\n</ol>\n<p>update: 字符串不是我负责了, 我爬了</p>\n","1cb5e6df03061de883535c86217dd43927a7978a":"<h6 id=\"都不知道六楼机房的门能反锁\"><a href=\"#都不知道六楼机房的门能反锁\" class=\"headerlink\" title=\"都不知道六楼机房的门能反锁\"></a>都不知道六楼机房的门能反锁</h6>\n","5d8b2d8126bbccabce8eb984698cc5ccf41c47a4":"<p>我是Orange Cheers, 现在在西安电子科技大学计算机科学与技术专业读大三.</p>\n<p>四年级开始接触编程, 当时学的是C#. 初中主要在研究Android开发, 高中打过NOIP, 大学打过ACM和数模, 现在对机器学习系统 (Systems for ML) 有点感兴趣.</p>\n<p>Loveliver/邦邦人, 主推穂乃果和ksm.</p>\n<p>脱单啦, 我女朋友 @ClaireEleanor99 最可爱啦.</p>\n<h3 id=\"获奖\"><a href=\"#获奖\" class=\"headerlink\" title=\"获奖\"></a>获奖</h3>\n<p><strong>2016.12</strong> 全国信息学奥林匹克联赛(NOIP 2016)提高组 <strong>省级三等奖</strong></p>\n<p><strong>2017.10</strong> 中国化学奥林匹克 <strong>省级二等奖</strong></p>\n<p><strong>2018.12</strong> 全国信息学奥林匹克联赛(NOIP 2016)提高组 <strong>省级二等奖</strong></p>\n<p><strong>2019.12</strong>  西安电子科技大学ACM程序设计新生赛 <strong>一等奖</strong></p>\n<p><strong>2019.12</strong> 西安电子科技大学微软俱乐部 <strong>优秀部员</strong></p>\n<p><strong>2019.12</strong> 全国计算机软件能力认证(CSP) <strong>全国前2%</strong></p>\n<p><strong>2020.09</strong>  西安电子科技大学ACM程序设计校赛 <strong>一等奖</strong></p>\n<p><strong>2020.09</strong> 陕西省大学生程序设计竞赛 <strong>铜奖</strong></p>\n<p><strong>2020.10</strong> 西安电子科技大学校级<strong>一等奖学金</strong></p>\n<p><strong>2020.10</strong> CCF大学生计算机系统与程序设计竞赛 (CCSP)<strong>西北赛区银奖</strong>、<strong>全国铜奖</strong></p>\n<p><strong>2020.10</strong> IEEEXtreme 14.0 极限编程竞赛全球排名 <strong>53/3701</strong></p>\n<p><strong>2020.11</strong> CCCC团体程序设计天梯赛全国<strong>个人银奖</strong>、<strong>团队铜奖</strong></p>\n<p><strong>2020.12</strong> 第十二届全国大学生数学竞赛陕西<strong>省二等奖</strong></p>\n<p><strong>2020.12</strong> 第45届国际大学生程序设计竞赛 (ICPC) 亚洲区域赛 (济南) <strong>铜奖</strong></p>\n<p><strong>2020.04</strong> 美国大学生数学建模竞赛（MCM/ICM）<strong>国际一等奖 (Meritorious Winner)</strong></p>\n<p><strong>2021.04</strong> 西安电子科技大学 <strong>优秀学生</strong></p>\n<p><strong>2021.05</strong> CCCC团体程序设计天梯赛全国<strong>个人银奖</strong>、<strong>团队铜奖</strong></p>\n<p><strong>2021.06</strong> 第45届国际大学生程序设计竞赛 (ICPC) 全国邀请赛(西安) <strong>银奖</strong></p>\n<p><strong>2021.09</strong> 中国计算机学会 <strong>CCF优秀大学生奖</strong></p>\n<p><strong>2021.10</strong> <strong>国家奖学金</strong></p>\n<h3 id=\"经历\"><a href=\"#经历\" class=\"headerlink\" title=\"经历\"></a>经历</h3>\n<p><strong>2020.06</strong> 西安电子科技大学 ACM竞赛双创周 <strong>讲师</strong></p>\n<p><strong>2020.06 - 现在</strong> 西安电子科技大学微软俱乐部 <strong>ACM组Mentor</strong></p>\n<p><strong>2020.08</strong> 转专业, 软件工程--&gt;<strong>计算机科学与技术</strong>, 排名 <strong>9/328</strong></p>\n<p><strong>2020.10</strong> 综合测评 <strong>11/324</strong> &amp; <strong>校级一等奖学金</strong></p>\n<p><strong>2021.06-现在</strong> 西安电子科技大学微软俱乐部 <strong>副主席</strong></p>\n<p><strong>2021.07</strong> 陕西师范大学附属中学 <strong>信息学竞赛讲师</strong></p>\n<p><strong>2021.08</strong> 计算机科学与技术专业 <strong>网络与信息安全方向</strong></p>\n<p><strong>2021.10</strong> 综合测评 <strong>3/484</strong> &amp; <strong>国家奖学金</strong></p>\n","5b3d8ea1163acffa1bdb2982d021a0275a1e1330":"","0b066654817a5d471cce982c444cf4a18e256b91":"","c71d6d761afd9f10e442f74175d13fa4563a9e25":"<p>西电计科大三, 曾经oi人, 半退役acm人.</p>\n<p>Loveliver/邦邦人, 主推穂乃果和ksm.</p>\n<p>脱单啦, 我女朋友 @ClaireEleanor99 最可爱啦.</p>\n","55150ffd7b5917b8609a64614a2e431b4060c71e":"<p>有N个变量,每个变量都能取T或F，需要满足M个条件: <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-1-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g></g></g></svg> or <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.432ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3284.9 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-2-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-2-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-2-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1480.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2535.9,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-2-TEX-I-1D439\"></use></g></g></g></svg></p>\n<p>要给每个变量赋值,满足所有条件.</p>\n<p>构造有向图G,每个<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-3-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g></g></g></g></svg>拆成两个点2i和2i+1, 分别表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-4-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g></g></g></g></svg>取T或者F. 每个变量选其中的一个进行标记,标记了节点2i表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-5-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-5-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-5-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-5-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-5-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-5-TEX-I-1D447\"></use></g></g></g></svg>,标记2i+1表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.325ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3237.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-6-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-6-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-6-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-6-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-6-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-6-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-6-TEX-I-1D439\"></use></g></g></g></svg>.</p>\n<p>对于每个条件,如<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-7-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-7-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-7-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-7-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-7-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-7-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-7-TEX-I-1D447\"></use></g></g></g></svg> or <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.432ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3284.9 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-8-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-8-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-8-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-8-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-8-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1480.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-8-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2535.9,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-8-TEX-I-1D439\"></use></g></g></g></svg>,可以从表示点i为F的节点到表示点j为F的节点连一条边,表示如果点i为F,那么点j一定是F. 同时,还要从表示点j为T的点向表示点i为T的点连一条边.</p>\n<h3 id=\"DFS方法\"><a href=\"#DFS方法\" class=\"headerlink\" title=\"DFS方法\"></a>DFS方法</h3>\n<!--more-->\n<p>逐个考虑每个未赋值的变量<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-9-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g></g></g></g></g></svg>,先假定为真,标记结点2i,然后沿着边标记所有可以标记的点,并记录这个过程中标记了的点,方便更换这个变量的赋值.如果发现某个变量的两个点都被标记了,说明这个变量不可能为真,就要按照刚刚的记录,将标记去掉,<strong>清空记录</strong>,标记节点2i+1,重复过程.<strong>注意在假定为真的dfs之前也要清空记录</strong>. 如果这时候还不行,这个问题就无解,即使改变之前变量的值也没用.</p>\n<p><strong>luogu P4782 模板</strong></p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1000005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> sv<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> to <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addcons</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vx</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vy</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">sat2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>假定为真的dfs之前清空记录\n</span>        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span>d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>d</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addcons</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-punctuation hl-separator hl-c++\">,</span>d</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">sat2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>POSSIBLE<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>IMPOSSIBLE<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<p>复杂度<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.714ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5619.4 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-10-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-10-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1752,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2141,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2963.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-10-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3963.4,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-10-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4841.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5230.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg></p>\n<p>这个方法还可以保证答案的字典序,对于大部分的题目已经够用了.</p>\n<h3 id=\"SCC方法\"><a href=\"#SCC方法\" class=\"headerlink\" title=\"SCC方法\"></a>SCC方法</h3>\n<p>用Tarjan对每个SCC缩点,如果某个变量对应的两个节点在一个SCC中,则问题无解,否则一定有解.</p>\n<p>如果一个变量的T结点所在SCC的拓扑序大于F结点的,那么就给这个变量赋T,否则赋F,用这个方法一定给所有有解的情况构造出答案.</p>\n<p>复杂度<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.596ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4241.4 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-11-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-11-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1974.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-11-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2974.4,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3852.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>,达到了输入下限.但由于无法保证解的字典序,一般只用于判断是否有解.</p>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2>\n<h3 id=\"Now-or-later-UVA-1146\"><a href=\"#Now-or-later-UVA-1146\" class=\"headerlink\" title=\"Now or later, UVA-1146\"></a>Now or later, UVA-1146</h3>\n<p><a href=\"https://vjudge.net/problem/UVA-1146\">https://vjudge.net/problem/UVA-1146</a></p>\n<h4 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h4>\n<p>每个飞机都有2个降落时间,早降落时间和晚降落时间,每个飞机都可以选择早或者晚降落,每个飞机的早晚降落时间是固定的,但是可以和其他飞机不同.</p>\n<p>你可以任意指定每个飞机的早晚降落情况,使每个飞机真正的降落时间之间的间隔最大.</p>\n<h4 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h4>\n<p>二分答案T,用<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.9ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3934 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-12-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-12-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-12-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-12-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-12-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-12-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-12-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1028,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-12-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1600,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-12-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1878,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-12-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2156,0)\"><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2656,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-12-TEX-N-2F\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(3156,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3656,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-12-TEX-N-5D\"></use></g></g></g></svg>代表第x个飞机的早降落时间和晚降落时间,如果<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.921ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 11457.2 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-13-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-13-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-13-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-13-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-13-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-13-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-13-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(278,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-13-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1028,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1306,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-13-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4297.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5297.6,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-13-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6047.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(6325.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-13-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(7334.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7612.1,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(7890.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-13-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-13-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8816.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9094.7,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-13-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9650.4,0)\"><use data-c=\"3C\" xlink:href=\"#MJX-13-TEX-N-3C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10706.2,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-13-TEX-I-1D443\"></use></g></g></g></svg>, 说明<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.591ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3797.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-14-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-14-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-14-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-14-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-14-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-14-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-14-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2592.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-14-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3519.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-14-TEX-N-5D\"></use></g></g></g></svg>与<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.591ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3797.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-15-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-15-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-15-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-15-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-15-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-15-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-15-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-15-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-15-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-15-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-15-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2592.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-15-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-15-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3519.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-15-TEX-N-5D\"></use></g></g></g></svg>不能同时选,即<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.331ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9428.2 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-16-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-16-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-16-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-16-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-16-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-N-26\" d=\"M156 540Q156 620 201 668T302 716Q354 716 377 671T401 578Q401 505 287 386L274 373Q309 285 416 148L429 132L437 142Q474 191 543 309L562 341V349Q562 368 541 376T498 385H493V431H502L626 428Q709 428 721 431H727V385H712Q688 384 669 379T639 369T618 354T603 337T591 316T578 295Q537 223 506 176T464 117T454 104Q454 102 471 85T497 62Q543 24 585 24Q618 24 648 48T682 113V121H722V112Q721 94 714 75T692 32T646 -7T574 -22Q491 -19 414 42L402 51L391 42Q312 -22 224 -22Q144 -22 93 25T42 135Q42 153 46 169T55 197T74 225T96 249T125 278T156 308L195 347L190 360Q185 372 182 382T174 411T165 448T159 491T156 540ZM361 576Q361 613 348 646T305 679Q272 679 252 649T232 572Q232 497 255 426L259 411L267 420Q361 519 361 576ZM140 164Q140 103 167 64T240 24Q271 24 304 36T356 61T374 77Q295 156 235 262L220 292L210 310L193 293Q177 277 169 268T151 229T140 164Z\"></path><path id=\"MJX-16-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"21\" xlink:href=\"#MJX-16-TEX-N-21\"></use></g><g data-mml-node=\"mo\" transform=\"translate(278,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(667,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1417,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1695,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-16-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-16-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2703.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2981.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3259.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-16-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-16-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4186.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4464.1,0)\"><use data-c=\"26\" xlink:href=\"#MJX-16-TEX-N-26\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5242.1,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5992.1,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(6270.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-16-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-16-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(7278.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7556.7,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(7834.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-16-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-16-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8761.2,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9039.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g></g></g></svg>, 由狄摩根定律,这个条件等价于<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.22ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4075.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-17-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-17-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-17-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-17-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-17-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-17-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-17-TEX-N-5B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"21\" xlink:href=\"#MJX-17-TEX-N-21\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-17-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-17-TEX-N-5D\"></use></g></g></g></svg> | <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.22ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4075.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-18-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-18-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-18-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-18-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-18-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-18-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-18-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-18-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-18-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-18-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-18-TEX-N-5B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"21\" xlink:href=\"#MJX-18-TEX-N-21\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-18-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-18-TEX-N-5D\"></use></g></g></g></svg>,这就转化为了2-SAT判断有解性问题.</p>\n<p><a href=\"https://vjudge.net/solution/24649633\">https://vjudge.net/solution/24649633</a></p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">hoabs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">twosat</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> sv<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> to <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">vis<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> vis</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">auto</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>v <span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span> G<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addcons</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vx</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">vy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> vx</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">sat2</span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-method hl-c++\">\n    </span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> sv<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-method hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>ts<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">N</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>k</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">hoabs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> x<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">addcons</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> ts<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">sat2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">solve</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2e7</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> l<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    \n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">~</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tb<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> tb</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>tb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">solve</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<p>(明明UVALive-3211和UVA-1146是一样的题,但是在vjudge上一样的代码只能过UVA-1146...刚开始交UVALive-3211怎么都过不去,换了个一模一样的题交就过了,魔幻)</p>\n","972162d0688a128a0e86c57d2ba18f9ebea31abf":"<p>昨天研究了一下JupyterHub的安装与配置,记录一下安装过程.</p>\n<p>因为不想折腾双系统,也不太信任现在的WSL,选择了在VMware中运行Ubuntu.</p>\n<h2 id=\"1-安装Ubuntu-20-04\"><a href=\"#1-安装Ubuntu-20-04\" class=\"headerlink\" title=\"1. 安装Ubuntu 20.04\"></a>1. 安装Ubuntu 20.04</h2>\n<p>前几天看到了Ubuntu的新LTS版本20.04出来了,一直想体验一把,正好趁这个机会看看长什么样.</p>\n<p>镜像我直接在官网上下的,安装用VMware的简易安装就行了.注意虚拟机的网卡改成桥接模式,让虚拟机直接从路由器上获取ip,方便搭建好在主机上访问JupyterHub.装好Ubuntu后别忘了安装openssh和net-tools:</p>\n<!--more-->\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install openssh-server</span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install net-tools</span>\n</span></code></pre>\n<p>安装成功后,在终端里使用ifconfig -a查看路由器分发的ip地址,在主机上使用ssh连接就可以搭建环境了.</p>\n<p><img src=\"/img/JupyterHub/1.png\" alt=\"\"></p>\n<h2 id=\"2-安装Anaconda3\"><a href=\"#2-安装Anaconda3\" class=\"headerlink\" title=\"2. 安装Anaconda3\"></a>2. 安装Anaconda3</h2>\n<p>去清华的镜像站(TUNA)上找到了Anaconda最新的包的地址:<a href=\"https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh\">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh</a>, 使用wget下载到虚拟机中,然后执行安装脚本,按照他的指示来就行了.</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">wget</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh</span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sh</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> ./Anaconda3-2020.02-Linux-x86_64.sh</span>\n</span></code></pre>\n<p>默认是安装到~/anaconda3中.</p>\n<p>顺便,这里我选择的是yes,我也不知道是干啥的.</p>\n<p><img src=\"/img/JupyterHub/2.png\" alt=\"\"></p>\n<p>执行</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-storage hl-modifier hl-shell\">export</span> <span class=\"hl-variable hl-other hl-readwrite hl-assignment hl-shell\">PATH</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-meta hl-group hl-expansion hl-tilde\"><span class=\"hl-variable hl-language hl-tilde hl-shell\">~</span></span>/anaconda3/bin:<span class=\"hl-meta hl-group hl-expansion hl-parameter hl-shell\"><span class=\"hl-punctuation hl-definition hl-variable hl-shell\">$</span><span class=\"hl-variable hl-other hl-readwrite hl-shell\">PATH</span></span></span></span>\n</span></code></pre>\n<p>将anaconda添加到PATH中.</p>\n<p>输入conda,如果显示conda的提示,说明安装成功.</p>\n<h2 id=\"3-安装JupyterHub\"><a href=\"#3-安装JupyterHub\" class=\"headerlink\" title=\"3.安装JupyterHub\"></a>3.安装JupyterHub</h2>\n<p>JupyterHub的官方文档(<a href=\"https://jupyterhub.readthedocs.io/en/stable/\">https://jupyterhub.readthedocs.io/en/stable/</a> )提供了两种安装方法:</p>\n<p><img src=\"/img/JupyterHub/3.png\" alt=\"\"></p>\n<p>这里选择第二种安装.注意如果使用第一种安装的话还需要先额外安装nodejs环境,官方给的命令是:</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt-get install npm nodejs-legacy</span>\n</span></code></pre>\n<p>我使用</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> apt install npm</span>\n</span></code></pre>\n<p>也可以完成最终的安装.</p>\n<p>还有一点就是conda的默认源在国外,如果没有特殊工具的话需要换源.</p>\n<p>一般在网络终端上的工具都是不能实现完美的全局代理的,特别对于在虚拟机上的流量,即使使用Proxifier这样的东西也不能达到很好的效果.我是在路由器上直接使用了工具,所以没有考虑这一点.(不能再说了这网站备案了).</p>\n<p>判断是否安装成功:</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>h</span></span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">configurable-http-proxy</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>h</span></span>\n</span></code></pre>\n<p>运行jupyterhub:</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span>\n</span></code></pre>\n<p>出现此界面,安装成功.</p>\n<p><img src=\"/img/JupyterHub/4.png\" alt=\"\"></p>\n<p>下面进行用户的配置.</p>\n<h2 id=\"4-用户配置\"><a href=\"#4-用户配置\" class=\"headerlink\" title=\"4.用户配置\"></a>4.用户配置</h2>\n<p>使用</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">jupyterhub</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"><span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> --</span>generate-config</span></span>\n</span></code></pre>\n<p>生成默认的jupyterhub配置文件.</p>\n<p>官方文档建议将此文件放在/etc/jupyterhub目录下.可以自行创建此文件夹后在该文件夹下执行命令.</p>\n<p><img src=\"/img/JupyterHub/5.png\" alt=\"\"></p>\n<p>此时出现了一个棘手的问题:</p>\n<p><img src=\"/img/JupyterHub/6.png\" alt=\"\"></p>\n<p>我们没有权限在这个文件夹下进行写文件的操作.</p>\n<p>一般遇到这样的情况都是直接sudo,但是当我执行</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> jupyterhub<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> --</span>generate-config</span></span>\n</span></code></pre>\n<p><img src=\"/img/JupyterHub/7.png\" alt=\"\"></p>\n<p>他提示没有找到jupyterhub这个命令.</p>\n<p>去网上搜索,找到了解决方法:</p>\n<p>切换到root用户,编辑/etc/sudoers文件.</p>\n<p>将其中<code>Defaults env_reset</code>这一行改成<code>Defaults !env_reset</code></p>\n<p>如果你没有为root用户设置过密码,应该先使用<code>sudo passwd root</code>来给root设置密码,然后使用<code>su</code>来切换到root账户.</p>\n<p><img src=\"/img/JupyterHub/8.png\" alt=\"\"></p>\n<p>如果没有安装vim,使用apt安装即可.</p>\n<p>编辑好后,切换回刚刚的用户.</p>\n<p>编辑/etc/bash.bashrc文件,向最后添加</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-support hl-function hl-alias hl-shell\">alias</span> <span class=\"hl-entity hl-name hl-function hl-alias hl-shell\">sudo</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-string hl-quoted hl-single hl-shell\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-shell\">&#39;</span>sudo env PATH=$PATH<span class=\"hl-punctuation hl-definition hl-string hl-end hl-shell\">&#39;</span></span></span></span>\n<span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-storage hl-modifier hl-shell\">export</span> <span class=\"hl-variable hl-other hl-readwrite hl-assignment hl-shell\">PATH</span><span class=\"hl-keyword hl-operator hl-assignment hl-shell\">=</span><span class=\"hl-string hl-unquoted hl-shell\"><span class=\"hl-meta hl-group hl-expansion hl-tilde\"><span class=\"hl-variable hl-language hl-tilde hl-shell\">~</span></span>/anaconda3/bin:<span class=\"hl-meta hl-group hl-expansion hl-parameter hl-shell\"><span class=\"hl-punctuation hl-definition hl-variable hl-shell\">$</span><span class=\"hl-variable hl-other hl-readwrite hl-shell\">PATH</span></span></span></span>\n</span></code></pre>\n<p>如果出现文件无法保存,使用<code>:wq!</code>试试,还是不行直接<code>sudo vim</code>.</p>\n<p>让修改的配置生效:</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-support hl-function hl-source hl-shell\">source</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> /etc/bash.bashrc</span>\n</span></code></pre>\n<p>这时就可以在/etc/jupyterhub下执行</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> jupyterhub<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> --</span>generate-config</span></span>\n</span></code></pre>\n<p>还有一种方法,可以解决无法在此文件夹读写的问题,即使用</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> chmod 777 /etc/jupyterhub</span>\n</span></code></pre>\n<p>修改这个文件夹的权限,生成这个配置文件.但是到后期还是需要在sudo下运行jupyterhub,所以在现在直接解决这个问题就好了.</p>\n<p>通过查阅官方文档,我们可以找到配置文件的基本配置.</p>\n<p><img src=\"/img/JupyterHub/9.png\" alt=\"\"></p>\n<p>按照官方文档的说法,默认的用户认证管理器是PAM,ubuntu系统上的用户都被允许登录.</p>\n<p>所以我们可以先切换到root用户,在系统里添加一个用户:</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">adduser</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> kasumi</span>\n</span></code></pre>\n<p>设置好密码后,返回原来的用户.</p>\n<p>修改配置文件,将一个用户添加到管理员列表中(这里是honokasumi),另一个普通用户(这里是kasumi)添加到白名单中.(按照官方文档的说法,在管理员列表中的非白名单中的用户会被自动添加到白名单中):</p>\n<p><img src=\"/img/JupyterHub/10.png\" alt=\"\"></p>\n<p>指定配置文件,启动jupyter</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">sudo</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> jupyterhub<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>f</span> /etc/jupyterhub/jupyterhub_config.py</span>\n</span></code></pre>\n<p>访问http://ip:8000 ,输入账号密码,登录成功.</p>\n<p><img src=\"/img/JupyterHub/11.png\" alt=\"\"></p>\n<h2 id=\"5-安装其他语言的内核\"><a href=\"#5-安装其他语言的内核\" class=\"headerlink\" title=\"5.安装其他语言的内核\"></a>5.安装其他语言的内核</h2>\n<p><img src=\"/img/JupyterHub/12.png\" alt=\"\"></p>\n<p>默认已经安装了Python3的内核,要想支持其他语言,需要安装其他语言的内核.</p>\n<p>这里以安装C++系列内核为例.</p>\n<p>使用</p>\n<pre><code><span class=\"hl-source hl-shell hl-bash\"><span class=\"hl-meta hl-function-call hl-shell\"><span class=\"hl-variable hl-function hl-shell\">conda</span></span><span class=\"hl-meta hl-function-call hl-arguments hl-shell\"> install xeus-cling<span class=\"hl-variable hl-parameter hl-option hl-shell\"><span class=\"hl-punctuation hl-definition hl-parameter hl-shell\"> -</span>c</span> conda-forge</span>\n</span></code></pre>\n<p>安装xeus-cling,一个在jupyter上支持c++系列的内核.</p>\n<p>安装成功后,可以在这里切换使用内核:</p>\n<p><img src=\"/img/JupyterHub/13.png\" alt=\"\"></p>\n<p><img src=\"/img/JupyterHub/14.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/jupyter/jupyter/wiki/Jupyter-kernels\">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a> 这里列出了jupyter上其他语言的内核,可以自己寻找并安装.</p>\n","6df3ba587bd95f3052e4ed348c200fcfd9807792":"<p>LSTM</p>\n<!--more-->\n<pre><code><span class=\"hl-text hl-plain\">\nimport numpy\nimport matplotlib.pyplot as plt\nfrom pandas import read_csv\nimport math\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom keras import backend as K\nimport os\n# load the dataset\nos.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;0&quot;\ndataframe = read_csv(&#39;xian_tianqi.csv&#39;, usecols=[1], engine=&#39;python&#39;)\n\nimport tensorflow as tf\nfrom keras.backend.tensorflow_backend import set_session\n\nconfig = tf.ConfigProto()\nconfig.gpu_options.allocator_type = &#39;BFC&#39; #A &quot;Best-fit with coalescing&quot; algorithm, simplified from a version of dlmalloc.\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.8\nconfig.gpu_options.allow_growth = True\nset_session(tf.Session(config=config))\n\ndataset = dataframe.values\n\n# 将整型变为float\ndataset = dataset.astype(&#39;float32&#39;)\n\nlook_back = 1000\nprint(dataset[len(dataset)-look_back:(len(dataset)), 0])\n# X is the number of passengers at a given time (t) and Y is the number of passengers at the next time (t + 1).\n\n# convert an array of values into a dataset matrix\ndef create_dataset(dataset, look_back=1):\n    dataX, dataY = [], []\n    for i in range(len(dataset)-look_back-1):\n        a = dataset[i:(i+look_back), 0]\n        dataX.append(a)\n        dataY.append(dataset[i + look_back, 0])\n\n    return numpy.array(dataX), numpy.array(dataY)\n\n# fix random seed for reproducibility\nnumpy.random.seed(7)\n# normalize the dataset\n\nscaler = MinMaxScaler(feature_range=(0, 1))\ndataset = scaler.fit_transform(dataset)\n\n\n# split into train and test sets\ntrain_size = int(len(dataset))\ntrain = dataset[0:train_size,:]\n# use this function to prepare the train and test datasets for modeling\ntrainX , trainY= create_dataset(train, look_back)\n\n\ndef XL():\n    # create and fit the LSTM network\n    model = Sequential()\n    model.add(LSTM(128, input_shape=(look_back,1)))\n    model.add(Dense(1))\n    model.compile(loss=&#39;mae&#39;, optimizer=&#39;adam&#39;)\n    model.fit(trainX, trainY, epochs=40, batch_size=256, verbose=2)\n    return model\nttr = trainX[trainX.shape[0]-1]\ntty = []\nfutu = 100\nwith open(&quot;tqyb.honoka&quot;,&quot;w&quot;) as f:\n    f.write(&quot;2019/10/18\\r\\n&quot;)\n    for i in range(futu):\n        trainX = numpy.reshape(trainX, (trainX.shape[0], look_back,1))\n        if(i % look_back == 0):\n            model = XL()\n        ttr = numpy.reshape(ttr,(1,look_back,1))\n        tty = model.predict(ttr)\n\n        #print(trainX.shape[0],trainX.shape[1])\n        ttr = ttr[0][1:look_back].reshape(look_back-1).tolist() + tty[0].tolist()\n\n        trainX = numpy.reshape(trainX, (trainX.shape[0], look_back))\n        trainX = numpy.vstack((trainX,ttr))\n        #print(tty,trainY)\n        trainY = numpy.reshape(trainY, (trainY.shape[0], 1))\n        trainY = numpy.vstack((trainY,tty))\n\n        print(scaler.inverse_transform(tty))\n        f.write(&quot;i=&quot;+str(i) + &quot;   &quot; + str(scaler.inverse_transform(tty)[0][0]) + &#39;\\r\\n&#39;)\n\n#max(trainY.shape[0]-3*futu,0)\nplt.plot(scaler.inverse_transform(trainY[0:trainY.shape[0]]),color=&quot;#FDA423&quot;)\nplt.plot(scaler.inverse_transform(trainY[0:trainY.shape[0]-futu]),color=&quot;#808080&quot;,linestyle=&quot;--&quot;)\nplt.savefig(&quot;op.png&quot;)\nplt.show()\n\n</span></code></pre>\n","1f9ca46f99968ce64157c9919b8b1278194e0ccb":"<h1 id=\"Win10-CMake-MinGW-CLion环境配置\"><a href=\"#Win10-CMake-MinGW-CLion环境配置\" class=\"headerlink\" title=\"Win10+CMake+MinGW+CLion环境配置\"></a>Win10+CMake+MinGW+CLion环境配置</h1>\n<p>在知乎上看到一篇简单介绍make,makefile,cmake的文章,原文链接https://zhuanlan.zhihu.com/p/111110992.</p>\n<p>了解了这些东西之后,可以开始配置Windows上的C++环境了,这里使用CLion+MingW的配置.</p>\n<p>首先在MinGW上下载mingw-get.exe.</p>\n<p><a href=\"http://www.mingw.org/\">http://www.mingw.org/</a></p>\n<p>在mingw-get.exe所在目录下执行命令:</p>\n<pre><code><span class=\"hl-text hl-plain\">.\\mingw-get.exe install gcc g++ gdb mingw32-make\n</span></code></pre>\n<p>安装gcc,g++,gdb以及mingw32-make,并将bin文件夹添加到PATH环境变量中.</p>\n<p>安装CMake,在安装时可以勾选添加到PATH.</p>\n<!-- more --> \n<p>为了进一步了解CMake,可以利用CMake在windows下的gui试验一下编译.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1.png\" alt=\"1\"></p>\n<p>编写a.cpp和CMakeLists.txt文件,其中CMakeLists.txt文件内容为</p>\n<pre><code><span class=\"hl-text hl-plain\">#需要的最低cmake版本\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6)\n#项目名称\nPROJECT(GGZKA)\n#把当前目录(.)下所有源代码文件和头文件加入变量SRC_LIST\nAUX_SOURCE_DIRECTORY(. SRC_LIST)\n#生成应用程序 hello (在windows下会自动生成hello.exe)\nADD_EXECUTABLE(ggzka ${SRC_LIST})\n</span></code></pre>\n<p>这就是一个最简单的CMakeLists.txt文件,足以将a.cpp编译成hello.exe.</p>\n<p>打开CMake-gui,选择源码文件夹和二进制文件输出文件夹.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2.png\" alt=\"2\"></p>\n<p>点Generate.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/3.png\" alt=\"3\"></p>\n<p>因为使用的是MinGW,所以选择MinGW Makefiles,也就是mingw32-make可以处理的makefiles文件.</p>\n<p>要使用之前自己安装的MinGW,所以选择第二项,之后自己选择编译器.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/4.png\" alt=\"4\"></p>\n<p>选择好编译器后,正常的话已经可以在bin文件夹下生成Makefiles文件了,然后在bin文件夹下执行</p>\n<pre><code><span class=\"hl-text hl-plain\">mingw32-make\n</span></code></pre>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/5.png\" alt=\"5\"></p>\n<p>就可以看到bin文件夹下已经编译出hello.exe文件了.</p>\n<p>懂得了基本概念之后,配置CLion也就很简单了.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/6.png\" alt=\"6\"></p>\n<p>Environment选择MinGW所在的文件夹.Make选择mingw32-make,C编译器选择gcc,c++编译器g++即可.</p>\n","b1c089a1cb5bf5d3ea798dc8193d9ca625604311":"<p><a href=\"https://codeforces.com/contest/1623/problem/D\">https://codeforces.com/contest/1623/problem/D</a></p>\n<p>最近在跟队友复健cf, 三个人开黑vp, 感觉状态还是不太行.</p>\n<p>这题感觉还挺有意思, 还没过的时候就想如果真的是这样做的一定要写篇文章记录一下, 然而这题是元旦过的, 我现在才开始写, 拖延症晚期了属于是.</p>\n<!--more-->\n<p>前几天刚把自己的win11重装了一遍, 因为感觉莫名其妙的小问题太多了, 也不知道是软件的问题还是系统的问题, tim和qq在打开打开文件的对话框的时候一定闪退. 还有其他小问题我也记不清了, 反正这些问题我都单方面归咎于傻逼win11了. 而对于一个恶人我只需要记住他最恶的一件事就行了, 就是tim和qq在打开打开文件的对话框的时候一定闪退.</p>\n<p>重装了系统之后果然tim打开打开文件对话框的时候不闪退了, 我刚为这件事弹冠相庆没多长时间, 他又闪退了. \"历史的车轮总是能接受倒退的\", 但是当时在写各种大作业, 就没着急换回win10. 但是当我把我计算机图形学作业发给老师之后, 我又发现他又不闪退了, 他的心好难捉摸.</p>\n<p>总之我现在就安分地用着这个win11, 去typora官网上下个历史版本, 趁着nodejs还在安装的时候先写个题解.</p>\n<p>题目原文:<img src=\"/img/cf763d2D.assets/t.png\" alt=\"img\"></p>\n<p>tmd, 我刚想把这张图发到qq上在保存下来压缩图片, 他又崩了, 麻了.</p>\n<p><img src=\"/img/cf763d2D.assets/2022-01-06_2.png\" alt=\"2022-01-06\"></p>\n<p><img src=\"/img/cf763d2D.assets/2022-01-06.png\" alt=\"\"></p>\n<p>大概题意就是, 有一个扫地机器人在一个网格, 他有一个初始位置, 然后他每秒可以移动(+1, +1), 但是如果有一个坐标方向上他在墙旁边了, 他的下一步对应坐标的增量就是-1. 这样循环的移动. 有一个垃圾, 他在另一个位置上, 扫地机器人每次移动之前, 都有<svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.395ex\" height=\"2.602ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -789.7 1500.7 1150.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(572.5,477.2) scale(0.707)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-1-TEX-I-1D45D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(1000,0)\"></use></g><rect width=\"1260.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>的概率扫掉对应一行和一列的垃圾. 问期望多长时间他能扫掉这个垃圾.</p>\n<p>因为这场比赛第一题是个不带概率的, 每次一定会扫掉垃圾, 就直接把x和y坐标分开看, 看哪个坐标最先到对应的行和列就行. 所以这题我也直接考虑把两个坐标分开看, 确实推出来了一些东西, 我可以得到这个问题在一维上的公式, 但是这样两个一维的问题还是合并不到一个二维问题上, 所以根据经验这时候就需要直接考虑二维问题.</p>\n<p>这样的递归求期望题很多都用了一个期望的技巧, 就是一个问题的期望是固定的, 而且这个问题可以化成很多相同的子问题, 并且这些子问题能够回到原问题的期望上, 这样就可以找到一个关于这个期望的方程, 直接解了就行了.</p>\n<p>这个问题感觉也可以这样做, 因为这个机器人的状态一定最多只有 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.518ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2439 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-2-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-2-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"34\" xlink:href=\"#MJX-2-TEX-N-34\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-2-TEX-I-1D441\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1388,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-2-TEX-I-1D440\"></use></g></g></g></svg> 种, 即每个位置和每个位置上的四个方向, 并且当前的状态仅于上一个状态有关, 所以只要两个状态相同, 他们之后的所有运动轨迹一定也相同. 这样的话根据抽屉原理, 这个机器人的运动状态的循环节长度一定小于 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.518ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2439 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-3-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-3-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"34\" xlink:href=\"#MJX-3-TEX-N-34\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-3-TEX-I-1D441\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1388,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-3-TEX-I-1D440\"></use></g></g></g></svg> . 我们令初始状态的答案为<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.147ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5811.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-4-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-4-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-4-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-4-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-4-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1153,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-4-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2161.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2606.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-4-TEX-I-1D466\"></use></g><g data-mml-node=\"mn\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3532.8,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3977.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4477.4,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4922.1,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5422.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g></g></g></svg> , 即起点在 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.144ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3157.8 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-5-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-5-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-5-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-5-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-5-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-5-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-5-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1397.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-5-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1842.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-5-TEX-I-1D466\"></use></g><g data-mml-node=\"mn\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-5-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2768.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-5-TEX-N-29\"></use></g></g></g></svg>, 两个坐标轴的增量(即方向为) <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.549ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3778.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-6-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-6-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-6-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-6-TEX-N-28\"></use></g><g data-mml-node=\"mo\" transform=\"translate(389,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-6-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1167,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1667,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-6-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2111.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-6-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2889.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3389.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-6-TEX-N-29\"></use></g></g></g></svg>. 只要我们找到状态于状态之间的转移, 就可以列出一个从起点状态回到起点状态的方程, 解出这个方程就行了.</p>\n<p>那么我们模拟这个机器人的运动轨迹, 然后考虑转移, 用 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-7-TEX-I-1D446\"></use></g></g></g></svg> 表示当前状态, 用 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.204ex\" height=\"1.767ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 974.1 781\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-8-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-8-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,363) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-8-TEX-V-2032\"></use></g></g></g></g></svg> 表示下一步的状态. 如果 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-9-TEX-I-1D446\"></use></g></g></g></svg> 这个状态扫不到垃圾, 那么一定有:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"17.554ex\" height=\"2.396ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -809 7759.1 1059\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-10-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-10-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1153,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-10-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1798,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2464.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3520.6,0)\"><use data-c=\"1D438\" xlink:href=\"#MJX-10-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4284.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4673.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-10-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,413) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-10-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5647.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6258.8,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-10-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7259.1,0)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></svg></span></p>\n<p>, 如果 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-11-TEX-I-1D446\"></use></g></g></g></svg> 状态可以扫掉垃圾, 那么有 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-12-TEX-I-1D45D\"></use></g></g></g></svg> 的概率, 直接结束, 这个结果对期望时间的贡献为 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.183ex\" height=\"1.946ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 4059 860\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-13-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-13-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-13-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-13-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(725.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-13-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1725.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-13-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2503.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-13-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3559,0)\"><use data-c=\"30\" xlink:href=\"#MJX-13-TEX-N-30\"></use></g></g></g></svg>.</p>\n<p>剩下 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.035ex\" height=\"1.946ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2225.4 860\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-14-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-14-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1722.4,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-14-TEX-I-1D45D\"></use></g></g></g></svg> 的概率, 他扫不到垃圾, 需要转移到下一个状态的期望, 即:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.218ex\" height=\"2.396ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -809 10262.5 1059\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-15-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-15-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-15-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-15-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-15-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-15-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-15-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-15-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1153,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-15-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1798,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2464.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-15-TEX-N-3D\"></use></g><g data-mml-node=\"mover\" transform=\"translate(3520.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-15-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-15-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4245.8,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-15-TEX-N-D7\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5246,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5635,0)\"><use data-c=\"1D438\" xlink:href=\"#MJX-15-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6399,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"msup\" transform=\"translate(6788,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-15-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,413) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-15-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(7762.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8373.3,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-15-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(9373.5,0)\"><use data-c=\"31\" xlink:href=\"#MJX-15-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9873.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>这样一直走下去, 等到 <svg style=\"vertical-align: -0.375ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.595ex\" height=\"2.092ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3357.2 924.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-16-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-16-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-16-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-16-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,363) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-16-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1251.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-16-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2307.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-16-TEX-I-1D446\"></use></g><g data-mml-node=\"mn\" transform=\"translate(646,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-16-TEX-N-30\"></use></g></g></g></g></svg>, 就可以列到一个方程.</p>\n<p><img src=\"/img/cf763d2D.assets/1.png\" alt=\"1\"></p>\n<p>比如这样一个状态转移, 打√的代表可以扫到垃圾.</p>\n<p>那么我们可以列出一个这样的方程:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.093ex\" height=\"2.283ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 10206.9 1009\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-17-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-17-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mover\" transform=\"translate(1722.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-17-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-17-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2225.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2614.4,0)\"><use data-c=\"34\" xlink:href=\"#MJX-17-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3336.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mover\" transform=\"translate(4336.9,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-17-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-17-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4839.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5228.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5951.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6951.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7523.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7912.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8579.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9634.9,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>对于初始位置在<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.029ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2222.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-18-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-18-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-18-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-18-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-18-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-18-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1333.7,0)\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1833.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g></g></g></svg>, <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.302ex\" height=\"2.136ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3669.6 944\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-19-TEX-N-35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path><path id=\"MJX-19-TEX-N-25\" d=\"M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-19-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(780.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1836.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-19-TEX-N-32\"></use><use data-c=\"35\" xlink:href=\"#MJX-19-TEX-N-35\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2836.6,0)\"><use data-c=\"25\" xlink:href=\"#MJX-19-TEX-N-25\"></use></g></g></g></svg> 上的这样一个例子, 可以列出方程:</p>\n<p><img src=\"/img/cf763d2D.assets/f3ef67cfa056fd84d5c6d8ef3cc518acadf36ea7.png\" alt=\"img\"></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.552ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.741ex\" height=\"4.586ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1341 16239.3 2027\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-20-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-20-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-20-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-20-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-20-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-20-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-20-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(940,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1329,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2051.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3051.4,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3991.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4380.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5102.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(6102.9,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7042.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7431.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8154.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(9154.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10094.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(10483.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11205.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12205.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12777.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13166.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13555.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13944.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(14611.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-20-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15667.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>可以看出, 方程全部都是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.873ex\" height=\"2.283ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3922 1009\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-21-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-21-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-21-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-21-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-21-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-21-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-21-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-21-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><use data-c=\"28\" xlink:href=\"#MJX-21-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-21-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-21-TEX-N-2B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2199,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2643.7,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3088.3,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3533,0)\"><use data-c=\"29\" xlink:href=\"#MJX-21-TEX-N-29\"></use></g></g></g></svg> 这样的递归形式, 对于每一个扫到垃圾的状态, 方程会增加一层, 对于扫不到垃圾的状态, 只会让当前层的常数项<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.891ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1278 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-22-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2B\" xlink:href=\"#MJX-22-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><use data-c=\"31\" xlink:href=\"#MJX-22-TEX-N-31\"></use></g></g></g></svg>.</p>\n<p>实际上, 对于连续的一堆扫不到垃圾的状态, 他对方程的贡献都是连续的<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.891ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1278 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-23-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-23-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2B\" xlink:href=\"#MJX-23-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><use data-c=\"31\" xlink:href=\"#MJX-23-TEX-N-31\"></use></g></g></g></svg>, 变成了一个常数项, 所以可以直接在可以扫到垃圾的时候看一下距离上一次扫到垃圾的时候经过了多少扫不到垃圾的状态, 然后直接把常数项加到方程里.</p>\n<p>最后的问题就是如何解这个方程, 这个方程其实直接一层一层解开就行了. 但是可以观察到这个和什么秦九昭算法比较像, 其实就是可以把这个方程展开, 展开成一个多项式的形式, 例如对于倒数第二个样例, 列出的方程为:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.148ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 15535.3 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-24-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-24-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-24-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-24-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-24-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-24-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-24-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-24-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-24-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-24-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-24-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-24-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1722.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3000.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3389.4,0)\"><use data-c=\"34\" xlink:href=\"#MJX-24-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4111.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5111.9,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6389.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(6778.9,0)\"><use data-c=\"32\" xlink:href=\"#MJX-24-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7501.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(8501.3,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9779.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(10168.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-24-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10890.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11890.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-24-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12462.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12851.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13240.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13907.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-24-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14963.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-24-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>左边全部展开, 整理得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"52.261ex\" height=\"2.565ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -883.9 23099.3 1133.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-25-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-25-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-25-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-25-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-25-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-25-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-25-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-25-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-25-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-25-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-25-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-25-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-25-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-25-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1936.8,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2937,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3659.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4659.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6159.7,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7159.9,0)\"><use data-c=\"34\" xlink:href=\"#MJX-25-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7882.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"msup\" transform=\"translate(8882.3,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-25-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10819.1,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(11819.3,0)\"><use data-c=\"32\" xlink:href=\"#MJX-25-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12541.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"msup\" transform=\"translate(13541.8,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"33\" xlink:href=\"#MJX-25-TEX-N-33\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(15478.5,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(16478.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(17256.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-25-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18312.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-25-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(18701.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(19423.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-25-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(20423.8,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"33\" xlink:href=\"#MJX-25-TEX-N-33\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(22138.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-25-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(22527.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-25-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>解得 <svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.506ex\" height=\"2.79ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -872.7 3759.8 1233.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-26-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-26-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-26-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-26-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-26-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-26-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-26-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-26-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-26-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-26-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(1905.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"36\" xlink:href=\"#MJX-26-TEX-N-36\"></use><use data-c=\"39\" xlink:href=\"#MJX-26-TEX-N-39\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-26-TEX-N-34\" transform=\"translate(1000,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-26-TEX-N-39\" transform=\"translate(1500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(396.8,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-26-TEX-N-32\"></use><use data-c=\"37\" xlink:href=\"#MJX-26-TEX-N-37\" transform=\"translate(500,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\" transform=\"translate(1000,0)\"></use></g><rect width=\"1614.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>, <svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.59ex\" height=\"2.79ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -872.7 13520.8 1233.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-27-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-27-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-27-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-27-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-27-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-27-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-27-TEX-N-25\" d=\"M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z\"></path><path id=\"MJX-27-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-27-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-27-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"36\" xlink:href=\"#MJX-27-TEX-N-36\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-27-TEX-N-34\" transform=\"translate(1000,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(1500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(396.8,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-27-TEX-N-32\"></use><use data-c=\"37\" xlink:href=\"#MJX-27-TEX-N-37\" transform=\"translate(500,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\" transform=\"translate(1000,0)\"></use></g><rect width=\"1614.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mi\" transform=\"translate(1854.2,0)\"><use data-c=\"25\" xlink:href=\"#MJX-27-TEX-N-25\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2687.2,0)\"><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(3000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(3500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(4000,0)\"></use><use data-c=\"37\" xlink:href=\"#MJX-27-TEX-N-37\" transform=\"translate(4500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7965,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-27-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(9020.8,0)\"><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(500,0)\"></use><use data-c=\"32\" xlink:href=\"#MJX-27-TEX-N-32\" transform=\"translate(1000,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2000,0)\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(2500,0)\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(3000,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-27-TEX-N-34\" transform=\"translate(3500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(4000,0)\"></use></g></g></g></svg>.</p>\n<p>代码:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>\n</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Created by Orange_Cheers on 2022/1/1.\n</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>\n</span>\n<span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">mul</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">add</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> lovelive <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">const</span> lovelive mod <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1e9</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">7</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span> M<span class=\"hl-punctuation hl-separator hl-c++\">,</span> stx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> sty<span class=\"hl-punctuation hl-separator hl-c++\">,</span> edx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> edy<span class=\"hl-punctuation hl-separator hl-c++\">,</span> P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nlovelive <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">ksm</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\">lovelive <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> lovelive <span class=\"hl-variable hl-parameter hl-c++\">k</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    lovelive ha <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span> k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span><span class=\"hl-constant hl-numeric hl-c++\">2</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span> a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ha<span class=\"hl-punctuation hl-separator hl-c++\">,</span> ha</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-modifier hl-c++\">const</span> lovelive inv100 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">100</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> mod<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    cin<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">tie</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-language hl-c++\">nullptr</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ios<span class=\"hl-punctuation hl-accessor hl-c++\">::</span></span><span class=\"hl-variable hl-function hl-c++\">sync_with_stdio</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-language hl-c\">false</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>T<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> stx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> sty <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> edx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> edy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span> y<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        x <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> stx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> y <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> sty<span class=\"hl-punctuation hl-separator hl-c++\">,</span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> sdx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dx<span class=\"hl-punctuation hl-separator hl-c++\">,</span> sdy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-modifier hl-c++\">static</span> vector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span>lovelive<span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> edx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> edy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cnt</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span> cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            x <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> dx<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            y <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> dy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> x<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dx <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> dy <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            cnt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> stx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sty <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> dx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sdx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> dy <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> sdy<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cnt</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        lovelive np <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">add</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">v<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>np</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> v<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">ksm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> np<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod<span class=\"hl-punctuation hl-separator hl-c++\">,</span> mod<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">2</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            np <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">np<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mul</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">P<span class=\"hl-punctuation hl-separator hl-c++\">,</span> inv100</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>mod <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> mod<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span> mod</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n","860adc02df80f123ec75706c2e78f47e5023a52b":"<h1 id=\"梯度下降实现线性拟合矩阵推导及实现\"><a href=\"#梯度下降实现线性拟合矩阵推导及实现\" class=\"headerlink\" title=\"梯度下降实现线性拟合矩阵推导及实现\"></a>梯度下降实现线性拟合矩阵推导及实现</h1>\n<p>acm退役选手正在尝试新东西, 刚开的机器学习的坑.</p>\n<p>实现线性拟合实际上还是用高中最小二乘的那种东西, 只不过不是通过计算直接求得拟合的参数, 而是用梯度下降的方法计算逼近参数.</p>\n<p>用一个二维的直线拟合做例子. 高中就学过拟合实际上就是要找到一个直线  来尝试代表一组数据, 来达到预测的目的. 为了让预测的结果更加准确, 所以要让这个直线尽可能的逼近仅有的数据. 最小二乘法里衡量这个直线对这些仅有的数据的准确程度是用每个数据的真实值与估计值差的平方和, 也就是 <svg style=\"vertical-align: -0.8ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.628ex\" height=\"2.687ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 6023.5 1187.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-3A3\" d=\"M666 247Q664 244 652 126T638 4V0H351Q131 0 95 0T57 5V6Q54 12 57 17L73 36Q89 54 121 90T182 159L305 299L56 644L55 658Q55 677 60 681Q63 683 351 683H638V679Q640 674 652 564T666 447V443H626V447Q618 505 604 543T559 605Q529 626 478 631T333 637H294H189L293 494Q314 465 345 422Q400 346 400 340Q400 338 399 337L154 57Q407 57 428 58Q476 60 508 68T551 83T575 103Q595 125 608 162T624 225L626 251H666V247Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"3A3\" xlink:href=\"#MJX-1-TEX-N-3A3\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,-295.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1123,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1952.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2341.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-1-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3380.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(4381,0)\"><g data-mml-node=\"mover\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-1-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(408.5,16) translate(-250 0)\"><use data-c=\"5E\" xlink:href=\"#MJX-1-TEX-N-5E\"></use></g></g></g><g data-mml-node=\"msup\" transform=\"translate(5198,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g></g></g></g></svg>, 这个值越小, 就说明这个直线对这些数据越准确.</p>\n<p>在这里给这些东西换个名字, 把 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.532ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6865.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-2-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-2-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-2-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-2-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-2-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-2-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1537,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2203.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3259.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-2-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-2-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4387.3,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-2-TEX-N-2B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(5387.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-2-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(6293.1,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></svg> 叫做估计函数, 把 <svg style=\"vertical-align: -0.8ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"31.39ex\" height=\"2.757ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 13874.3 1218.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-3-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-3-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-3A3\" d=\"M666 247Q664 244 652 126T638 4V0H351Q131 0 95 0T57 5V6Q54 12 57 17L73 36Q89 54 121 90T182 159L305 299L56 644L55 658Q55 677 60 681Q63 683 351 683H638V679Q640 674 652 564T666 447V443H626V447Q618 505 604 543T559 605Q529 626 478 631T333 637H294H189L293 494Q314 465 345 422Q400 346 400 340Q400 338 399 337L154 57Q407 57 428 58Q476 60 508 68T551 83T575 103Q595 125 608 162T624 225L626 251H666V247Z\"></path><path id=\"MJX-3-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-3-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-3-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-3-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1022,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-3-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-3-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1927.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2372.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-3-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3277.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3944.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5000.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(530.4,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-3-TEX-I-1D45A\"></use></g></g><rect width=\"1174.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"msubsup\" transform=\"translate(6414.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"3A3\" xlink:href=\"#MJX-3-TEX-N-3A3\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-3-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,-295.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1123,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8367.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(8756.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-3-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(9795.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10795.8,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-3-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11371.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(11760.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(12659.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"msup\" transform=\"translate(13048.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g></g></g></g></svg> 叫做误差函数, 也就是loss.</p>\n<p>梯度下降算法是很好理解的, 但是因为矩阵的运算我运用不是很灵活, 线代当时也是速成的, 所以刚开始我并没有用矩阵来实现, 后来想了一段时间才写出来了矩阵形式的梯度下降.</p>\n<p>因为我之前没看过别人怎么实现的梯度下降, 所以下面的推导和实现方法的一些细节都是我自己决定的, 很可能与主流写法不一样, 麻烦许多, 这里先记录一下我自己的思考过程, 一会学习了别人的代码之后再来补充.</p>\n<p>因为要用矩阵实现, 所以首先要把这些函数矩阵化. 对于多参数的估计函数, 我们要估计的参数可以写成一个向量 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.925ex\" height=\"2.47ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841.7 6596.8 1091.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-4-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-4-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-4-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-4-TEX-N-2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path><path id=\"MJX-4-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-4-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-4-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(278,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1183.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1628.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2533.8,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2978.4,0)\"><use data-c=\"2026\" xlink:href=\"#MJX-4-TEX-N-2026\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4317.1,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(4761.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(502,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-4-TEX-I-1D45B\"></use></g></g></g><g data-mml-node=\"msup\" transform=\"translate(5738,0)\"><g data-mml-node=\"mo\"><use data-c=\"5D\" xlink:href=\"#MJX-4-TEX-N-5D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(311,363) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-4-TEX-I-1D447\"></use></g></g></g></g></svg>, 先叫他参数向量, 记作 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 778 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-5-TEX-N-398\"></use></g></g></g></svg> . 因为有个常数项, 所以要估计的 <svg style=\"vertical-align: -0.023ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-6-TEX-I-1D703\"></use></g></g></g></svg> 个数要比数据的参数多一个. 同时我们把训练数据写成向量形式, 因为训练数据的第一个要与参数向量的 <svg style=\"vertical-align: -0.375ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.049ex\" height=\"1.97ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 905.6 870.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-7-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-7-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\"></use></g></g></g></g></svg> 相乘, 所以这一位可以用一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></svg> 来补上, 这样这个向量就可以写成 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.159ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5816.5 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-9-TEX-N-2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path><path id=\"MJX-9-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(278,0)\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(778,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1222.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2231.2,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2675.9,0)\"><use data-c=\"2026\" xlink:href=\"#MJX-9-TEX-N-2026\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4014.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(4459.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-9-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5538.5,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg>,  这样估计函数就可以写成:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -7.523ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.136ex\" height=\"16.176ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -3825 11110.3 7150\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-10-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-10-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-10-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-10-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-10-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-10-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-10-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-10-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-10-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-10-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path><path id=\"MJX-10-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-10-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1817,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2483.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3539.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4613.8,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-10-TEX-N-22C5\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(5114,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-10-TEX-S4-23A1\" transform=\"translate(0,2671)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-10-TEX-S4-23A3\" transform=\"translate(0,-2681)\"></use><svg width=\"667\" height=\"3752\" y=\"-1626\" x=\"0\" viewBox=\"0 938 667 3752\"><use data-c=\"23A2\" xlink:href=\"#MJX-10-TEX-S4-23A2\" transform=\"scale(1,9.349)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3075)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-10-TEX-N-30\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1675)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,275)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-10-TEX-N-32\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-1675)\"><g data-mml-node=\"mtd\" transform=\"translate(349.1,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-10-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3075)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1643.3,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-10-TEX-S4-23A4\" transform=\"translate(0,2671)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-10-TEX-S4-23A6\" transform=\"translate(0,-2681)\"></use><svg width=\"667\" height=\"3752\" y=\"-1626\" x=\"0\" viewBox=\"0 938 667 3752\"><use data-c=\"23A5\" xlink:href=\"#MJX-10-TEX-S4-23A5\" transform=\"scale(1,9.349)\"></use></svg></g></g><g data-mml-node=\"mo\" transform=\"translate(7702,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8757.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9832,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-10-TEX-N-22C5\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10332.3,0)\"><use data-c=\"398\" xlink:href=\"#MJX-10-TEX-N-398\"></use></g></g></g></svg></span></p>\n<p>同时我们可以把训练集写成矩阵形式:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -9.392ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"42.921ex\" height=\"19.914ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -4651.1 18971 8802.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-11-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-11-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-11-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-11-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-11-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-11-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-11-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-11-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-11-TEX-N-22EF\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z\"></path><path id=\"MJX-11-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-11-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-11-TEX-N-22F1\" d=\"M133 760Q133 784 150 802T193 820Q217 820 235 804T254 761Q254 736 237 718T194 700T151 717T133 760ZM580 460Q580 484 597 502T640 520Q664 520 682 504T701 461Q701 436 684 418T641 400T598 417T580 460ZM1027 160Q1027 184 1044 202T1087 220Q1111 220 1129 204T1148 161Q1148 136 1131 118T1088 100T1045 117T1027 160Z\"></path><path id=\"MJX-11-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-11-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-11-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-11-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-11-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-11-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2546.6,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-11-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2997.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-11-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3526.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-11-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3871.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4471.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5321.3,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-11-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(6377.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-11-TEX-S4-23A1\" transform=\"translate(0,3497.1)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-11-TEX-S4-23A3\" transform=\"translate(0,-3507.1)\"></use><svg width=\"667\" height=\"5404.2\" y=\"-2452.1\" x=\"0\" viewBox=\"0 1351 667 5404.2\"><use data-c=\"23A2\" xlink:href=\"#MJX-11-TEX-S4-23A2\" transform=\"scale(1,13.466)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3590.4)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1832.3)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,74.3)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-2143)\"><g data-mml-node=\"mtd\" transform=\"translate(111,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(2274,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(5100,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7151.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22F1\" xlink:href=\"#MJX-11-TEX-N-22F1\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(10207.9,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3853.7)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1500,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4326,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9433.9,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(11926.9,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-11-TEX-S4-23A4\" transform=\"translate(0,3497.1)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-11-TEX-S4-23A6\" transform=\"translate(0,-3507.1)\"></use><svg width=\"667\" height=\"5404.2\" y=\"-2452.1\" x=\"0\" viewBox=\"0 1351 667 5404.2\"><use data-c=\"23A5\" xlink:href=\"#MJX-11-TEX-S4-23A5\" transform=\"scale(1,13.466)\"></use></svg></g></g></g></g></svg></span></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -8.171ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.691ex\" height=\"17.474ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -4111.7 9587.5 7723.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-N-A0\" d=\"\"></path><path id=\"MJX-12-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-12-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-12-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-12-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-12-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-12-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-12-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-12-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-12-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-12-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-12-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-12-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-12-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-12-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-12-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mtext\"><use data-c=\"A0\" xlink:href=\"#MJX-12-TEX-N-A0\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(250,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-12-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-12-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1540.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2596.6,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-12-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2957.6,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-12-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3408.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-12-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3937.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-12-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4282.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-12-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4882.6,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5650.3,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(6706.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-12-TEX-S4-23A1\" transform=\"translate(0,2957.7)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-12-TEX-S4-23A3\" transform=\"translate(0,-2967.7)\"></use><svg width=\"667\" height=\"4325.3\" y=\"-1912.7\" x=\"0\" viewBox=\"0 1081.3 667 4325.3\"><use data-c=\"23A2\" xlink:href=\"#MJX-12-TEX-S4-23A2\" transform=\"scale(1,10.777)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3218.3)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1675)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-12-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,131.7)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-12-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-1818.3)\"><g data-mml-node=\"mtd\" transform=\"translate(634.7,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-12-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3361.7)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-12-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(989,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2214.4,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-12-TEX-S4-23A4\" transform=\"translate(0,2957.7)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-12-TEX-S4-23A6\" transform=\"translate(0,-2967.7)\"></use><svg width=\"667\" height=\"4325.3\" y=\"-1912.7\" x=\"0\" viewBox=\"0 1081.3 667 4325.3\"><use data-c=\"23A5\" xlink:href=\"#MJX-12-TEX-S4-23A5\" transform=\"scale(1,10.777)\"></use></svg></g></g></g></g></svg></span></p>\n<p>这样我们计算 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.529ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4212 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-13-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-13-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-13-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-13-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-13-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-13-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-13-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-13-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1326,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-13-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1777,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-13-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2306,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-13-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2651,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-13-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3251,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3823,0)\"><use data-c=\"29\" xlink:href=\"#MJX-13-TEX-N-29\"></use></g></g></g></svg>, 就可以惊奇的发现得到一个估计量组成的矩阵.</p>\n<p>这是loss函数就可以写成</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.069ex\" height=\"4.613ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1342 11080.6 2039\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-14-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-14-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-14-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-14-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-14-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-14-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-14-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-14-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-14-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-14-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-14-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-14-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-14-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-14-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2466.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-14-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3522.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(659,676)\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-14-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-14-TEX-I-1D45A\"></use></g></g><rect width=\"1578\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5340.6,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5618.6,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5896.6,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-14-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6472.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-14-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6861.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-14-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7713.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-14-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8324.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-14-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9325,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-14-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10088,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(10366,0)\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(311,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-14-TEX-N-32\"></use></g></g></g></g></svg></span></p>\n<p>然后我们需要求 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.952ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2189 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-15-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-15-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 778 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-16-TEX-N-398\"></use></g></g></g></svg> 的偏导, 这是一个标量对向量的偏导, 但是这个模长不是很好处理, 所以我们转化成向量对向量的偏导, 即把loss函数写为:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.277ex\" height=\"4.613ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1342 14708.2 2039\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-17-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-17-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-17-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-17-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-17-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-17-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2466.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3522.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(659,676)\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-17-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-17-TEX-I-1D45A\"></use></g></g><rect width=\"1578\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5340.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5729.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-17-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6581.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7581.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-17-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8582,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-17-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(9345,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-17-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10314.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10703.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-17-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11555.8,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12556,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-17-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(13556.2,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-17-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(14319.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>求全微分:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"44.148ex\" height=\"2.583ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -891.7 19513.5 1141.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-18-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-18-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-18-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-18-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-18-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-18-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-18-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-18-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-18-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-18-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-18-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1430.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-18-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3727.6,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4247.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"msup\" transform=\"translate(5025.6,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-18-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5995.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6384.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7236.4,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8236.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-18-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9236.8,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-18-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9999.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10611,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-18-TEX-N-2B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11611.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12000.2,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12852.2,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13852.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-18-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14852.7,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-18-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(15615.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-18-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(16585.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(16974.5,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(17826.5,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(18346.5,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(19124.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>整理得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.875ex\" height=\"2.583ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -891.7 10110.8 1141.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-19-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-19-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-19-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-19-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-19-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-19-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-19-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-19-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-19-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-19-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1430.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2486.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-19-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2986.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3375.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-19-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4227.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-19-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5227.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-19-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6228,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-19-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(6991,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-19-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(7960.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-19-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8812.8,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-19-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9332.8,0)\"><use data-c=\"398\" xlink:href=\"#MJX-19-TEX-N-398\"></use></g></g></g></svg></span></p>\n<p>可得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.602ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.482ex\" height=\"4.749ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1391 9495 2099\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-20-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-20-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-20-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-20-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-20-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-20-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-20-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-20-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-20-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-20-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(292.5,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-20-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-20-TEX-I-1D43D\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-20-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"398\" xlink:href=\"#MJX-20-TEX-N-398\"></use></g></g><rect width=\"1544\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2061.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-20-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3117.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-20-TEX-N-32\"></use></g><g data-mml-node=\"msup\" transform=\"translate(3617.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-20-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(936.2,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-20-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5101.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5490.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-20-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6342.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-20-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7342.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-20-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8343,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-20-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9106,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>每次迭代让当前的 <svg style=\"vertical-align: -0.817ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.526ex\" height=\"2.852ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -899.6 6420.4 1260.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-21-TEX-N-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-21-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-21-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-21-TEX-I-1D6FC\" d=\"M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z\"></path><path id=\"MJX-21-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-21-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1055.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3A\" xlink:href=\"#MJX-21-TEX-N-3A\"></use></g><g data-mml-node=\"text\" transform=\"translate(278,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-21-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(2389.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3389.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-21-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4390,0)\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-21-TEX-I-1D6FC\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5030,0)\"><g data-mml-node=\"mrow\" transform=\"translate(271.3,394) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-21-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-21-TEX-I-1D43D\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-21-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g></g><rect width=\"1150.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 即可, 其中 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.448ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 640 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-I-1D6FC\" d=\"M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-22-TEX-I-1D6FC\"></use></g></g></g></svg> 为学习率.</p>\n<p>这样, 梯度下降的所有过程都有了数学形式, 也就很好实现了.</p>\n<p>第一次写觉得自己不可能写对, 跑一遍果然成了梯度上升算法, 查了半天没查出错, 把学习率调低就行了...我居然一遍写对了.</p>\n<p>矩阵求导还是太难了, 很不熟练, 以后再多研究研究这些数学基础, 好喜欢这种用数学推导出的有用的东西.</p>\n<p>附上代码:</p>\n<pre><code><span class=\"hl-text hl-plain\">import numpy as np\n\n\n\ndatax = [0.50,0.75,1.00,1.25,1.50,1.75,1.75,2.00,2.25,2.50,2.75,3.00,3.25,3.50,4.00,4.25,4.50,4.75,5.00,5.50]\ndatay = [10,  22,  13,  43,  20,  22,  33,  50,  62,  48,  55,  75,  62,  73,  81,  76,  64,  82,  90,  93]\nn = 1\nm = len(datax)\n\n\ntrainx = np.zeros((m,n+1))\ntrainy = np.zeros((m,1))\ndef calch(t):\n\treturn np.dot(trainx,t)\n\ndef calcJ(t):\n\tloss = calch(t) -trainy\n\tloss = np.dot(loss.T,loss)\n\treturn loss/(2*m)\n\ndef calcJd(t):\n\tlossd = 0\n\tlossd = np.dot(trainx.T,np.dot(trainx,t) - trainy)\n\n\treturn lossd/m\n\n\n\ndef init():\n\tglobal trainx\n\tglobal trainy\n\tfor i in range(m):\n\t\ttrainx[i] = [1,datax[i]]\n\t\ttrainy[i] = datay[i]\n\treturn \n\n\nlearning_rate = 0.001\ndef gradient_descent(t):\n\ttt = t - learning_rate * calcJd(t)\n\t#print(t0,t1,calcJ(tt0,tt1))\n\treturn tt\n\nprint(datax)\ninit()\n\nt = np.zeros((2,1))\nfor i in range(1,100000):\n\tt = gradient_descent(t)\n\tprint(t)\n\nprint(t)\n\n\n</span></code></pre>\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6>\n","d04fbc129b9819303623aa21f7c79363b75a2b27":"<h1 id=\"nlogn的最长不上升子序列\"><a href=\"#nlogn的最长不上升子序列\" class=\"headerlink\" title=\"nlogn的最长不上升子序列\"></a>nlogn的最长不上升子序列</h1>\n<p>nlogn的最长不上升子序列虽然不难,也很常用,但是很容易打错,<s>一不注意就把变量名打错了</s>.</p>\n<p>主要思想是用二分优化\"寻找a[j]&gt;=a[i]中f[j]最大的j\"</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>优化这个循环\n</span>    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">maxx<span class=\"hl-punctuation hl-separator hl-c++\">,</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-ternary hl-c\">?</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span>maxx<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>\n<p>既然使用二分,就要寻找一个有单调性的东西.</p>\n<!--more-->\n<p>在原有的基础上新开一个数组temp[],temp[i]表示f[j] = i的最大的a[j],翻译成人话就是f值等于i的最大的数是多少.</p>\n<p>因为是最长不上升子序列,所以在f值相同时,这个数越大越有价值.</p>\n<p>可以发现这个temp是有单调性的,严格证明我不会,可以用反证法瞎搞搞证出来.</p>\n<p>因为要找到一个最大的i,即f值,所以二分是要注意下一个小细节.</p>\n<p>假如按照temp[1]到temp[N]这样从左到右写出来,我们要做的就是找出满足temp[k] &gt;= a[nown]的最右边的值</p>\n<p>所以在二分时,如果当前二分的中点值等于a[nown],应当把左区间端点的值设置为mid,而不是mid+1,防止丢失解.</p>\n<p>如果二分中点小于a[nown],可以大胆的将右端点设为mid-1</p>\n<p>二分部分程序:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>r<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\ntemp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">maxx</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">temp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>\n<p>这样就实现了去掉f并优化时间复杂度到O(nlogn).</p>\n<p>2018.4.5 22:20</p>\n","a8a4d1d2637faafa8c158ac9535dbb3f6b3aa9b0":"<p>好家伙, 我已经三个多月没写东西啦!</p>\n<p>最近两天先写点基础的, 这两天在看jyy的操作系统课和6.S081, 恶补一下操作系统的知识.</p>\n<p>过几天写一下这个学期一直在研究的分布式系统, Raft啥的.</p>\n<!--more-->\n<h2 id=\"互斥\"><a href=\"#互斥\" class=\"headerlink\" title=\"互斥\"></a>互斥</h2>\n<p>互斥就是禁止多个线程同时访问同一个资源, 这个资源叫做临界资源.\n并行编程最大的几个问题之一是多个线程的执行流会被来回切换, 你永远想象不到一个线程会在什么时候被打断.\n还有就是编译器, 现代处理器都会在不同级别上乱序执行, 不过这个也不是今天讨论的重点, 这个主要靠barrier去解决.</p>\n<p>比如这样的:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> UNLOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">critical_section</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\"> </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n<span class=\"hl-entity hl-name hl-label hl-c\">retry</span><span class=\"hl-punctuation hl-separator hl-c\">:</span>\n  <span class=\"hl-keyword hl-control hl-c++\">if</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>locked <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> UNLOCK<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    <span class=\"hl-keyword hl-control hl-c++\">goto</span> retry<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n  locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n  <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> critical section\n</span>\n  locked <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> UNLOCK<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<p>一个失败的锁的尝试, 多个线程可能同时判断到locked为unlock.</p>\n<p>重点在于处理器不保证load+store的原子性</p>\n<h2 id=\"Peterson算法\"><a href=\"#Peterson算法\" class=\"headerlink\" title=\"Peterson算法\"></a>Peterson算法</h2>\n<p>Peterson算法实现了两个线程的互斥, 不需要任何复杂原子操作.</p>\n<p>两个线程争夺临界区: 每个线程自己有个标志, 临界区有个标志turn</p>\n<ol>\n<li>把自己的标志亮起来.</li>\n<li>把临界区的标志turn改为 <strong>对方</strong>.</li>\n<li>如果对方的标志亮起来, 并且turn是对方, 就等待, 否则进入临界区.</li>\n<li>出临界区, 熄灭自己的标志.</li>\n</ol>\n<p>感性理解:</p>\n<ol>\n<li>如果只有一个线程想要进入临界区, 那显然正确.</li>\n<li>两个线程同时想要进入临界区, 两个线程都会把自己的标志亮起来, 并且去修改turn.</li>\n<li>先修改turn的那个线程把turn改为了对方, 但是后面另一个线程会把自己的turn改回自己.</li>\n<li>turn决定了到底谁进入临界区, 手快🈶️, 手慢🈚️.</li>\n</ol>\n<p>感性理解正确性:</p>\n<ol>\n<li>如果两个线程都想访问临界区, 但是一个线程A比较快, 把turn改为了对方:\n<ol>\n<li>如果另一个线程B还没有亮起自己的标志, 那A就直接进了, 一会B亮标志再改turn的时候会因为turn被自己改成了A而阻塞, 直到A退出临界区, 灭掉了A的标志.</li>\n<li>如果另一个线程已经亮起了自己的标志, 那A会阻塞到B把turn改为A之后, A进入临界区, B同样会被阻塞.</li>\n</ol>\n</li>\n<li>也就是说, 因为大家都会把turn改为对方, 所以大家都会阻塞直到所有人都改了turn, 这时候就根据turn是谁决定谁进入临界区.</li>\n</ol>\n<p>一些思考:</p>\n<ol>\n<li>能不能先改turn, 再亮标志?\n<ol>\n<li>肯定不行, 假如A先把turn改成了B, 然后因为这时候A没有亮标志, 所以B可以直接改turn为A+亮标志+进入临界区, 这时候A因为看到turn为自己, 也可以直接进入临界区, 就寄了.</li>\n</ol>\n</li>\n</ol>\n<p>Peterson算法属于比较一般的互斥算法, 只要内存模型是顺序一致的(Sequential Consistent), 就可以实现两个线程的互斥, 不需要任何复杂原子性的操作. 类似的算法还有dekker, 都比较复杂, 现代操作系统一般可以依赖于硬件实现的原子操作来简化互斥.</p>\n<p>为了防止编译器和处理器在不同级别上的乱序优化, 可能需要在某些地方加不同级别的Barrier.</p>\n<h2 id=\"Model-Checking\"><a href=\"#Model-Checking\" class=\"headerlink\" title=\"Model Checking\"></a>Model Checking</h2>\n<p>使用工具来检验模型的正确性!</p>\n<p>其实就遍历多个线程状态机转移的每一种情况, bfs枚举.</p>\n<p>可以使用python来模拟这个操作, 每一行语句后面加一个yield, 每一个线程包装成一个generator, 一次__next__() 就相当于一个线程执行了一步, 每一行都相当于一个原子操作.</p>\n<p>现代软件自动化测试工具会加很多优化, 比如如果两个线程的某几步涉及到的内存完全不相关, 那他们这几步的顺序是无所谓的…诸如此类.</p>\n<p>还可以用来检查filesystem的正确性, 和其他内存模型下的算法正确性…</p>\n<h2 id=\"锁\"><a href=\"#锁\" class=\"headerlink\" title=\"锁\"></a>锁</h2>\n<p>但是Peterson的假设太弱了, 没有任何复杂的原子操作, 只有load和store.</p>\n<p>自旋锁是加了一个原子指令: lock.</p>\n<p>互斥锁是增加了操作系统作为调度者.</p>\n<p>Futex是结合了自旋锁和互斥锁的优点, 目前使用的Mutex很多都是Futex.</p>\n<h3 id=\"自旋锁-Spinning-Lock\"><a href=\"#自旋锁-Spinning-Lock\" class=\"headerlink\" title=\"自旋锁 (Spinning Lock)\"></a>自旋锁 (Spinning Lock)</h3>\n<p>lock xchg %1, %2. 原子性的交换%1和%2.</p>\n<p>实际上这就是一个load+store:</p>\n<ol>\n<li>load了%1到%2.</li>\n<li>Store了%2到%1.</li>\n</ol>\n<p>如果一个有共享内存a, 0代表未上锁, 1代表上锁.</p>\n<p>那么让b为1, xchg a, b, 检查a</p>\n<ol>\n<li>如果b是1, 说明本来a本来就是1, 说明已经有人上过锁了, 返回xchg重试.</li>\n<li>如果b是0, 说明本来a是0, 没有人上锁, 现在我们把a换成了1, 我们可以安心访问临界资源了.</li>\n<li>从临界区退出后, 把a改回0.</li>\n</ol>\n<h4 id=\"自旋锁的缺陷\"><a href=\"#自旋锁的缺陷\" class=\"headerlink\" title=\"自旋锁的缺陷\"></a>自旋锁的缺陷</h4>\n<ol>\n<li>访问共享变量的自旋会出发多处理器之间的同步, 拖累性能.</li>\n<li>一个线程抢占到锁之后, 其他处理器都在空转!</li>\n<li>获得自旋锁的线程可能会被操作系统切换出去! 其他线程啥也别想干.</li>\n</ol>\n<h4 id=\"自旋锁的使用场景\"><a href=\"#自旋锁的使用场景\" class=\"headerlink\" title=\"自旋锁的使用场景\"></a>自旋锁的使用场景</h4>\n<ol>\n<li>临界区几乎不拥堵, 不太会出现多个线程抢占的情况.</li>\n<li>持有自旋锁的时候可以禁止流切换, 但是一般的程序也没这个权利.</li>\n</ol>\n<p>所以基本只有在操作系统内核中才会使用自旋锁:</p>\n<ol>\n<li>操作系统可以关闭中断和抢占, 保证锁的持有者很快就会释放锁</li>\n</ol>\n<p>但是即使这样也很难用好自旋锁.</p>\n<h3 id=\"Lock指令\"><a href=\"#Lock指令\" class=\"headerlink\" title=\"Lock指令\"></a>Lock指令</h3>\n<h4 id=\"x86的lock\"><a href=\"#x86的lock\" class=\"headerlink\" title=\"x86的lock\"></a>x86的lock</h4>\n<p>在三十年前的80486时期就已经支持双路处理器, 支持lock了.</p>\n<p>lock指令会保证, 在lock之前的所有store都已经写入内存.</p>\n<p>在早期缓存是所有处理器共享的时候, 一个处理器执行lock指令时, 会把总线锁上, 这样其他处理就不会干扰他的原子操作.</p>\n<p>但是现代处理器内部就有缓存, x86就要在L1级别的cache上保证一致性. 所有的L1 Cache都是串起来的, 一个处理器执行了原子性更改内存的操作, 需要更改所有出现这个块的缓存.</p>\n<p>这也是x86背负的巨大历史包袱之一.</p>\n<h4 id=\"RISC-V的另一种lock实现\"><a href=\"#RISC-V的另一种lock实现\" class=\"headerlink\" title=\"RISC-V的另一种lock实现\"></a>RISC-V的另一种lock实现</h4>\n<p>常见的原子操作基本都分为三步:</p>\n<ol>\n<li>load.</li>\n<li>exec, 即处理器自己在进行计算.</li>\n<li>store.</li>\n</ol>\n<p>RISC-V认为exec操作可以多次进行, 影响不大, 所以使用了Load-Reserved/Store-Conditional策略:</p>\n<ol>\n<li>在执行原子操作前, 把需要影响到的内存打上Reserved标记.</li>\n<li>如果计算期间有中断, 或者有其他处理器写入, 标记都会清除.</li>\n<li>store时判断是否有标记, 没有标记就重试.</li>\n</ol>\n<h3 id=\"互斥锁-Mutex\"><a href=\"#互斥锁-Mutex\" class=\"headerlink\" title=\"互斥锁 (Mutex)\"></a>互斥锁 (Mutex)</h3>\n<p>互斥锁可以让没抢到锁的线程被操作系统阻塞, 操作系统可以去执行其他线程.</p>\n<p>当然, 一般的用户程序也没这个权利, 所以互斥锁需要通过系统调用进入内核.</p>\n<ol>\n<li><strong>syscall(SYSCALL_lock, &amp;lk);</strong> 尝试获取锁lk, 如果失败, 进入阻塞.</li>\n<li><strong>syscall(SYSCALL_unlock, &amp;lk);</strong> 释放lk, 唤醒其他因为lk而阻塞的线程.</li>\n</ol>\n<p>操作系统的操作:</p>\n<ol>\n<li>先获取锁的线程, 得到锁, 操作系统让lk=1.</li>\n<li>后获取锁的线程, 进入阻塞队列.</li>\n<li>得到锁的线程释放锁后, 唤醒阻塞队列中的一个线程执行.</li>\n<li>如果阻塞队列为空, lk=0;</li>\n</ol>\n<p>操作系统使用自旋锁来保证自己的操作是原子的.</p>\n<h3 id=\"Futex\"><a href=\"#Futex\" class=\"headerlink\" title=\"Futex\"></a>Futex</h3>\n<p>自旋锁的两种情况:</p>\n<ol>\n<li>更快的fast path: xchg成功, 进入临界区, 开销很小.</li>\n<li>更慢的slow path: xchg失败, 浪费资源自旋.</li>\n</ol>\n<p>Mutex的两种情况:</p>\n<ol>\n<li>更快的slow path: 上锁失败, 直接阻塞.</li>\n<li>更慢的fast path: 无论如何都要进入内核.</li>\n</ol>\n<p>Fast Userspace muTexes (Futex) 的折衷:</p>\n<ol>\n<li>Fast path: 一条原子指令, 上锁成功直接返回.</li>\n<li>Slow path: 上锁失败, 阻塞.</li>\n</ol>\n<p>Linux大范围地使用Futex代替Mutex.</p>\n<p>在FreeBSD, Linux中的Golang里的sync.Mutex, 实际上也是Futex.</p>\n","56dd714d97edd6cbdddb706934722355d105b11c":"<p>#P1004 方格取数</p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>设有N*N*的方格图(N&lt;=9)，我们将其中的某些方格中填入正整数，而其他的方格中则放入数字0。如下图所示（见样例）：</p>\n<!--more-->\n<p>A\n0  0  0  0  0  0  0  0</p>\n<p>0  0 13  0  0  6  0  0</p>\n<p>0  0  0  0  7  0  0  0</p>\n<p>0  0  0 14  0  0  0  0</p>\n<p>0 21  0  0  0  4  0  0</p>\n<p>0  0 15  0  0  0  0  0</p>\n<p>0 14  0  0  0  0  0  0</p>\n<p>0  0  0  0  0  0  0  0</p>\n<p>.                       B</p>\n<p>某人从图的左上角的A点出发，可以向下行走，也可以向右走，直到到达右下角的B点。在走过的路上，他可以取走方格中的数（取走后的方格中将变为数字0）。</p>\n<p>此人从A点到B点共走两次，试找出2条这样的路径，使得取得的数之和为最大。</p>\n<p>##输入输出格式</p>\n<p>###输入格式：</p>\n<p>输入的第一行为一个整数N（表示N*N的方格图），接下来的每行有三个整数，前两个表示位置，第三个数为该位置上所放的数。一行单独的0表示输入结束。</p>\n<p>###输出格式：</p>\n<p>只需输出一个整数，表示2条路径上取得的最大的和。</p>\n<p>##输入输出样例</p>\n<p>###输入样例#1：</p>\n<p>8\n2 3 13\n2 6  6\n3 5  7\n4 4 14\n5 2 21\n5 6  4\n6 3 15\n7 2 14\n0 0  0</p>\n<p>###输出样例#1：</p>\n<p>67</p>\n<p>##说明</p>\n<p>NOIP 2000 提高组第四题</p>\n<p>#分析</p>\n<p>根据数据范围，显然不能采用搜索。</p>\n<p>如果直接按照题目编写dp，显然具有后效性。在dp中无法记录走过的路径，更不可能把“走过的路径上的数变为0”，所以对于这样的问题，一般是采用多维dp，同时将路径选出。</p>\n<p>为了方便，可以想象成有两个人，同时从起点出发，走到终点。</p>\n<p>用dp[i][j][k][l]表示两人分别走到了(i,j)和(k,l)这两个点。</p>\n<p>先不考虑走过的数变为0的情况，则dp[i][j][k][l]受到这四个状态的控制：</p>\n<p><code>dp[i-1][j][k-1][l]</code></p>\n<p><code>dp[i-1][j][k][l-1]</code></p>\n<p><code>dp[i][j-1][k-1][l]</code></p>\n<p><code>dp[i][j-1][k][l-1]</code></p>\n<p>因为要取最大的数，可以得到状态转移方程如下</p>\n<p><code>dp[i][j][k][l] = max{dp[i-1][j][k-1][l],dp[i-1][j][k][l-1],dp[i][j-1][k-1][l],dp[i][j-1][k][l-1]} + a[i][j] + a[k][l];</code></p>\n<p>下面可以考虑走过的数变为0这个要求了。</p>\n<p>题目告诉我们，对于每次决策，必须且只有“向下走1格”和“向右走1格”这两种可能。</p>\n<p>所以，无论在什么时候，两个人走到的点距离起点的曼哈顿距离都是一样的，即<code>i+j=k+l</code></p>\n<p>并且，对于一个点(i,j)，从原点出发，无论怎么走，到这个点所经过的距离均为<code>i+j</code></p>\n<p>所以可以得知，当两个人选的路程有公共点时，两个人一定同时到达这个公共点。</p>\n<p>所以只需在进行dp的时候，判断i,j是否等于k,l,如果等于，则在转移的时候只需加一遍这个格上的数即可。</p>\n<p>#####即</p>\n<p><code>dp[i][j][k][l] = max{dp[i-1][j][k-1][l],dp[i-1][j][k][l-1],dp[i][j-1][k-1][l],dp[i][j-1][k][l-1]} + a[i][j];</code></p>\n<p>则程序不难写出</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y<span class=\"hl-punctuation hl-separator hl-c++\">,</span>n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> n <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-storage hl-type hl-c\">int</span> ma1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-storage hl-type hl-c\">int</span> ma2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ma1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ma2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> k <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> \n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<p>复杂度达到O(n^4)\n尽管对于这个题目而言，这么高的复杂度也能AC，但是仍有简单有效的优化方法。</p>\n<p>首先考虑复杂度这么高的原因</p>\n<p>#####状态参数太多</p>\n<p>对于所有状态，我们需要四个参数才能区分他们，这是很不必要的。</p>\n<p>前面提到过<code>i+j=k+l</code>这个关系。</p>\n<p>变形一下，可得到<code>l=i+j-k</code>。</p>\n<p>###！！！</p>\n<p>也就是说，l这个参数可以通过前面三个参数推出来</p>\n<p>那我还存他干什么</p>\n<p>用dp[i][j][k]表示两人分别走到了(i,j)和(k,i+j-k)这两个点。</p>\n<p>则状态转移方程为</p>\n<p><code>dp[i][j][k] = max{dp[i-1][j][k-1],dp[i-1][j][k],dp[i][j-1][k-1],dp[i][j-1][k]} + a[i][j] + a[k][i+j-k];(i,j != k,l)</code></p>\n<p><code>dp[i][j][k] = max{dp[i-1][j][k-1],dp[i-1][j][k],dp[i][j-1][k-1],dp[i][j-1][k]} + a[i][j];(i,j == k,l)</code></p>\n<p>优化后的程序如下</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">15</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y<span class=\"hl-punctuation hl-separator hl-c++\">,</span>n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">do</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> y <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> n<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> y <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> n <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> i <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> j <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> k<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> ma1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-storage hl-type hl-c\">int</span> ma2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">max</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ma1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ma2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> k <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> map<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> \n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> dp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>m<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">复杂度O</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">n<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">3</span></span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n</span></code></pre>\n","04341880ccad7d92ff128c7b7dd33ba89284a01a":"<h1 id=\"P1027-Car的旅行路线\"><a href=\"#P1027-Car的旅行路线\" class=\"headerlink\" title=\"P1027 Car的旅行路线\"></a>P1027 Car的旅行路线</h1>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>又到暑假了，住在城市A的Car想和朋友一起去城市B旅游。她知道每个城市都有四个飞机场，分别位于一个矩形的四个顶点上，同一个城市中两个机场之间有一条笔直的高速铁路，第I个城市中高速铁路了的单位里程价格为Ti，任意两个不同城市的机场之间均有航线，所有航线单位里程的价格均为t。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/8.png\" alt=\"p1027\"></p>\n<!--more-->\n<p>图例（从上而下）</p>\n<p>机场 高速铁路</p>\n<p>飞机航线</p>\n<p>注意：图中并没有标出所有的铁路与航线。</p>\n<p>那么Car应如何安排到城市B的路线才能尽可能的节省花费呢?她发现这并不是一个简单的问题，于是她来向你请教。</p>\n<p>找出一条从城市A到B的旅游路线，出发和到达城市中的机场可以任意选取，要求总的花费最少。</p>\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3>\n<p>第一行为一个正整数n(0&lt;=n&lt;=10)，表示有n组测试数据。</p>\n<p>每组的第一行有四个正整数s，t，A，B。</p>\n<p>S(0&lt;S&lt;=100)表示城市的个数，t表示飞机单位里程的价格，A，B分别为城市A，B的序号，(1&lt;=A，B&lt;=S)。</p>\n<p>接下来有S行，其中第I行均有7个正整数xi1，yi1，xi2，yi2，xi3，yi3，Ti，这当中的(xi1，yi1)，(xi2，yi2)，(xi3，yi3)分别是第I个城市中任意三个机场的坐标，T I为第I个城市高速铁路单位里程的价格。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3>\n<p>共有n行，每行一个数据对应测试数据。 保留一位小数</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<h3 id=\"输入样例-1：\"><a href=\"#输入样例-1：\" class=\"headerlink\" title=\"输入样例#1：\"></a>输入样例#1：</h3>\n<p>1\n3 10 1 3</p>\n<p>1 1 1 3 3 1 30</p>\n<p>2 5 7 4 5 2 1</p>\n<p>8 6 8 8 11 6 3</p>\n<h3 id=\"输出样例-1：\"><a href=\"#输出样例-1：\" class=\"headerlink\" title=\"输出样例#1：\"></a>输出样例#1：</h3>\n<p>47.5\n#分析</p>\n<p>####<s>披着蓝皮的大水题</s></p>\n<p>每一个机场看作一个节点，所有道路和航线看成边，边权为距离×价格，跑一遍floyd后，枚举起点城市终点城市的所有机场判断最小价格即可。    #include <iostream></iostream></p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cmath<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\">    <span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span>    <span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">999999999</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> nce <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> ncity<span class=\"hl-punctuation hl-separator hl-c++\">,</span>op<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> fp<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">City</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-storage hl-type hl-c\">double</span> ft<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">double</span> x<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">double</span> y<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>c <span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">mymin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">d</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">sqrt</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">bool</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">is90</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y2</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">x3</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">double</span> <span class=\"hl-variable hl-parameter hl-c++\">y3</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x3<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>x2<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y2<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>y3<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>y2<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n    </span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n        cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> nce<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ncc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ncc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> nce<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ncc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> k <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>k<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>k<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>l<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> ncity <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> fp <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> op <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                cin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ft</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>get the forth point (Vector)\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-storage hl-type hl-c\">double</span> midx<span class=\"hl-punctuation hl-separator hl-c++\">,</span>midy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">is90</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    midx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    midy <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">3</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>midy <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; c[i].x[3] &lt;&lt; &quot; &quot; &lt;&lt;  c[i].y[3] &lt;&lt; endl;\n</span>            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>init\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ic <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ip <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> jc<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> ip<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ft</span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">d</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fp <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">d</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">x</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">y</span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; e[ic][ip][jc][jp] &lt;&lt; endl;\n</span>                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>floyd\n</span>            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> kc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> kp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>kp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ic <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ic<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ip <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ip<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jc <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> ncity<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jc<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> jp <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>jp<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                                    e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mymin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ic<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ip<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>kp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jc<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>jp<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> oi <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>oi <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>oi<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> ei <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ei <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ei<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mymin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ans<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>op<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>oi<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ei<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%.1lf</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    </span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>\n","457daf4d6d61860f6817a49ffb2ffb0251d871bb":"<p>这题刚开始没想到可以枚举第二个客栈,选择了枚举第一个客栈.</p>\n<p>因为只有一次询问,所以每个客栈最低消费的绝对值是没有意义的,有意义的只有这个客栈的最低消费与p的相对大小.</p>\n<p>那么可以用1代表最低消费小于等于p,0代表大于p,对这个数组进行一次前缀和,那么这个前缀和就是一个具有单调性的数组.</p>\n<p>这样枚举第一个客栈之后,可以用二分在logn时间内寻找出第一家可以喝咖啡的客栈,这家客栈之后的所有与第一家客栈色调相同的客栈都可以作为第二家客栈.</p>\n<!--more-->\n<p>可以预处理出每一家客栈之后每种色调的客栈有多少个.</p>\n<p>小细节:</p>\n<ol>\n<li>因为选择喝咖啡的客栈可以作为第一家或第二家客栈,所以在二分的时候寻找的不是前缀和为第一家客栈的前缀和+1的客栈,而是第一家客栈之前一家客栈的前缀和+1的客栈.即寻找的不是s[i]+1,而是s[i-1]+1.</li>\n<li>还是因为选择喝咖啡的客栈可以作为第一家或第二家客栈,预处理每一家客栈之后的每种色调的客栈数量时要包括这家客栈.但是这样会导致计算两人住在同一家客栈的方案,所以在枚举第一家客栈时,计算出可以去哪喝咖啡后,如果可以喝咖啡的客栈与第一家客栈相同,方案数应-1.</li>\n</ol>\n<p>放一下我巨丑的代码</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">200005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">55</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>K<span class=\"hl-punctuation hl-separator hl-c++\">,</span>P<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>sgn\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> P<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">else</span> sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>r\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ts<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> ts</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">nso</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>K<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>s\n</span>    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>sgn<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">ss</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    ss<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">K</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">P</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    lovelive ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> el<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>er<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> er<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>er<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>mid<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                er <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                el <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        lovelive tans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>el <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> er<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> r<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>el<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>c<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>el <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> i<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>tans<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    cout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n","b635fc4c7f759ff2b356bc9a208257b108cee854":"<h1 id=\"P3933-Chtholly-Nota-Seniorious\"><a href=\"#P3933-Chtholly-Nota-Seniorious\" class=\"headerlink\" title=\"P3933 Chtholly Nota Seniorious\"></a>P3933 Chtholly Nota Seniorious</h1>\n<h2 id=\"题目背景\"><a href=\"#题目背景\" class=\"headerlink\" title=\"题目背景\"></a>题目背景</h2>\n<p>大样例下发链接: <a href=\"https://pan.baidu.com/s/1nuVpRS1\">https://pan.baidu.com/s/1nuVpRS1</a> 密码: sfxg</p>\n<p><strong>こんなにも、たくさんの幸せをあの人に分けてもらった</strong></p>\n<p><strong>だから、きっと</strong></p>\n<p><strong>今の、私は</strong></p>\n<p><strong>谁が何と言おうと</strong></p>\n<p><strong>世界一、幸せな女の子だ</strong></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9193.png\" alt=\"img\"></p>\n<!--more-->\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>——“假如……我是说假如喔。</p>\n<p>万一我再过五天就会死，你能不能对我温柔一点？”</p>\n<p>巨大的六号兽五天后将袭击浮游大陆。</p>\n<p>无数次计算得到的残酷数据表明，只有圣剑瑟尼欧尼斯的适格精灵——珂朵莉·诺塔·瑟尼欧尼斯(Chtholly Nota Seniorious)开启妖精乡之门，才可以以生命为代价守住浮游岛。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9228.png\" alt=\"img\"></p>\n<p>“至少，我也希望自己不用消失，也想让别人记住。我也想留下羁绊啊。”</p>\n<p>留给妖精少女珂朵莉的时间似乎已经不多了。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9229.png\" alt=\"img\"></p>\n<p>年轻的二等技官，妖精仓库的管理员，世界上最后一个人类——威廉·克梅<strong>修</strong>，数百年前曾经是一名准勇者，掌握着成为一名勇者所需要的所有知识。</p>\n<p>大战在即，调整圣剑的状态成为了一项重要的任务。</p>\n<pre><code><span class=\"hl-text hl-plain\">瑟尼欧里斯（セニオリス）\n圣剑的其中之一，在现存的遗迹兵装中，拥有最强大的力量。\n拥有非常特殊的资质，只有极少一部分的人才能使用。\n由四十一个护符组成。能将所有事物包含不死者都回归「死亡」。\n</span></code></pre>\n<p>威廉需要调整圣剑的状态，因此他将瑟尼欧尼斯拆分护符，组成了一个nn 行mm 列的矩阵。</p>\n<p>每一个护符都有自己的魔力值。现在为了测试圣剑，你需要将这些护符分成 A,B两部分。</p>\n<p>要求如下：</p>\n<ol>\n<li>圣剑的所有护符，恰好都属于两部分中的一部分。</li>\n<li>每个部分内部的方块之间，可以通过上下左右相互到达，而且每个内部的方块之间互相到达，最多允许拐一次弯。</li>\n</ol>\n<p>例如</p>\n<pre><code><span class=\"hl-text hl-plain\">ＡＡＡＡＡ　　ＡＡＡＡＡ　　ＡＡＡＡＡ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＡＡＢＢ\nＡＢＢＢＡ　　ＢＢＡＡＡ　　ＡＡＡＢＢ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＢＢＢＢ\nＡＡＡＡＡ　　ＡＡＡＡＡ　　ＢＢＢＢＢ\n\n　　(1)　　　　　(2)　　　　　(3)　　　　　　\n</span></code></pre>\n<p>其中(1)(2)是不允许的分法，(3)是允许的分法。在(2)中，a属于A区域，这两个a元素之间互相到达，没有办法最多只拐一次弯。</p>\n<p>现在要问，所有合法的分法中，A区域的极差与B区域的极差 中间较大的一个的 <strong>最小值</strong> 是多少？</p>\n<p>好心而可爱的在一旁默默观察奈芙莲悄悄地告诉你，极差就是区域内最大值减去最小值。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9230.png\" alt=\"img\"></p>\n<p>夜晚的风吹拂着，68号岛上的景色竟与地上的森林无异。转念又想，黄金妖精本身就是与森林之中出现，成长，消亡的神秘存在啊。</p>\n<p>时间不早了，早上训练中落败的珂朵莉即将回来了。您要尽快和威廉一起调整好圣剑，千万不能迟哟。</p>\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<p>输入格式：</p>\n<p>第一行两个自然数<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 600 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.986ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 878 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45A\" xlink:href=\"#MJX-2-TEX-I-1D45A\"></use></g></g></g></svg></p>\n<p>接下来n 行，每行m 个自然数<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.54ex\" height=\"2.286ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1564.9 1010.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(783,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g></g></g></g></g></svg> 表示权值</p>\n<p>输出格式：</p>\n<p>一个整数表示答案。</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<p>输入样例#1：</p>\n<p>复制</p>\n<pre><code><span class=\"hl-text hl-plain\">4 4\n1 12 6 11\n11 4 2 14\n10 1 9 20\n4 17 13 10\n</span></code></pre>\n<p>输出样例#1：</p>\n<p>复制</p>\n<pre><code><span class=\"hl-text hl-plain\">11\n</span></code></pre>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2>\n<p>样例解释</p>\n<pre><code><span class=\"hl-text hl-plain\">1  12 6        11\n11 4  2        14\n10 1  9        20\n4        17 13 10\n</span></code></pre>\n<p>分法不唯一，如图是一种合法的分法。左边部分极差12-1=11，右边一块极差20-10=10，所以答案取这两个中较大者11。没有别的分法，可以使答案更小。</p>\n<p><strong>数据范围与约定</strong></p>\n<table>\n<thead>\n<tr>\n<th>测试点</th>\n<th>n</th>\n<th>m</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#1-2</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.651ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-4-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\" transform=\"translate(500,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#3-4</td>\n<td><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg></td>\n<td><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.914ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 3055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-6-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-6-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-6-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-6-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(1500,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#5-7</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.782ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2555.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-7-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-7-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-7-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-7-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\" transform=\"translate(1000,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#8-10</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.914ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 3055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-8-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-8-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-8-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-8-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(1500,0)\"></use></g></g></g></svg></td>\n</tr>\n</tbody>\n</table>\n<p>对于所有的权值<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.956ex\" height=\"2.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 6168.5 1158.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-9-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-9-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-9-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-9-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-9-TEX-I-1D434\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(783,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-9-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3676.2,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4732,0)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-9-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><use data-c=\"39\" xlink:href=\"#MJX-9-TEX-N-39\"></use></g></g></g></g></svg></p>\n<p>《末日时在做什么？有没有空？可以来拯救吗？》</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9235.png\" alt=\"img\"><s>看题比看番刺激系列</s></p>\n<h1 id=\"胡乱分析\"><a href=\"#胡乱分析\" class=\"headerlink\" title=\"胡乱分析\"></a>胡乱分析</h1>\n<h3 id=\"翻译题意\"><a href=\"#翻译题意\" class=\"headerlink\" title=\"翻译题意\"></a>翻译题意</h3>\n<p><strong>最大的最小</strong>肯定是二分啊.</p>\n<p>二分极值,然后check.</p>\n<p><s>完</s></p>\n<p>好下面考虑check怎么写.</p>\n<p>先解释一下题目分割的要求.</p>\n<p>根据题目描述,可以把要求抽象一下:</p>\n<pre><code><span class=\"hl-text hl-plain\">用一条折线,在图中将所有的AB分开,且分割线要么不拐弯,要么只能向一个方向拐弯.\n</span></code></pre>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13249.png\" alt=\"img\"></p>\n<p>这是一个不合法的情况,因为分割线在既背着第一列方向拐了又向着第一列方向拐了几次.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13247.png\" alt=\"img\"></p>\n<p>这是一个合法的情况,因为分割线从上到下看只向着第一列拐.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13248.png\" alt=\"img\"></p>\n<p>同样,旋转一下这条分割线也是合法的.</p>\n<p>换一种说法,这条分割线除了两端,没有最上或最下或最左或最右.</p>\n<pre><code><span class=\"hl-text hl-plain\">ＡＡＡＡＡ　　ＡＡＡＡＡ　　ＡＡＡＡＡ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＡＡＢＢ\nＡＢＢＢＡ　　ＢＢＡＡＡ　　ＡＡＡＢＢ\nＡＡＢＡＡ　　ＢａＡＡＡ　　ＡＢＢＢＢ\nＡＡＡＡＡ　　ＡＡＡＡＡ　　ＢＢＢＢＢ\n\n　　(1)　　　　　(2)　　　　　(3)　　　　　　\n</span></code></pre>\n<p>再根据这几个样例,基本题意就可以理解了吧.</p>\n<h3 id=\"基础的错误算法\"><a href=\"#基础的错误算法\" class=\"headerlink\" title=\"基础的错误算法\"></a>基础的错误算法</h3>\n<p>刚开始拿到这题的时候,没什么思路的我准备瞎写个算法:</p>\n<pre><code><span class=\"hl-text hl-plain\">无视任何规则,从第一行第一列开始,按照从左到右,从上到下的方向以此考虑每个元素是否可以加入A集合,如果这个元素可以被加入A集合,更新目前已经选的元素组成的A集合的最大值和最小值,再考虑下一个元素.直到该元素不能加入A集合时,判断剩下的集合的极差是否在可接受的范围内.\n</span></code></pre>\n<p>很明显,这个方法有一个简单的反例.</p>\n<pre><code><span class=\"hl-text hl-plain\"> 1 1 1 6\n-2 9 9 9\n</span></code></pre>\n<p>假如可以容忍的极差为5,这种方法考虑到6这个元素的时候,由于目前选的A集合的最小值为1,所以6加入A集合,但是此时最大值要更新为6;</p>\n<p>但是当考虑到-2这个元素时,由于最大值已经被更新为6,-2是加入不到A集合的.</p>\n<p>此时检查剩下的四个元素,极差为11,不能接受,好像并不存在一种分法能把极差降到5以下.</p>\n<p>但是一眼可以看出,存在一种分法能把两个集合极差变为3和3(太显然了我不画了).</p>\n<h3 id=\"考虑为什么会错\"><a href=\"#考虑为什么会错\" class=\"headerlink\" title=\"考虑为什么会错\"></a>考虑为什么会错</h3>\n<p>重点就在那个6上,简单说,就是明明不该放到A集合的元素硬拉进来且更新了最大值最小值,导致应该在A集合的元素不能加入A集合.</p>\n<p>换句话说<strong>在枚举过程中,在枚举完所有一定要加入A集合的元素之前枚举到了可以不加入A集合的元素,即枚举顺序错误</strong></p>\n<h3 id=\"换一种枚举顺序\"><a href=\"#换一种枚举顺序\" class=\"headerlink\" title=\"换一种枚举顺序?\"></a>换一种枚举顺序?</h3>\n<p>考虑分割线的限制,再换一种说法:</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13247.png\" alt=\"img\"></p>\n<p><strong>为了方便,现在只讨论形如这样的分割线,即从上到下只向着第一列方向拐弯或不拐弯</strong></p>\n<p>想象每一行都有一个挡板,为这一行A与B集合的分界线,那么把这些挡板连起来就是整张图的分界线(看图).\n为了保证合法,从上到下的挡板的位置<strong>必须不能比上一行挡板位置靠右</strong>.</p>\n<p>(为了方便,现在只讨论形如上图的分割线,即从上到下只背着第一列方向拐弯或不拐弯)</p>\n<p>那么当两行挡板位置相等时,如果第一行挡板右边元素使可以接受的,那么就可以放心地把他加入A集合了.</p>\n<p>因为此时由于第二行的挡板不能逾越第一行挡板的位置,如果第一行不动,他将不能再动,即使右边的元素可以接受.</p>\n<p>即<strong>已经枚举完了一定要加入A集合的元素</strong>.</p>\n<p>当然,当第二行右边的元素已经不可接受,第一行就可以不用等到第二行挡板和第一行一样时再移动.</p>\n<h3 id=\"考虑一个小问题\"><a href=\"#考虑一个小问题\" class=\"headerlink\" title=\"考虑一个小问题\"></a>考虑一个小问题</h3>\n<p>当遇到一个可以接受的元素k时,是否加入A集合,是否会因为加入A集合导致B集合出现问题?</p>\n<ul>\n<li>当k为未加入元素的极值时,加入A集合就会缩小未来的B集合的极差.</li>\n<li>当k不为未加入元素的极值时,加入A集合不会对B集合有任何影响.</li>\n</ul>\n<h3 id=\"算法实现\"><a href=\"#算法实现\" class=\"headerlink\" title=\"算法实现\"></a>算法实现</h3>\n<p>二分最小的可接受的极值上限,不断地从上到下,在保证从上到下的挡板的位置<strong>必须不能比上一行挡板位置靠右</strong>的条件下尝试移动该行的挡板.</p>\n<p>为了保证下一行没有阻挡的情况下仅当两行挡板位置相同时才能延伸挡板,每次移动只能移动一格.(有点难说,这个意思自己理解一下稍微有点难).</p>\n<p>当一行遇到阻碍时,因为每一次都只移动一格,该行之下的所有行要么已经被不可接受的元素阻挡,要么被这一行阻挡,所以下一次循环时就可以不用考虑改行之下的挡板.</p>\n<p>当第一行遇到阻碍时,循环结束.统计剩下的元素组成的B集合的极值,如果可以接受,下调上限,否则</p>\n<p><strong>就可以返回false上调上限了??</strong></p>\n<p>别忘了,这只是一种情况,一共8种情况呢.(四个延伸起始方向,两个拐弯方向)</p>\n<p>这个可以通过旋转图像后再进行二分简单的实现,但是我当初敲代码的时候少了块脑子写了4个judge,给8种情况都写了一段来判断,反正过了也就不改了.</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">_getnum</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">xx</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n <span class=\"hl-storage hl-type hl-c\">char</span> tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>xx<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>tt<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>tt<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>xx<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>xx<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_1</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> INF <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_3</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; minx &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> INF <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>INF<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge_4</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">bool</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>t <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tminx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000001</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> s<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> minx <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> minx<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>minx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">judge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">m</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_3</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2005</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\ts<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge_4</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">m</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">_getnum</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000000004</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tr <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tl <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> l<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span> \n</span></code></pre>\n","3c264a36a30b79b2bb85fefcf011274937310f5c":"<p><img src=\"/img/softmax-mnist.assets/NOH%7DOC%5BSA3A%25@29ALI$PL5.png\" alt=\"img\"></p>\n<p>求了两下午导, 调了半天代码, 终于验证了我寒假的想法, 自己用softmax回归(我也不知道这个叫什么)实现了MNIST手写数字识别.</p>\n<!--more-->\n<p>寒假里那篇讲Logistic回归的最后, 我按照Logistic回归的想法提出了一种解决多分类问题的方法, 然后想着这玩意不就能识别手写数字了嘛, 但是这学期一直在摸鱼, 没有去尝试写过.</p>\n<p>Logistic回归其实还是建立在线性回归上. 线性回归就是拟合出一个矩阵 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-1-TEX-I-1D44A\"></use></g></g></g></svg> , 让 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.691ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3841.6 765\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-2-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-2-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3269.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></svg> 尽可能逼近真实答案.</p>\n<p>Logistic回归是加了一个非线性函数Sigmoid函数. 他构造的是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.911ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5264.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-3-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-3-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2866.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3255.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-3-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4303.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4875.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg>, 把输出定义为属于其中一类的概率, 让 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-4-TEX-I-1D43B\"></use></g></g></g></svg> 尽可能逼近真实答案. 因为Sigmoid函数是可导的, 所以就可以利用链式法则求出 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-5-TEX-I-1D43B\"></use></g></g></g></svg> 对矩阵中每一项的导数, 即 <svg style=\"vertical-align: -1.034ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.934ex\" height=\"3.07ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -899.6 1738.9 1356.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-6-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-6-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-6-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(355.4,394) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-6-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43B\" xlink:href=\"#MJX-6-TEX-I-1D43B\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-6-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-6-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(977,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-6-TEX-I-1D456\"></use></g></g></g><rect width=\"1498.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>. 这样就可以找到这个函数在一个点的梯度, 就可以用梯度下降啦.</p>\n<p>而在这个基础上, 我们可以让 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-7-TEX-I-1D43B\"></use></g></g></g></svg> 不再代表一个数, 让他表示一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.906ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2610.4 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-8-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-8-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1110.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-8-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2110.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></svg> 的矩阵, 其中 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-9-TEX-I-1D441\"></use></g></g></g></svg> 是类别个数, 每一项代表输入处于这一类的概率. 然后还是利用一个可导函数+线性拟合的思路, 让 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.146ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5368.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-10-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-10-TEX-I-1D439\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2970.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3359.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-10-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4407.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4979.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg>, 这个函数 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.695ex\" height=\"1.538ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -680 749 680\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D439\" xlink:href=\"#MJX-11-TEX-I-1D439\"></use></g></g></g></svg> 需要根据线性拟合的结果(也是一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.906ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2610.4 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-12-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-12-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1110.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-12-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2110.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g></g></g></svg> 的矩阵), 得到这个输入属于每个类的概率.</p>\n<p>这个函数首先要保证输出的矩阵每一项加起来为1, 因为输入处于每一类的概率之和一定为1. 还要保证这个函数的输入(即 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.665ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1620 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-13-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1048,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g></g></g></svg> )越大, 对应的概率也要越大.</p>\n<p>我当时提出直接用输入的每一项比上和, 即<svg style=\"vertical-align: -1.525ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.349ex\" height=\"3.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -957.9 2364.3 1632\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-14-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-14-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-14-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(801.4,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-14-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-14-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-14-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-14-TEX-I-1D457\"></use></g></g></g><rect width=\"2124.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 来当作这个输入函数. 但是发现还有个叫softmax的东西, 就直接用了softmax, 有时间试试我提出的那个咋样, 肯定不好用, 我就想知道有多不好用.</p>\n<p>softmax看名字就知道这是一个soft的max. 为了满足输入越大概率越大, 我们可以直接用一个max函数. 即对于一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.665ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1620 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-15-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-15-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1048,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-15-TEX-I-1D465\"></use></g></g></g></svg> , 直接看哪一项最大就行, 最大的就认为是分类的结果.</p>\n<p>但是这样做有两个问题, 一个是直接这样把其他的可能性一棒子打死, 就不给他们翻身的机会. 训练过程中是要不断修改的, 直接认为这次分类的结果是对的, 其他类别都是错的, 就没有了训练的空间. 第二个大问题就是, 这个函数不可导, 也基本没有了训练的方法.</p>\n<p>所以softmax就来了:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.155ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 7140.5 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-16-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-16-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-16-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-16-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70E\" xlink:href=\"#MJX-16-TEX-I-1D70E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(571,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(960,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1710,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-16-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2703.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-16-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3759.5,0)\"><g data-mml-node=\"msup\" transform=\"translate(1035.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-16-TEX-I-1D456\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-16-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-16-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-16-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>其实就是先把所有的值来个exp, 然后再用我的那个方法.</p>\n<p>这样不仅保证值大的项得到的概率也很大, 而且还能和其他项拉开差距. 最重要的是, 它可导.</p>\n<p>那对于手写数字识别这个问题, 我们就可以让<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.433ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5053.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-17-TEX-I-1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-17-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1028.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2084.6,0)\"><use data-c=\"1D70E\" xlink:href=\"#MJX-17-TEX-I-1D70E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2655.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3044.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-17-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4092.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4664.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg>, 然后训练就行啦. <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-18-TEX-I-1D443\"></use></g></g></g></svg> 就是我预测的这个输入在每一类的概率</p>\n<p>然后选Loss函数, 和Logistic回归一样, Loss函数我们选用交叉熵, 交叉熵也在之前的文章讲过啦.</p>\n<p>Loss函数:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.697ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.996ex\" height=\"6.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1740.7 13700 2932.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-19-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-19-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-19-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-19-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-19-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-19-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-19-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-19-TEX-I-1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path><path id=\"MJX-19-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-19-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-19-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-19-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-19-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-19-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-19-TEX-N-2061\" d=\"\"></path><path id=\"MJX-19-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-19-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-19-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-19-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2736.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3792.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-19-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4570.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-19-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-19-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6065.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-19-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-19-TEX-I-1D441\"></use></g></g><g data-mml-node=\"munderover\" transform=\"translate(7675.9,0)\"><g data-mml-node=\"mo\" transform=\"translate(55.1,0)\"><use data-c=\"2211\" xlink:href=\"#MJX-19-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(655.1,-1084.4) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(0,1150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D450\" xlink:href=\"#MJX-19-TEX-I-1D450\"></use></g><g data-mml-node=\"mi\" transform=\"translate(433,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-19-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(731,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-19-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1260,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-19-TEX-I-1D460\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1729,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-19-TEX-I-1D460\"></use></g></g></g><g data-mml-node=\"msub\" transform=\"translate(9396.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-19-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(10380.4,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-19-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-19-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11214.4,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-19-TEX-N-2061\"></use></g><g data-mml-node=\"msub\" transform=\"translate(11381.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-19-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(12350,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12739,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-19-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13311,0)\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>其中<svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-20-TEX-I-1D441\"></use></g></g></g></svg>是训练数据的个数, 第二个求和实际上就是求真实数据分布对我的预测分布的交叉熵. <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.848ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 817 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-21-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-21-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-21-TEX-I-1D456\"></use></g></g></g></g></svg> 是真实分布的One-hot向量, 即真实在哪一类, 这个向量的哪一项就是1, 其他都是0.</p>\n<p>在MNIST手写数字识别里, <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-22-TEX-I-1D44A\"></use></g></g></g></svg> 矩阵是 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.422ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 3722.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-23-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-23-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-23-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-23-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-23-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-23-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-23-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-23-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-23-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"37\" xlink:href=\"#MJX-23-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-23-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-23-TEX-N-34\" transform=\"translate(1000,0)\"></use></g></g></g></svg> 的, <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-24-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-24-TEX-I-1D466\"></use></g></g></g></svg> 和 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-25-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-25-TEX-I-1D443\"></use></g></g></g></svg> 都是 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.159ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2722.4 688\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-26-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-26-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-26-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-26-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-26-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\"></use></g></g></g></svg> 的, <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-27-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-27-TEX-I-1D465\"></use></g></g></g></svg> 是一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.291ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 3222.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-28-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-28-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-28-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-28-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-28-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"37\" xlink:href=\"#MJX-28-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-28-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-28-TEX-N-34\" transform=\"translate(1000,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-28-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2722.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-28-TEX-N-31\"></use></g></g></g></svg> 的列向量.</p>\n<p>其实, <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-29-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-29-TEX-I-1D466\"></use></g></g></g></svg> 矩阵只有一项是 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-30-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-30-TEX-N-31\"></use></g></g></g></svg> , 那就可以把交叉熵改成:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.552ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.109ex\" height=\"5.473ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 11098 2419\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-31-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-31-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-31-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-31-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-31-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-31-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-31-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-31-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-31-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-31-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-31-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-31-TEX-N-2061\" d=\"\"></path><path id=\"MJX-31-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-31-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-31-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-31-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-31-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-31-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-31-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2736.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-31-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3792.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-31-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4570.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-31-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-31-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6065.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-31-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-31-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(7675.9,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-31-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-31-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8509.9,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-31-TEX-N-2061\"></use></g><g data-mml-node=\"msub\" transform=\"translate(8676.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-31-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-31-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(9748,0)\"><use data-c=\"28\" xlink:href=\"#MJX-31-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10137,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-31-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10709,0)\"><use data-c=\"29\" xlink:href=\"#MJX-31-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p><svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-32-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-32-TEX-I-1D466\"></use></g></g></g></svg> 是这个数据真实类别.</p>\n<p>然后, 为了拟合出 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-33-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-33-TEX-I-1D443\"></use></g></g></g></svg> 里的 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-34-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-34-TEX-I-1D44A\"></use></g></g></g></svg>, 需要求出 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.563ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2459 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-35-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-35-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-35-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-35-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-35-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-35-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-35-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-35-TEX-N-29\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-36-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-36-TEX-I-1D44A\"></use></g></g></g></svg> 的每一项的偏导, 即<svg style=\"vertical-align: -1.253ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.835ex\" height=\"3.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2579 1600.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-37-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-37-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-37-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-37-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-37-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-37-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-37-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-37-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-37-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-37-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-37-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-37-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(537,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-37-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-37-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-37-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-37-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2339\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>.</p>\n<p>由链式法则:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.274ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.871ex\" height=\"6.194ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 14970.9 2737.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-38-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-38-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-38-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-38-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-38-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-38-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-38-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-38-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-38-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-38-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-38-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-38-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-38-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-38-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-38-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-38-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-38-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-38-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3742.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-38-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4798.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-38-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5576.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-38-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-38-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(7071.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-38-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-38-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(8681.9,0)\"><g data-mml-node=\"mn\" transform=\"translate(1180.7,676)\"><use data-c=\"31\" xlink:href=\"#MJX-38-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-710)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-38-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-38-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1071.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1460.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-38-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2032.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><rect width=\"2621.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mfrac\" transform=\"translate(11543.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,755)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-38-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-38-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1637.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2026.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-38-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2598.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(649.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-38-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-38-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3187.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>下面研究 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-39-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-39-TEX-I-1D443\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.535ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1562.3 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-40-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-40-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-40-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-40-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-40-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-40-TEX-I-1D457\"></use></g></g></g></g></g></svg> 的偏导.</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.641ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.348ex\" height=\"5.944ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 13413.8 2627.4\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-41-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-41-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-41-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-41-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-41-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-41-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-41-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-41-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-41-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-41-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-41-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-41-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-41-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-41-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-41-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-41-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-41-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-41-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-41-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2900.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-41-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(800.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-41-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-41-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-41-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3489.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4007.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-41-TEX-N-3D\"></use></g><g data-mml-node=\"munder\" transform=\"translate(5063,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-41-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(594.4,-1059.6) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(6673.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-41-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-41-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-41-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-41-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-41-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(897.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-41-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10345.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-41-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(10845.5,0)\"><g data-mml-node=\"mrow\" transform=\"translate(457,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-41-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-41-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-41-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-41-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>考虑到当 <svg style=\"vertical-align: -0.486ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.614ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2039.6 931\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-42-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-42-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path><path id=\"MJX-42-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D461\" xlink:href=\"#MJX-42-TEX-I-1D461\"></use></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-42-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1694.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-42-TEX-I-1D456\"></use></g></g></g></svg> 时, <svg style=\"vertical-align: -1.253ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.549ex\" height=\"3.42ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -957.9 3778.5 1511.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-43-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-43-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-43-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-43-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-43-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-43-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-43-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-43-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(387.6,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-43-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-43-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-43-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-43-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-43-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-43-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-43-TEX-I-1D457\"></use></g></g></g></g><rect width=\"1704.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2222.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-43-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3278.5,0)\"><use data-c=\"30\" xlink:href=\"#MJX-43-TEX-N-30\"></use></g></g></g></svg>, 所以:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.641ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48.614ex\" height=\"5.944ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 21487.4 2627.4\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-44-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-44-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-44-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-44-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-44-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-44-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-44-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-44-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-44-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-44-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-44-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-44-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-44-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-44-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-44-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-44-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2900.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(800.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3489.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4007.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-44-TEX-N-3D\"></use></g><g data-mml-node=\"munder\" transform=\"translate(5063,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-44-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(594.4,-1059.6) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(6673.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-44-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(897.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10345.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-44-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(10845.5,0)\"><g data-mml-node=\"mrow\" transform=\"translate(457,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(13691.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-44-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(14747.3,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-44-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(903.2,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(18418.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-44-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(18919.2,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>其中,</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.195ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 7158 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-45-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-45-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-45-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-45-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-45-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-45-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-45-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-45-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-45-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-45-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-45-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-45-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1093.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-45-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1482.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-45-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2054.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-45-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2721.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-45-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3777,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-45-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-45-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-45-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-45-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-45-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-45-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-45-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-45-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.379ex\" height=\"1.805ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 3703.6 798\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-46-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-46-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-46-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-46-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-46-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-46-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2083.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-46-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3131.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-46-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-47-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-47-TEX-I-1D434\"></use></g></g></g></svg> 是一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.159ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2722.4 688\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-48-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-48-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-48-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-48-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-48-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-48-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-48-TEX-N-31\"></use></g></g></g></svg> 的列向量.</p>\n<p>由矩阵相乘可知,</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.218ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.969ex\" height=\"5.367ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1392 4848.2 2372.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-49-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-49-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-49-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-49-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-49-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-49-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-49-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-49-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-49-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-49-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-49-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-49-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-49-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-49-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2846.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-49-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3901.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-49-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-49-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n<p>所以主要看<svg style=\"vertical-align: -1.036ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.81ex\" height=\"3.405ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2568 1505\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-50-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-50-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-50-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-50-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-50-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-50-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-50-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-50-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-50-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-50-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-50-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-50-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-50-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-50-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(703.1,-346.3) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-50-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-50-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-50-TEX-I-1D456\"></use></g></g></g><rect width=\"2328\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 就行啦.</p>\n<p>要求<svg style=\"vertical-align: -1.036ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.81ex\" height=\"3.405ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2568 1505\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-51-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-51-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-51-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-51-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-51-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-51-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-51-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-51-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-51-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-51-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-51-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-51-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-51-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-51-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(703.1,-346.3) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-51-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-51-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-51-TEX-I-1D456\"></use></g></g></g><rect width=\"2328\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>, 首先要讨论一下 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 521 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-52-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-52-TEX-I-1D458\"></use></g></g></g></svg> 和 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-53-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-53-TEX-I-1D456\"></use></g></g></g></svg> 的关系.</p>\n<ol>\n<li>\n<p><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.976ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2199.6 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-54-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-54-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-54-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-54-TEX-I-1D458\"></use></g><g data-mml-node=\"mo\" transform=\"translate(798.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-54-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1854.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-54-TEX-I-1D456\"></use></g></g></g></svg> 时:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -3.275ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"102.546ex\" height=\"7.681ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1947.5 45325.3 3395\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-55-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-55-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-55-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-55-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-55-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-55-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-55-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-55-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-55-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-55-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-55-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-55-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-55-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-55-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-55-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-55-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-55-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-55-TEX-S4-28\" d=\"M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z\"></path><path id=\"MJX-55-TEX-S4-29\" d=\"M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z\"></path><path id=\"MJX-55-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-55-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-55-TEX-SO-5B\" d=\"M202 -349V850H394V810H242V-309H394V-349H202Z\"></path><path id=\"MJX-55-TEX-SO-5D\" d=\"M22 810V850H214V-349H22V-309H174V810H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(841,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3671.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4171.8,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-55-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2452.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7142.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(8198.1,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,889.6)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1620.7,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2121,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(2510,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(4107,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5451,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6062.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(7062.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8683.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msup\" transform=\"translate(9183.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(3433.2,-784.9)\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(389,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1986,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"msup\" transform=\"translate(3330,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,289) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g></g><rect width=\"10781.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(19442.3,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(19942.5,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(20888.8,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(21166.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(22222.4,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-55-TEX-S4-23A1\" transform=\"translate(0,793.5)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-55-TEX-S4-23A3\" transform=\"translate(0,-803.5)\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(667,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4270.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(5270.5,0)\"><g data-mml-node=\"mrow\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-S4-28\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(792,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4173,0) translate(0 -0.5)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-S4-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(4998,1476.6) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10672,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-55-TEX-S4-23A4\" transform=\"translate(0,793.5)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-55-TEX-S4-23A6\" transform=\"translate(0,-803.5)\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(33783.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(34283.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(35230.2,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(35507.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(36563.7,0)\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"5B\" xlink:href=\"#MJX-55-TEX-SO-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(417,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1510.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1899.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2471.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3082.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4082.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mn\" transform=\"translate(839.5,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5325.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5714.9,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6286.9,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6675.9,0) translate(0 -0.5)\"><use data-c=\"5D\" xlink:href=\"#MJX-55-TEX-SO-5D\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(43878.8,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(44379,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n</li>\n<li>\n<p><svg style=\"vertical-align: -0.486ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.976ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2199.6 931\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-56-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-56-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path><path id=\"MJX-56-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-56-TEX-I-1D458\"></use></g><g data-mml-node=\"mo\" transform=\"translate(798.8,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-56-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1854.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-56-TEX-I-1D456\"></use></g></g></g></svg> 时:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"60.042ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 26538.6 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-57-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-57-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-57-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-57-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-57-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-57-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-57-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-57-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-57-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-57-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-57-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-57-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-57-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-57-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-57-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-57-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(841,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3671.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4171.8,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-57-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2452.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7142.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-57-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8198.1,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-57-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(8976.1,0)\"><g data-mml-node=\"msup\" transform=\"translate(1598.5,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(389,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-57-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1986,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"msup\" transform=\"translate(3330,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,289) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-57-TEX-N-32\"></use></g></g></g><rect width=\"4355.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(13793.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msup\" transform=\"translate(14294.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,413) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-57-TEX-I-1D456\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(15826.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(16327.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(17273.4,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(17551.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-57-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18607,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-57-TEX-N-2212\"></use></g><g data-mml-node=\"msub\" transform=\"translate(19385,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(20478.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(20867.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(21439.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(22050.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(22550.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-57-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(23519.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(23908.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(24480.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(25092,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(25592.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n</li>\n</ol>\n<p>然后把玩意带回到<svg style=\"vertical-align: -1.31ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28.424ex\" height=\"3.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1078.9 12563.4 1657.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-58-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-58-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-58-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-58-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-58-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-58-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-58-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-58-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-58-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-58-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-58-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-58-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-58-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-58-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-58-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-58-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(537,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-58-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-58-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2339\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2856.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-58-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3912.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-58-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4690.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(357.2,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-58-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-58-TEX-I-1D441\"></use></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(5925.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-58-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,477.1) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-58-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(7858.7,0)\"><g data-mml-node=\"mn\" transform=\"translate(899.3,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-58-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-58-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-58-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1071.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1460.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-58-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2032.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><rect width=\"1912.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mfrac\" transform=\"translate(10011,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,548.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-58-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-58-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1637.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2026.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-58-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2598.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(523.8,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-58-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-58-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2312.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 里.</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.218ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"82.191ex\" height=\"6.138ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 36328.4 2713.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-59-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-59-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-59-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-59-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-59-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-59-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-59-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-59-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-59-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-59-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-59-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-59-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-59-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-59-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-59-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-59-TEX-N-A0\" d=\"\"></path><path id=\"MJX-59-TEX-I-1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path><path id=\"MJX-59-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-59-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-59-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-59-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3742.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4798.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6293.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-59-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(7903.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-59-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(278,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-59-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1349.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1738.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2310.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2921.7,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-59-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3921.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4421.9,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-59-TEX-N-5D\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(12603.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mtext\" transform=\"translate(13550.1,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(13800.1,0)\"><use data-c=\"1D464\" xlink:href=\"#MJX-59-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14516.1,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-59-TEX-I-210E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15092.1,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-59-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15558.1,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-59-TEX-I-1D45B\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(16158.1,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mo\" transform=\"translate(16408.1,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(16797.1,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(17419.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(18475.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18965.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"mspace\" transform=\"translate(19354.7,0)\"></g><g data-mml-node=\"mfrac\" transform=\"translate(19354.7,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-59-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(23097.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(24153.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(25647.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-59-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(27258.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-59-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(28227.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(28616.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(29188.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"msub\" transform=\"translate(29577.5,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mtext\" transform=\"translate(30523.9,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(30773.9,0)\"><use data-c=\"1D464\" xlink:href=\"#MJX-59-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(31489.9,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-59-TEX-I-210E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(32065.9,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-59-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(32531.9,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-59-TEX-I-1D45B\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(33131.9,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mo\" transform=\"translate(33381.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(33770.9,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(34393.6,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-59-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(35449.4,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(35939.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>最后求出来的结果还是很简单的.</p>\n<p>公式推到完啦, 下一步就是写代码.</p>\n<p>MNIST数据集谷歌一下就有了:</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000330267.png\" alt=\"image-20210716000330267\"></p>\n<p>下下来之后是个二进制文件, 下面介绍了二进制文件的构造.</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000418636.png\" alt=\"image-20210716000418636\"></p>\n<p>这是训练集输入, 从第16B开始, 每一个字节代表一个像素, 一张图有784个像素, 一共有60000个图.</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000503830.png\" alt=\"image-20210716000503830\"></p>\n<p>这是训练集输出, 从第8B开始, 每一个字节代表一张图片的标签.</p>\n<p>为了验证一下数据是不是这样用的, 我写了个程序把第一个图片搞出来看看长啥样.</p>\n<p>把这个输入文件从第16B开始, 读取784B, 生成到一个ppm图片里.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-10.png\" alt=\"2021-07-10\"></p>\n<p>我猜这是个5.</p>\n<p>然后按照输出的格式, 读取第8个字节.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-10-1.png\" alt=\"2021-07-10-1\"></p>\n<p>果然是个5, 我眼真好使.</p>\n<p>除了训练数据, 他还给了测试数据, 只不过测试数据只有10000个.</p>\n<p>验证了这些数据集的构造后, 就开始写代码.</p>\n<p>第一部分就是读入数据集嘛, 构造一个<svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.815ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 5222.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-60-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-60-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-60-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-60-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-60-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-60-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"37\" xlink:href=\"#MJX-60-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-60-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-60-TEX-N-34\" transform=\"translate(1000,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-60-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2722.4,0)\"><use data-c=\"36\" xlink:href=\"#MJX-60-TEX-N-36\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(2000,0)\"></use></g></g></g></svg> 的训练输入矩阵. 但是我无论用什么方法, 读入数据都挺慢的. 后来我发现numpy里有个叫fromfile的东西, 可以直接读取这种东西, 速度飞快, 大意了.</p>\n<p>然后就是把上面的推导过程写成代码, 代码挺难写的, 而且要注意输入从一个数据变成了60000个数据同时输入, 写了一两小时才写完.</p>\n<pre><code><span class=\"hl-text hl-plain\">import numpy as np\n\nm = 60000\nn = 10000\ntrainx = np.fromfile(open(&quot;train-images.idx3-ubyte&quot;), dtype=np.uint8)[16:].reshape((m, 28 * 28)).T\nrawtrainy = np.fromfile(open(&quot;train-labels.idx1-ubyte&quot;), dtype=np.uint8)[8:].reshape(m)\ntestx = np.fromfile(open(&quot;t10k-images.idx3-ubyte&quot;), dtype=np.uint8)[16:].reshape((10000, 28 * 28)).T\nrawtesty = np.fromfile(open(&quot;t10k-labels.idx1-ubyte&quot;), dtype=np.uint8)[8:].reshape(10000)\n\nt = np.ones((10,784))/1000\n\ndef softmax(x, s):\n    y = np.exp(x)\n    for i in range(s):\n        y[:,i] = y[:,i] / y[:,i].sum()\n    return y\n\n\ndef calcP(w):\n\n    return softmax(np.dot(w, trainx),m)\n\n\ndef calcPtest(w):\n\n    return softmax(np.dot(w, testx),n)\n\n\ndef calcJ(P):\n    J = 0\n    for i in range(m):\n        J = J + np.log(P[rawtrainy[i]][i])\n    return J / (-m)\n\n\ndef calcJd(w):\n    P = calcP(w)\n    print(&quot;loss:&quot;, calcJ(P))\n    for i in range(m):\n        P[rawtrainy[i]][i] -= 1\n    tt = np.zeros((10,784))\n    for i in range(m):\n        tt += np.dot(P[:,i].reshape((10,1)),trainx[:,i].T.reshape(1,784))\n    #print(trainx[:,1].T.reshape(1,784), P[:,1].reshape((10,1)), np.dot(P[:,1].reshape((10,1)),trainx[:,1].T.reshape(1,784)))\n    return tt/(m)\n\n\nlearning_rate = 0.000005\n\n\ndef gradient_descent(t):\n    tt = t - learning_rate * calcJd(t)\n    # print(tt)\n    # print(t0,t1,calcJ(tt0,tt1))\n    return tt\n\n\n\nP = calcPtest(t)\ntcnt = 0\nfor i in range(n):\n    if np.argmax(P[:,i]) == rawtesty[i]:\n        tcnt = tcnt + 1\nprint(&quot;acc:&quot;, tcnt/n)\n\nfor i in range(10000):\n    #print(t)\n    t = gradient_descent(t)\n    if i % 10 == 0:\n        P = calcPtest(t)\n        tcnt = 0\n        for j in range(n):\n            if np.argmax(P[:,j]) == rawtesty[j]:\n                tcnt = tcnt + 1\n        print(&quot;Epoch&quot;,i,&quot;// acc:&quot;, tcnt/n)\n\n</span></code></pre>\n<p>为了把训练结果表示的更清楚一些, 我每10次迭代都会用测试集测试一下正确率.</p>\n<p>调试也调了挺长时间的, 包括调代码的错误, 调学习率之类的.</p>\n<p>不过出人意料的是, 这玩意竟然只需要迭代一次就能达到67%的正确率. 当时刚跑出来正确结果我都不信, 因为调了半天, 我都觉得我这辈子调不出来了. 然后我在训练之前用随机的参数矩阵测试了一下正确率, 果然是10%左右, 就说明我的测试正确率的代码没问题, 他的正确率确实只用了一次迭代就达到了67%.</p>\n<p>迭代20次时, 正确率已经达到了86%左右, 之后正确率上升的就慢慢缓慢了.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-15-3.png\" alt=\"2021-07-15-3\"></p>\n<p>这么简单的方法能达到这么高的正确率是我没想到的, 不愧是机器学习的Hello World.</p>\n<p>这个方法其实和一个全连接的神经网络是一样的, 只是我直接写成了矩阵形式.</p>\n<p>不怎么参考别人, 自己推公式+自己写程序最后出结果挺快乐的, 感觉自己什么都会, 有点飘了.</p>\n<p>下班了, 明天还要去讲课, 这几天好累. 感觉后面应该要学点东西了, 思而不学则殆.</p>\n<p><img src=\"/img/softmax-mnist.assets/4RBM1%7BTIEEXFDV72%5B2GK4FI.jpg\" alt=\"img\"></p>\n","2cb72e2c094e207ddbb69e1b700e35e1c712e4b8":"<p>条件变量, 哲学家吃饭</p>\n<h2 id=\"条件变量\"><a href=\"#条件变量\" class=\"headerlink\" title=\"条件变量\"></a>条件变量</h2>\n<p>条件变量用在一个线程需要一直等待一个条件满足后在执行.</p>\n<p>比如下面这段代码就是等待count==n满足之后再继续执行.</p>\n<p>即使用上了互斥锁, 不用自旋锁, 也是有个类似自旋的过程的:</p>\n<!--more-->\n<pre><code><span class=\"hl-source hl-c++\">retry<span class=\"hl-keyword hl-operator hl-ternary hl-c\">:</span>\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>lk</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>count <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> n<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n      <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>lk</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n      <span class=\"hl-keyword hl-control hl-c++\">goto</span> retry<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>\n<p>只不过, 这个自旋没有自旋锁那么暴力, 他是更大层面上的自旋:</p>\n<ul>\n<li>自旋锁是在上锁的时候, 也就是mutex_lock的时候去自旋, 尝试上锁, 无法上锁就继续自旋.</li>\n<li>这个自旋是上锁之后判断条件是否满足, 如果没有条件不能满足就解锁.</li>\n<li>这个自旋是有条件的, 注意因为mutex他是维护了一个waiter序列, lock失败后这个线程会阻塞, 只有当有人unlock了之后, 这个线程被唤醒了, 才会去尝试这个大自旋.</li>\n</ul>\n<p>看起来, 这个锁尝试自旋的次数并不是很多, 因为只有有人unlock之后他才会自旋.</p>\n<p>但是, 一个mutex可能管理了很多个变量, 这个锁可能会非常大, 很有可能一个线程lock了之后更改了一些毫不相干的变量, 然后unlock, 就会把这个线程给唤醒, 造成资源浪费.</p>\n<p>这样就有条件变量cond, 条件变量必须和mutex一起用, 并且一个cond只能对应一个mutex.</p>\n<p>他支持三个api:</p>\n<ul>\n<li>wait(cv, mutex), 标记为因为cv而阻塞.</li>\n<li>signal/notify(cv), 唤醒一个因为cv而阻塞的线程.</li>\n<li>broadcast/notify_all(cv), 换新所有因为cv而阻塞的线程.</li>\n</ul>\n<p>正常的使用方法:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Thread 1\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>cond<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">wait</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> 这里, assert(cond)\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> Other Threads\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span> 这里, 做了一些可能会影响到cond的操作\n</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">broadcast</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>\n<p>这是个模版, 我之前在用golang写Raft的时候也经常使用这个模版.</p>\n<p>下面来具体分析了一下这地方干了啥:</p>\n<p>重点在wait, wait我的理解是完成了下面这三个操作:</p>\n<ol>\n<li>mutex.unlock()</li>\n<li>让这个线程阻塞, 等待被唤醒.</li>\n<li>被唤醒后, mutex.lock()</li>\n</ol>\n<p>考虑broadcast的语义, 它会让所有卡在第二步的线程全部启动起来, 这样所有的线程就都会去运行第三步, 争抢mutex. 但是这时候一定只有一个线程能够抢到这个锁. 但是这时候就进入到mutex的语义了: 其他线程虽然没抢到mutex, 又进入了阻塞状态, 但是当mutex被释放后, 他们会因为mutex被唤醒, 从而得到lock, 这一步的唤醒跟broadcast其实是没关系的, 只是因为mutex被释放了.</p>\n<p>考虑到第二步这个操作, 如果另一个锁mutex2已经被其他线程lock上了, 那实际上第二步跟mutex2.lock的效果是一样的, 如果把第二步换成这个, 那么mutex2.unlock就相当于broadcast唤醒了所有线程. 但是感觉还是会遇到很多问题, 有时间仔细想想这个跟条件变量的关系吧.</p>\n<p>信号量啥的感觉没啥讲的, 就不写了.</p>\n<h2 id=\"哲学家吃饭问题\"><a href=\"#哲学家吃饭问题\" class=\"headerlink\" title=\"哲学家吃饭问题\"></a>哲学家吃饭问题</h2>\n<p>哲学家吃饭这个经典问题, jyy主张大道至简, 一切都用一个大锁来锁住所有人, 让所有人拿起和放下叉子的过程都是串行的, 然后用条件变量:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-keyword hl-control hl-c++\">while</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">wait</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv<span class=\"hl-punctuation hl-separator hl-c++\">,</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\navail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_lock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\navail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> avail<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rhs<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">broadcast</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>cv</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mutex_unlock</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>mutex</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></code></pre>\n<p>并且jyy主张不要花时间去考虑其他的比较tricky的方法, 他课上也确实没讲.</p>\n<p>不过我还是觉得有些方法还是有一些很值得学习的思想在里面的: 比如我在写6.824的时候就意识到, 如果几个线程都需要获取同样的多个锁, 比如几个线程都需要获取锁mutex1和mutex2, 那这些线程在lock这些锁的时候一定要以一个相同的顺序去lock. 比如要么都是先mutex1.lock再mutex2.lock, 要么都是先mutex2.lock再mutex1.lock, 否则这两个线程一定会死锁.</p>\n<p>然后我看到了哲学家吃饭问题的这样的解法: 让奇数编号的哲学家都先拿右手的叉子再拿左手的叉子, 偶数编号的相反. 我总感觉这两个的思想是一样的, 就是那种规定了每个锁的优先级, 所有人在加锁的时候都需要按照相同的优先级顺序去加锁.</p>\n<p>进一步的, 我深入思考了这个想法, 发现用操作系统那个资源依赖图模型可以说出一些道理: 如果绘制一张图, 图里的每个节点都是一把锁, 那么每个线程的加锁顺序可以用一个这个图上的一组有向边表示. 比如, 两个线程以不同的顺序去加两把锁, 那么这个图就可以表示为:</p>\n<p><img src=\"/img/sync/IMG_E74CF893BDD5-1.jpeg\" alt=\"IMG_E74CF893BDD5-1.jpeg\"></p>\n<p>我认为, 死锁可能发生的充分必要条件是这个图上存在一个环. 比如, 考虑下面的这样一个图:</p>\n<p><img src=\"/img/sync/IMG_4AAC5F1576FF-1.jpeg\" alt=\"IMG_4AAC5F1576FF-1.jpeg\"></p>\n<p>三个线程分别按顺序锁住:</p>\n<ol>\n<li>(红色) 1 2 3 4</li>\n<li>(棕色) 5 4 6 7</li>\n<li>(紫色) 8 7 9 2</li>\n</ol>\n<p>这样, 当所有的线程都锁住了他们锁住的第三个锁时, 没有任何一个线程可以锁住最后一个锁, 就死锁了.</p>\n<p>如果在哲学家问题中, 让每个人先拿左手边的再拿右手边的, 那这五个锁就会形成一个环. 而我们要做的, 就是控制一些锁加锁的顺序, 让他们永远不可能成环. 比如, 在那个奇偶数的哲学家问题解决方法中, 如果把每个人右手边的叉子标号为这个人的编号, 那么这五个叉子的加锁顺序是这样的:</p>\n<p><img src=\"/img/sync/IMG_97DB4ED2C16F-1.jpeg\" alt=\"IMG_97DB4ED2C16F-1.jpeg\"></p>\n<p>这是一个有向无环图, 在上面无论如何找不到一条成环的路径.</p>\n<p>实际上, 这相当于给每个锁设置了一个偏序关系, 这个偏序至少要保证一个线程需要的所有锁都可以互相比较. 这样, 当一个线程需要很多锁时, 就按照这几个锁的偏序关系去加锁, 这样得到的一定是一个有向无环图.</p>\n<p>更一般的做法是, 我可以直接给所有的锁一个全序关系, 这样无论任何线程需要多少锁, 只需要按照这个全序关系的顺序去加锁就行. 比如在哲学家吃饭问题中, 完全可以给每个叉子编号之后, 让每个人先拿编号大的再拿编号小的, 这就构造了一个全序关系. 也就是除了第5个哲学家先拿左手再拿右手, 其他的都先拿右手再拿左手, 这样就可以避免死锁.</p>\n","79bfe6c78c4a4c6dc20bc16c325f2f8e53f809b0":"<h1 id=\"LNOI2014-LCA\"><a href=\"#LNOI2014-LCA\" class=\"headerlink\" title=\"LNOI2014 LCA\"></a>LNOI2014 LCA</h1>\n<p><strong>人生中第一道黑题</strong></p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>给出一个n个节点的有根树（编号为0到n-1，根节点为0）。一个点的深度定义为这个节点到根的距离+1。 设<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.407ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2390 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-1-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-1-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-1-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-1-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-1-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(986,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-1-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1489,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-1-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1767,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2112,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-1-TEX-N-5D\"></use></g></g></g></svg>表示点<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g></g></g></svg>的深度，<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.436ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4170.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-3-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-3-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43F\" xlink:href=\"#MJX-3-TEX-I-1D43F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(681,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-3-TEX-I-1D436\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1441,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2191,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2580,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2925,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3369.7,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3781.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg>表示<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g></g></svg>与<svg style=\"vertical-align: -0.462ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.932ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 412 865\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-5-TEX-I-1D457\"></use></g></g></g></svg>的最近公共祖先。 有q次询问，每次询问给出<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.674ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 298 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-6-TEX-I-1D459\"></use></g></g></g></svg> <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.02ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 451 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45F\" xlink:href=\"#MJX-7-TEX-I-1D45F\"></use></g></g></g></svg> <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D467\" xlink:href=\"#MJX-8-TEX-I-1D467\"></use></g></g></g></svg>，求<svg style=\"vertical-align: -0.866ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.376ex\" height=\"2.563ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9448.2 1132.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-9-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-9-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-9-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-9-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-9-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-9-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-9-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path><path id=\"MJX-9-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-9-TEX-SO-2211\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1089,-285.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-9-TEX-I-1D459\"></use></g><g data-mml-node=\"mo\" transform=\"translate(298,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1076,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2199,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-9-TEX-I-1D45F\"></use></g></g></g><g data-mml-node=\"mi\" transform=\"translate(3179.5,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-9-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3699.5,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-9-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4165.5,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-9-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4668.5,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4946.5,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-9-TEX-I-1D43F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5627.5,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-9-TEX-I-1D436\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6387.5,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-9-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7137.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-9-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7526.5,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7871.5,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8316.2,0)\"><use data-c=\"1D467\" xlink:href=\"#MJX-9-TEX-I-1D467\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8781.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-9-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9170.2,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg></p>\n<!--more-->\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<p>输入格式：</p>\n<p>第一行2个整数n q。 接下来n-1行，分别表示点1到点n-1的父节点编号。 接下来q行，每行3个整数l r z。</p>\n<p>输出格式：</p>\n<p>输出q行，每行表示一个询问的答案。每个答案对201314取模输出</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<p>输入样例#1：</p>\n<pre><code><span class=\"hl-text hl-plain\">5 2\n0\n0\n1\n1\n1 4 3\n1 4 2\n</span></code></pre>\n<p>输出样例#1：</p>\n<pre><code><span class=\"hl-text hl-plain\">8\n5\n</span></code></pre>\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2>\n<p>共5组数据，n与q的规模分别为10000,20000,30000,40000,50000。</p>\n<hr>\n<p>显然暴力的复杂度是承受不了的,上来dfs肯定是不可行的.</p>\n<p>首先考虑两个点的lca的深度的另外一中计算方法:</p>\n<pre><code><span class=\"hl-text hl-plain\">利用树剖+线段树把一个点到根节点的链上点权全部+1,深度即为另一点到根节点的链的点权之和\n</span></code></pre>\n<p>这个方法在直接求lca时显然是大材小用,200+行的代码只是为了求个lca的深度显然得不偿失.</p>\n<p>但是这种方法在处理本题是很有用的方法,因为这种方法可以很方便的实现对区间求lca深度之和的操作.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/15317.png\" alt=\"\"></p>\n<p>如图,假如要求(红色点,橙色点)和棕色点的lca的深度之和,可以这样操作:</p>\n<p>(<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.954ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4841.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-10-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-10-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-10-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-10-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-10-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-10-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-10-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-10-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-10-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3518,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-10-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3962.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-10-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4452.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.793ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4770.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-11-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-11-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-11-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-11-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-11-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-11-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-11-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1448,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-11-TEX-I-1D462\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2020,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-11-TEX-I-1D452\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3447,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-11-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3891.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-11-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4381.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>分别为树剖中链增加,链查询函数)</p>\n<pre><code><span class=\"hl-text hl-plain\">1.poadd(R,0);\n//这时poque(B,0)即为棕色点与红色点LCA的深度,即为2\n2.poadd(Y,0);\n3.poque(B,0);即为所求,即为3.\n</span></code></pre>\n<p>但是此时如果针对每一个操作都在线计算的话,复杂度仍不能达到要求.</p>\n<p>这时注意到如果按顺序进行<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.463ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4624.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-12-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-12-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-12-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-12-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-12-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-12-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-12-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-12-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-12-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-12-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-12-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-12-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-12-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3291,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-12-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3735.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4235.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></svg>的操作,所有区间所需的数据都已经计算出来,即考虑差分.</p>\n<p>采用离线算法,将所有查询全部读入后,在<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.571ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2020.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-13-TEX-I-1D459\"></use></g><g data-mml-node=\"mo\" transform=\"translate(520.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1520.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g></svg>和<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.02ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 451 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45F\" xlink:href=\"#MJX-14-TEX-I-1D45F\"></use></g></g></g></svg>处分别打上起始标记和结束标记,然后按顺序执行<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.463ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4624.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-15-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-15-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-15-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-15-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-15-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-15-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-15-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-15-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-15-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-15-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-15-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3291,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-15-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3735.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-15-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4235.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg>的操作,若发现有标记,则在对应该查询的数组存此时<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.574ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4673.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-16-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-16-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-16-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path><path id=\"MJX-16-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-16-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-16-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-16-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-16-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1448,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-16-TEX-I-1D462\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2020,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875,0)\"><use data-c=\"1D467\" xlink:href=\"#MJX-16-TEX-I-1D467\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3340,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-16-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3784.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-16-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4284.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g></g></g></svg>的值,为了差分,起始和结束可以分开记录.</p>\n<p>这是差分部分的代码,利用vector来给每一个点记录标记,用st[i],ed[i]表示第i次查询的差分起始数据和差分终止数据.</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poadd</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tst<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></code></pre>\n<p>最后输出每一次查询ed[i]-st[i]即可.</p>\n<p>本来一中午一个多小时就写完了代码,但是因为我太弱了,复制了lzydalao少了一个=的读入优化,三天没改出来...(还是我太弱了)</p>\n<p>知道明明输出q行却一直提示Too Many or Too few Lines有多么抑郁吗,特别是在各种环境测试都没错的时候.</p>\n<p><s><strong>究其根本原因还是我太弱了</strong></s></p>\n<p>完整代码:</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lson</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>o <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">rson</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>o <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">|</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">mid</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">50005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">m</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">201314</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>R<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Edge</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Segtree</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> val<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lazy<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">4</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> y<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">pushdown</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>mid<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">update</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ql</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">qr</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span>l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">lazy</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>r<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>l<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">pushdown</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>o</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>rson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>lson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>rson<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">query</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ql</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">qr</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">l</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">r</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">o</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>qr <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ql <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> l<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> tree<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>o<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">val</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">pushdown</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>o</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-punctuation hl-separator hl-c++\">,</span>lson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ql<span class=\"hl-punctuation hl-separator hl-c++\">,</span>qr<span class=\"hl-punctuation hl-separator hl-c++\">,</span>mid<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>r<span class=\"hl-punctuation hl-separator hl-c++\">,</span>rson</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs1</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tsiz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> to<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tson<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> to<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tfa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> x<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tsiz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>siz<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs2</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">ttop</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; x &lt;&lt; endl;\n</span>\tl<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ttop<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ttop<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ttop</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> son<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>to</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">mswap</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> t <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\ta <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> t<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">poadd</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">update</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">poque</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">y</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ans<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> fa<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>top<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">mswap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>y</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">query</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>y<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>l<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">%=</span> m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">s</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\ts<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>s<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span>s<span class=\"hl-keyword hl-operator hl-c\">*</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">fm</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> s <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>s<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>s<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>m<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> s<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>freopen(&quot;4211.in&quot;,&quot;r&quot;,stdin);\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">siz<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">siz</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">top<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">top</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">son<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">son</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">l</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">dep</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fa<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c++\">sizeof</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span><span class=\"hl-meta hl-group hl-c++\">fa</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tR <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> op<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">op</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">read</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tstb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>op<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tedb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs1</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">R</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;1!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs2</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">R<span class=\"hl-punctuation hl-separator hl-c++\">,</span>R</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;2!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poadd</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tst<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>stb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">poque</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>z<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>edb<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fm</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">ed<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>st<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; poque(0,4);\n</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>\n<p>2018-3-9 0:31:37 AC</p>\n<p>2018-3-9 1:20:30</p>\n<p>我要猝死了.</p>\n","ea5a6188e28bd6266c7122ad80c43279508c3d8f":"<p><s>一年半前为了省选学网络流之后第一次做网络流的题</s></p>\n<p>首先是自己改造后的Dinic:</p>\n<!--more-->\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">10005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXM</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">100005</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">addedge</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXM <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cap<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\nqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">read</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span><span class=\"hl-variable hl-parameter hl-c++\">ss</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tss<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-storage hl-type hl-c\">char</span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span>ch<span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>9<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span><span class=\"hl-constant hl-numeric hl-c++\">10</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ss<span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span>ch<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-string hl-quoted hl-single hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&#39;</span>0<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&#39;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ch<span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">getchar</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> S <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tw<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tu <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tv <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> tw<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tw</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">tv<span class=\"hl-punctuation hl-separator hl-c++\">,</span>tu<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<p>就用网络流24题当例题了</p>\n<h1 id=\"最大流\"><a href=\"#最大流\" class=\"headerlink\" title=\"最大流\"></a>最大流</h1>\n<h2 id=\"P2766-最长不下降子序列问题\"><a href=\"#P2766-最长不下降子序列问题\" class=\"headerlink\" title=\"P2766 最长不下降子序列问题\"></a>P2766 最长不下降子序列问题</h2>\n<p>第一问直接n^2就行,dp后的数组记为f,其中f[i]代表以第i个数结尾的最长不下降子序列的长度,答案记为ans1.\na[i]代表第i个数.</p>\n<p>第二问可以给对于每个 <svg style=\"vertical-align: -0.462ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.49ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 2868.6 865\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-1-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-1-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(689.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3C\" xlink:href=\"#MJX-1-TEX-N-3C\"></use></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(2523.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g></g></svg> ,如果 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.399ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5038.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-2-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-2-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-2-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-2-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-2-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-2-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1219,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-2-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1774.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3C\" xlink:href=\"#MJX-2-TEX-N-3C\"></use></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(3608.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4137.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-2-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4415.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4760.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-2-TEX-N-5D\"></use></g></g></g></svg> 并且 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.631ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6025 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-3-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-3-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-3-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-3-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1173,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-3-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1728.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2784.6,0)\"><use data-c=\"1D453\" xlink:href=\"#MJX-3-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3334.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-3-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3612.6,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4024.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-3-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4524.8,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-3-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5525,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g></g></svg> ,就意味着选完第j个数后,再选第i个数,可以选到一个最长的不下降子序列.</p>\n<p>因为最后是要记录最长不下降子序列的个数,所以每个最长不下降子序列对答案的贡献均为1,所以可以从j到i连一条容量为1的边.\n因为所有 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.847ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3468.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-4-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-4-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-4-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-4-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-4-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-4-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-4-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1357,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-4-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1912.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-4-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2968.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g></g></g></svg> 的点a都可作为起点,所有 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.237ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4966.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-5-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-5-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-5-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-5-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-5-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-5-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-5-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-5-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-5-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1257,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-5-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1812.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-5-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2868.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-5-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3397.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-5-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3997.6,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-5-TEX-I-1D460\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4466.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg> 的点b都可作为终点,所以可以用超级源向所有满足条件的点a连一条边,所有满足条件的点b向超级汇连一条边.同理,这些边容量均为1.</p>\n<p>这样对整个图跑一个最大流即可得到答案.但是为了保证每个数只被用一次,需要利用拆点限制每个点的流量为1.即将一个点拆为两个点,并且这两个点之间仅有一条容量为1的边.</p>\n<p>第三问只是取消了<svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-6-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g></g></g></g></g></svg> 和 <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-7-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-7-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-7-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 的使用次数限制,所以只要把限制这两个点使用次数的边的容量全部改为INF即可,即超级源向 <svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-8-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></g></g></svg> 的边, <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-9-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-9-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 到超级汇的边, <svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></g></g></svg> 和 <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 分别拆成的两点之间的边这四条边的容量限制改为INF后再跑最大流即可.</p>\n<p>超级汇有一种整合所有信息的感觉,将所有和答案直接相关的节点流量信息全部汇总起来.</p>\n<p>对于点流量的限定,一般用拆点的方法.拆点可以用*2-1和*2防止撞车.</p>\n<p>图可以表示元素之间的关系,这题元素之间的关系十分明显(走过一个节点下一个可以走哪些节点),考虑建图.</p>\n<p>第二问是一种\"并列\"的问题,取出的几个子序列地位相同,且均满足相同的条件.网络流解决的也是这种\"并列\"的问题,在图中,每一个节点,每一条路径都是地位相同的.</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdlib<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">550</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">Edge</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nEdge e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nEdge e2<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nqueue <span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> u<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>v<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>v<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ecnt <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\tqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q2<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">swap</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">q<span class=\"hl-punctuation hl-separator hl-c++\">,</span>q2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; S &lt;&lt; &quot;dd&quot; &lt;&lt;q.front()&lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; nown &lt;&lt; &quot;}&quot; &lt;&lt; endl;\n</span>\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; e[i].to &lt;&lt; &quot;gs&quot; &lt;&lt; dep[e[i].to]&lt;&lt;endl;\n</span>\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> flow <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;!&quot; &lt;&lt; endl;\n</span>\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> flow <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;?&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> flow<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">fdp</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> maxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\tmaxx <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\tf<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> maxx <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> ans<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">fdp</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tS <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>T <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>N<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ea<span class=\"hl-punctuation hl-separator hl-c++\">,</span>eb<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ec<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ed<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tec <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\ted <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\tea <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> ans1<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\teb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> i<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> f<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>j<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-keyword hl-operator hl-c\">*</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e2<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ans1 <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ea <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> eb <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ec <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span> <span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> ed <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:1&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e2<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> e</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:2&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ea <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ea <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ea<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>eb <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> eb <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>eb<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ec <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ec <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ec<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>ed <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> ed <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> ecnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ed<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> INF<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>cout &lt;&lt; &quot;:3&quot; &lt;&lt; endl;\n</span>\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>N <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>\n<h1 id=\"最小割\"><a href=\"#最小割\" class=\"headerlink\" title=\"最小割\"></a>最小割</h1>\n<h2 id=\"P2774-方格取数问题\"><a href=\"#P2774-方格取数问题\" class=\"headerlink\" title=\"P2774 方格取数问题\"></a>P2774 方格取数问题</h2>\n<p>这道题也是一中\"并列\"的问题,要所有元素地位均相同,需要从中挑选出几个.</p>\n<p>\"割\"的概念是,让这个图的原点无法到达汇点,意味着关系的断绝.</p>\n<p>将这个方格棋盘染色后,就是让黑点和其相邻的白点不能同时出现.</p>\n<p>只要让建立的图反映出,当黑点和相邻的白点同时出现时,源点和汇点就会联通,这样让图不连通就意味着没有黑点和相邻白点同时出现.</p>\n<p>为了让删去的点值最小,要把点值反映到边权上,才能利用\"最小\"割求解</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>queue<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">2147483647</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">10005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXM</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">100005</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-storage hl-type hl-c++\">struct</span> <span class=\"hl-entity hl-name hl-struct hl-c++\">addedge</span></span><span class=\"hl-meta hl-struct hl-c++\">\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>flow<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cap<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ne<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-struct hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXM <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> ecnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">init</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> head</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">addedge</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">u</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">v</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> v<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cap<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>ecnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\thead<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>u<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> ecnt<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\nqueue<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> q<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">bfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">dep<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> dep</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>S<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">empty</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> nown <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> q<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">front</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> head<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tdep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>nown<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tq<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>T<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fl</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> T<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> fl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-keyword hl-operator hl-c\">&amp;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> cur<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span> i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">ne</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">to</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> dep<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-storage hl-type hl-c\">int</span> f <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">fl<span class=\"hl-punctuation hl-separator hl-c++\">,</span>e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">cap</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> e<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>f <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\te<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">^</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">flow</span> <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">-=</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">return</span> f<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">Dinic</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-storage hl-type hl-c\">int</span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">bfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memcpy</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">cur<span class=\"hl-punctuation hl-separator hl-c++\">,</span>head<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> cur</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> d <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> ans <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> d<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> ans<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">105</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">init</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> M <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tS <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-keyword hl-operator hl-c\">*</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\tT <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> N<span class=\"hl-keyword hl-operator hl-c\">*</span>M<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-storage hl-type hl-c\">int</span> sum <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\tcin <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\tsum <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">+=</span> a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t<span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t<span class=\"hl-storage hl-type hl-c\">int</span> num <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-c\">*</span>N <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>j<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">%</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">S<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>S<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> M<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> N<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t\t<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n\t\t\t\t<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>INF</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">num<span class=\"hl-punctuation hl-separator hl-c++\">,</span>T<span class=\"hl-punctuation hl-separator hl-c++\">,</span>a<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t\t<span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">addedge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">T<span class=\"hl-punctuation hl-separator hl-c++\">,</span>num<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\t<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n\tcout <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> sum <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">Dinic</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&lt;&lt;</span> endl<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n\t<span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n\n</span></code></pre>\n<p>To be continued...</p>\n","000ab2af1cd37ae56c0e9ab0c59e71481c2ee55b":"<h1 id=\"基础算法\"><a href=\"#基础算法\" class=\"headerlink\" title=\"基础算法\"></a>基础算法</h1>\n<h2 id=\"贪心\"><a href=\"#贪心\" class=\"headerlink\" title=\"贪心\"></a>贪心</h2>\n<p>根据贪心的数学背景我们在做贪心题目的时候一般有两种策略：\n1.把一个问题划分成很多子问题，对于每个子问题直接求最优解，然后合成一个最优解；\n2.对于当前局面，搜索所有可能的“临近局面”，选择最优的局面进行转移</p>\n<!--more-->\n<p><strong>数据范围较大时，一般使用贪心</strong></p>\n<p><strong>贪心的复杂度一般很小</strong></p>\n<h3 id=\"eg1\"><a href=\"#eg1\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rd7NQ.png\" alt=\"\"></p>\n<p>按单价排序即可</p>\n<h3 id=\"eg2\"><a href=\"#eg2\" class=\"headerlink\" title=\"eg2.\"></a>eg2.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rw1gI.png\" alt=\"9rw1gI.png\">(<a href=\"https://imgchr.com/i/9rw1gI\">https://imgchr.com/i/9rw1gI</a>)</p>\n<p>数学上的mod指如果mod为负数,不断加模数直到为正数.</p>\n<p>即 '5 mod 6 = 5'</p>\n<h3 id=\"eg3-4\"><a href=\"#eg3-4\" class=\"headerlink\" title=\"eg3-4\"></a>eg3-4</h3>\n<p>紫书区间问题</p>\n<h3 id=\"eg5\"><a href=\"#eg5\" class=\"headerlink\" title=\"eg5.\"></a>eg5.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdIHS.png\" alt=\"\"><strong>非矩形贪心问题一定要转化成线段问题</strong></p>\n<hr>\n<ul>\n<li><strong>雷达放在x轴上一定比放在x轴下方更优</strong></li>\n</ul>\n<h4 id=\"错误思路\"><a href=\"#错误思路\" class=\"headerlink\" title=\"错误思路\"></a>错误思路</h4>\n<pre><code><span class=\"hl-text hl-plain\">从左到右考虑所有岛,在能探测到一个岛的前提下,尽可能的向右放\n</span></code></pre>\n<p>由于圆的特性,会出现以下反例</p>\n<p><img src=\"1-1-1.jpg\" alt=\"\"></p>\n<h4 id=\"正确思路\"><a href=\"#正确思路\" class=\"headerlink\" title=\"正确思路\"></a>正确思路</h4>\n<pre><code><span class=\"hl-text hl-plain\">考虑到圆的复杂,应转化为线段贪心问题.\n</span></code></pre>\n<p><strong>改变研究对象</strong></p>\n<p>考虑研究每一个岛屿.</p>\n<p>由于雷达的半径固定,所以对于每一个与x轴距离小于半径的岛屿,都能在x轴上找到一个区间,使这个区间里所有的雷达都能探测到这个岛屿.</p>\n<p>问题转化为区间选点问题.</p>\n<h3 id=\"eg6\"><a href=\"#eg6\" class=\"headerlink\" title=\"eg6.\"></a>eg6.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rd4nf.png\" alt=\"\"></p>\n<p><strong>进制问题</strong></p>\n<p>因为1!+2!+...+(n-1)! &lt; n!</p>\n<p>所以如果可以表示,则一定可以通过每次取最大的不超过n-已表示的数的数的阶乘得到</p>\n<p>[一个我不知道为什么的结论]</p>\n<h3 id=\"eg7\"><a href=\"#eg7\" class=\"headerlink\" title=\"eg7.\"></a>eg7.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdq9s.png\" alt=\"\"></p>\n<p>字典序最大即越靠前越大</p>\n<p>当K&lt;= N-1时,把第N个数换到最前</p>\n<p>K&gt;N-1时类似.</p>\n<h3 id=\"eg8\"><a href=\"#eg8\" class=\"headerlink\" title=\"eg8.\"></a>eg8.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdHhj.png\" alt=\"\"></p>\n<p>过于复杂先挖个坑</p>\n<h2 id=\"贪心的骗分策略\"><a href=\"#贪心的骗分策略\" class=\"headerlink\" title=\"贪心的骗分策略\"></a>贪心的骗分策略</h2>\n<p>1.贪心算法与随机化算法的结合（例如模拟退火）</p>\n<ul>\n<li>在决策时有概率接受比当前情况差的方向</li>\n<li>在搜索到结果时以一定概率跳出当前解，重新开始贪心</li>\n<li>在贪心开始的时候，利用随机化选择多个起点开始贪心，取其最小值</li>\n</ul>\n<pre><code><span class=\"hl-text hl-plain\">可以在最外层循环1000次随机起点来贪心,在数据范围小时极为有效\n</span></code></pre>\n<h2 id=\"分治\"><a href=\"#分治\" class=\"headerlink\" title=\"分治\"></a>分治</h2>\n<h3 id=\"分治的用处\"><a href=\"#分治的用处\" class=\"headerlink\" title=\"分治的用处\"></a>分治的用处</h3>\n<p>分治算法在OI中的运用主要在两个方面：</p>\n<ul>\n<li>基于二分查找、三分查找的运用</li>\n<li>将题目划分为更细小的子问题的运用</li>\n</ul>\n<h3 id=\"二分\"><a href=\"#二分\" class=\"headerlink\" title=\"二分\"></a>二分</h3>\n<ul>\n<li>本质:在一个范围里确定一个分界,使分界的左边满足一个条件,右边满足一个条件</li>\n<li>适用范围:范围满足单调性</li>\n</ul>\n<p>常见使用情景:</p>\n<ul>\n<li>简单的二分查找</li>\n<li>在一个单调函数里寻找可行最值</li>\n<li>最值的最值</li>\n</ul>\n<h4 id=\"首先我们需要一个好的模板\"><a href=\"#首先我们需要一个好的模板\" class=\"headerlink\" title=\"首先我们需要一个好的模板\"></a>首先我们需要一个好的模板</h4>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> r<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n<span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n  <span class=\"hl-storage hl-type hl-c\">int</span> mid <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>l <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> r <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&gt;&gt;</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">mid</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n  <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    r <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n    l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> mid<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n  <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n<span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">judge</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">l</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>l <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> r<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>by Chtholly\n</span></span></code></pre>\n<h4 id=\"eg1-1\"><a href=\"#eg1-1\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdq9s.png\" alt=\"\"></p>\n<ul>\n<li><strong>借教室的原则是先到先得</strong> 这句话点明修改的订单编号满足单调性.即如果前面的订单都满足不了,后面的订单一定不能满足.如果后面的订单可以满足,前面的订单一定能满足.</li>\n<li><strong>主题框架</strong> 既然满足单调性,不难想到二分.二分出能满足的订单与不能满足的订单的分界即可.</li>\n<li><strong>数据结构</strong> 显然这道题多次进行<strong>区间修改,单点查询</strong> 的操作,考虑用差分来维护.</li>\n</ul>\n<h4 id=\"eg2-1\"><a href=\"#eg2-1\" class=\"headerlink\" title=\"eg2.\"></a>eg2.</h4>\n<pre><code><span class=\"hl-text hl-plain\">有一个序列{Ai}以及m个区间[li..ri]\n你现在可以选择k个区间，对于每个被选中的区间[l..r]，Al~Ar的数都会增加delta\n求在所有方案中a中最小值最大为多少\n</span></code></pre>\n<ul>\n<li>二分 + 一些神奇的算法</li>\n<li>这个神奇的算法能计算出能否选中k个区间使任意一个点仍保持在k以下</li>\n<li>二分出k的最大值即可</li>\n<li>具体使什么神奇的算法我好像忘了但好像是贪心</li>\n</ul>\n<h4 id=\"eg3\"><a href=\"#eg3\" class=\"headerlink\" title=\"eg3.\"></a>eg3.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdHhj.png\" alt=\"\">过于复杂先开个坑</p>\n<h3 id=\"三分\"><a href=\"#三分\" class=\"headerlink\" title=\"三分\"></a>三分</h3>\n<ul>\n<li>使用范围:求一个单峰函数的最值</li>\n</ul>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdxBT.png\" alt=\"\"></p>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdXj0.png\" alt=\"9rdXj0.png\"></p>\n<p>ppt好像有错误不确定就不写了</p>\n<h3 id=\"归并类分治\"><a href=\"#归并类分治\" class=\"headerlink\" title=\"归并类分治\"></a>归并类分治</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdOcq.png\" alt=\"\"></p>\n<h3 id=\"分块\"><a href=\"#分块\" class=\"headerlink\" title=\"分块!!!!!\"></a>分块!!!!!</h3>\n<p><strong>类型</strong></p>\n<ul>\n<li>给出一个长度为n的数列，以及m个操作，支持区间加法，单点查询</li>\n<li>给出一个长为n的数列以及m个操作，支持区间加法，并询问区间内小于等于某个数x的元素个数</li>\n<li>给出一个长为n的数列以及m个操作，支持区间开方，区间求和</li>\n</ul>\n<h4 id=\"分块-1\"><a href=\"#分块-1\" class=\"headerlink\" title=\"分块\"></a>分块</h4>\n<p>分块是线段树/树状数组的一个替代品.</p>\n<p>给定一个区间,分为[sqrt(N)]块,每一块有[sqrt(N)]个元素.</p>\n<p>剩余的不足[sqrt(N)]个元素单独暴力处理.</p>\n<p>[]为向下取整</p>\n<h4 id=\"区间加法-单点查询\"><a href=\"#区间加法-单点查询\" class=\"headerlink\" title=\"区间加法,单点查询\"></a>区间加法,单点查询</h4>\n<p><strong>类lazy标记</strong></p>\n<p>每一块都有一个lazy标记.</p>\n<p>加法区间内的整块加法,只需在加lazy标记上加.</p>\n<p>查询时加上该块的标记即可.</p>\n<p>不在整块内的?暴力啊啊啊啊!</p>\n<h4 id=\"区间加法-查询小于x的个数\"><a href=\"#区间加法-查询小于x的个数\" class=\"headerlink\" title=\"区间加法,查询小于x的个数\"></a>区间加法,查询小于x的个数</h4>\n<p>每一块排序+二分 不解释</p>\n<p>不在整块内的同样暴力啊啊啊</p>\n<h4 id=\"区间开方-区间求和\"><a href=\"#区间开方-区间求和\" class=\"headerlink\" title=\"区间开方,区间求和\"></a>区间开方,区间求和</h4>\n<p>因为是向下取整开方,所以每一数在开方后多次后就会变为1</p>\n<p>然后自己研究吧(狗屎)</p>\n<h4 id=\"eg1-2\"><a href=\"#eg1-2\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdL3n.png\" alt=\"\"></p>\n<p>难点主要在<strong>如何求[l,r]之间不同的元素</strong></p>\n<p>用pre[i]代表上一次出现a[i]这个元素的位置,问题转化为查询[l,r]区间内pre[i] &lt; l的个数.</p>\n<p>O(n)即可完成预处理</p>\n<pre><code><span class=\"hl-text hl-plain\">2018-2-16\n</span></code></pre>\n","ee0bfec260a9d0954f03c4b907722b0f56129599":"<p><img src=\"/img/%E6%97%A0%E5%90%91%E5%9B%BE%E5%89%B2%E7%82%B9%E6%A1%A5-%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/a.jpg\" alt=\"\"></p>\n<h1 id=\"无向图割点-桥-双连通分量\"><a href=\"#无向图割点-桥-双连通分量\" class=\"headerlink\" title=\"无向图割点/桥&amp;双连通分量\"></a>无向图割点/桥&amp;双连通分量</h1>\n<p>无向图图中所有边要么是树边，要么是反向边。</p>\n<h2 id=\"割点的条件\"><a href=\"#割点的条件\" class=\"headerlink\" title=\"割点的条件\"></a>割点的条件</h2>\n<ol>\n<li>当树根有两个及以上子节点时，树根是割点。</li>\n<li>非根节点u为割点，当且仅当该点<strong>存在</strong>一个子节点v，且v及其所有后代都没有反向边连回u的祖先。（连回u不算，此时u是割点）</li>\n</ol>\n<p>用LOW[x]代表x及其后代能连回祖先最小的DFN值，那么上述条件即为u存在一个子节点v，使得LOW[v] <svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-2A7E\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2A7E\" xlink:href=\"#MJX-1-TEX-N-2A7E\"></use></g></g></g></svg> DFN[u].</p>\n<p>另外，若v的后代最早只能连到v自己，那么边(u,v)是桥。</p>\n<!-- more -->\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>fa</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>此时G[x]为桥\n</span>            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>如果是根节点，计算子节点个数\n</span>        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span><span class=\"hl-comment hl-line hl-double-slash hl-c\"><span class=\"hl-punctuation hl-definition hl-comment hl-c\">//</span>根节点并且有两个及以上子节点\n</span>    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<h2 id=\"例题-POJ1523\"><a href=\"#例题-POJ1523\" class=\"headerlink\" title=\"例题 POJ1523\"></a>例题 POJ1523</h2>\n<pre><code><span class=\"hl-text hl-plain\">给你一个联通网路，求出这个网络所有割点的编号，以及如果删除这个割点之后所对应的联通分量数.\n</span></code></pre>\n<p>求出所有割点后枚举要删除的割点然后dfs就行了.</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">1050</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-modifier hl-c++\">const</span> <span class=\"hl-storage hl-type hl-c\">int</span> N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1000</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">bool</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    \n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>fa</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>x <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">dfs</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">c</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> c <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">||</span> vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>c</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-storage hl-type hl-c\">int</span> tt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">inp<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> inp</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> MAXN<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        tt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        \n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">DFN<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> DFN</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> LOW</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">iscut<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> iscut</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>Network #<span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>tt</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">bool</span> tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                tb <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">vis<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-language hl-c\">false</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> vis</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-storage hl-type hl-c\">int</span> cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> j <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> N<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>j<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>inp<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">continue</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>vis<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-language hl-c\">false</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> j <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> i<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                        cnt <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">dfs</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">j<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n                <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>  SPF node <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span> leaves <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span> subnets<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i<span class=\"hl-punctuation hl-separator hl-c++\">,</span>cnt</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>tb<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>  No SPF nodes<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<h2 id=\"双连通分量\"><a href=\"#双连通分量\" class=\"headerlink\" title=\"双连通分量\"></a>双连通分量</h2>\n<h3 id=\"点双连通\"><a href=\"#点双连通\" class=\"headerlink\" title=\"点双连通\"></a>点双连通</h3>\n<p>点双连通(以下三条等价):</p>\n<ol>\n<li>该连通图的任意两条边存在一个包含这两条边的简单环；</li>\n<li>该连通图没有割点；</li>\n<li>对于至少3个点的图，若任意两点有至少两条点不重复路径。</li>\n</ol>\n<p>点双连通分量(BCC)</p>\n<p>点双连通分量构成对所有边集的一个划分。(一个点可能属于多个点双连通分量,而一个边恰好属于一个)</p>\n<p>两个点双连通分量最多只有一个公共点，且必为割点。进一步地，所有点双与割点可抽象为一棵树结构。</p>\n<p>不同BCC可能会有公共点,最多只有一个,即割点.任意割点都至少属于两个BCC.</p>\n<p>去掉BCC中任意一个点,BCC仍联通.</p>\n<p>求每个点双分量的方法类似tarjan,栈存的不是点而是边,因为一个点可能属于多个点双,出栈之后无法将这个点统计到其他点双中,而每个边一定都只属于一个点双.不过这样的点一定是割点,可以用栈存点+对割点特判,</p>\n<h4 id=\"例题-HDU3884\"><a href=\"#例题-HDU3884\" class=\"headerlink\" title=\"例题 HDU3884\"></a>例题 HDU3884</h4>\n<pre><code><span class=\"hl-text hl-plain\">无向图,在最少的点上安装太平井,使删除任意一个点后其他所有点都能到达太平井,并求出最少太平井的安装方案数.\n</span></code></pre>\n<p>点双缩点之后,整个图变成一个无根树.</p>\n<p>考虑每个叶节点,在叶节点对应的点双中一定要有一个太平井,否则当删除对应的割点后,这个点双将无法到达任何太平井.并且,这个太平井不能安装在割点,如果安装在割点,删除割点后,这个点双的其他结点不仅无法到达其他叶节点的太平井,自己的太平井也被删了.</p>\n<p>同时,对于每个非叶节点,是不需要太平井的.因为非叶节点度数大于1,只删除一个节点是无法让这个节点对应的点双的其他节点到达不了任意一个叶点双的.</p>\n<p>缩点后每个节点的度数等于该点双中割点的个数,因为一个割点代表这个点双连接了另一个点双.</p>\n<p>最终太平井的个数就是叶节点的个数,方案数就是每个叶节点对应的点双中非割节点的个数的乘积.</p>\n<p>特别地,如果整个图只有一个点双,那么应该要修建两个太平井,防止删去唯一的太平井.此时方案数为N*(N-1)/2,其中N为节点个数.</p>\n<p>代码:(<a href=\"https://vjudge.net/solution/24521411\">https://vjudge.net/solution/24521411</a>)</p>\n<pre><code><span class=\"hl-source hl-c++\"><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>iostream<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstdio<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>cstring<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>vector<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>set<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>algorithm<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-include hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-include hl-c++\">#include</span> <span class=\"hl-string hl-quoted hl-other hl-lt-gt hl-include hl-c++\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c++\">&lt;</span>stack<span class=\"hl-punctuation hl-definition hl-string hl-end hl-c++\">&gt;</span></span>\n</span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">MAXN</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">50005</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">INF</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-constant hl-numeric hl-c++\">0x3f3f3f3f</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-constant hl-preprocessor hl-c++\">lovelive</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">long</span> <span class=\"hl-storage hl-type hl-c\">int</span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">osu</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"><span class=\"hl-keyword hl-control hl-import hl-define hl-c++\">#define</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-entity hl-name hl-function hl-preprocessor hl-c++\">nso</span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-variable hl-parameter hl-c++\">i</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-preprocessor hl-macro hl-c++\"> <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homax</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-modifier hl-c++\">inline</span> <span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">homin</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">a</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">b</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>a <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;</span> b<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">return</span> b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> a<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-keyword hl-control hl-c++\">using</span> <span class=\"hl-keyword hl-control hl-c++\">namespace</span> std<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nvector<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>MAXN<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> bcccnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\nstack<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span>pair<span class=\"hl-punctuation hl-section hl-generic hl-begin hl-c++\">&lt;</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span><span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> <span class=\"hl-punctuation hl-section hl-generic hl-end hl-c++\">&gt;</span> S<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">void</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">tarjan</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">x</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-variable hl-parameter hl-c++\">fa</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>xu<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> cntz <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">for</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-storage hl-type hl-c\">int</span> i <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>i<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        <span class=\"hl-storage hl-type hl-c\">auto</span> p <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">make_pair</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">x<span class=\"hl-punctuation hl-separator hl-c++\">,</span>G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-storage hl-type hl-c\">int</span> to <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">p</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            cntz<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">to<span class=\"hl-punctuation hl-separator hl-c++\">,</span>x</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&gt;=</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span>bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-constant hl-language hl-c\">true</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n                <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                    <span class=\"hl-storage hl-type hl-c\">auto</span> e <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">top</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">pop</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> bcccnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> bcccnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bccno<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> bcccnt<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">first</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> x <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> e<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-variable hl-other hl-readwrite hl-member hl-c++\">second</span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-keyword hl-control hl-c++\">break</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span><span class=\"hl-keyword hl-control hl-c++\">else</span> <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> to <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> fa<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            S<span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">p</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homin</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>to<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n    <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>fa <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span> <span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">&amp;&amp;</span> cntz <span class=\"hl-keyword hl-operator hl-comparison hl-c\">&lt;</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>x<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span> <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">return</span> <span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n<span class=\"hl-storage hl-type hl-c\">int</span> N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n<span class=\"hl-storage hl-type hl-c\">int</span> <span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-entity hl-name hl-function hl-c++\">main</span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function hl-parameters hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-meta hl-function hl-c++\">\n</span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span></span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\">\n    <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-storage hl-type hl-c\">int</span> ttt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-keyword hl-control hl-c++\">while</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>M <span class=\"hl-keyword hl-operator hl-comparison hl-c\">!=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n    <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n        ttt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>MAXN<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">clear</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">DFN<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> DFN</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">LOW<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> LOW</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">iscut<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> iscut</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        xu <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcccnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">memset</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">bccno<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-word hl-c\">sizeof</span> bccno</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>M<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-storage hl-type hl-c\">int</span> a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b<span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>a<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>a<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">b</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            G<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>b<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">push_back</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a</span></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            N <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homax</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">N<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">homax</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">a<span class=\"hl-punctuation hl-separator hl-c++\">,</span>b</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>N<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">!</span>DFN<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">tarjan</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\">i<span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        lovelive ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcccnt<span class=\"hl-punctuation hl-separator hl-c++\">,</span>i</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            lovelive cnt <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-variable hl-function hl-c++\">osu</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-constant hl-numeric hl-c++\">0</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>j</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>iscut<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>j<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span> cnt<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n            <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>cnt <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n            <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n                ans1<span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">+</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n                ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-augmented hl-c\">*=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span>i<span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span>cnt<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-keyword hl-control hl-c++\">if</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>bcccnt <span class=\"hl-keyword hl-operator hl-comparison hl-c\">==</span> <span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>\n        <span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-begin hl-c++\">{</span>\n            ans1 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n            ans2 <span class=\"hl-keyword hl-operator hl-assignment hl-c\">=</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span> <span class=\"hl-keyword hl-operator hl-c\">*</span> <span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span>lovelive<span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span>bcc<span class=\"hl-meta hl-brackets hl-c++\"><span class=\"hl-punctuation hl-section hl-brackets hl-begin hl-c++\">[</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-brackets hl-end hl-c++\">]</span></span><span class=\"hl-punctuation hl-accessor hl-dot hl-c++\">.</span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-variable hl-function hl-member hl-c++\">size</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-method-call hl-c++\"></span><span class=\"hl-meta hl-method-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">-</span><span class=\"hl-constant hl-numeric hl-c++\">1</span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span><span class=\"hl-keyword hl-operator hl-arithmetic hl-c\">/</span><span class=\"hl-constant hl-numeric hl-c++\">2</span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">printf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span>Case <span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span>: %I64d %I64d<span class=\"hl-constant hl-character hl-escape hl-c\">\\n</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span>ttt<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans1<span class=\"hl-punctuation hl-separator hl-c++\">,</span>ans2</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n        <span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-support hl-function hl-C99 hl-c\">scanf</span><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-begin hl-c++\">(</span></span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-string hl-quoted hl-double hl-c\"><span class=\"hl-punctuation hl-definition hl-string hl-begin hl-c\">&quot;</span><span class=\"hl-constant hl-other hl-placeholder hl-c\">%d</span><span class=\"hl-punctuation hl-definition hl-string hl-end hl-c\">&quot;</span></span><span class=\"hl-punctuation hl-separator hl-c++\">,</span><span class=\"hl-keyword hl-operator hl-c\">&amp;</span>M</span></span><span class=\"hl-meta hl-function-call hl-c++\"><span class=\"hl-meta hl-group hl-c++\"><span class=\"hl-punctuation hl-section hl-group hl-end hl-c++\">)</span></span></span><span class=\"hl-punctuation hl-terminator hl-c++\">;</span>\n    <span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span>\n</span></span><span class=\"hl-meta hl-function hl-c++\"><span class=\"hl-meta hl-block hl-c++\"><span class=\"hl-punctuation hl-section hl-block hl-end hl-c++\">}</span></span></span>\n</span></code></pre>\n<h3 id=\"边双连通\"><a href=\"#边双连通\" class=\"headerlink\" title=\"边双连通\"></a>边双连通</h3>\n<p>边双连通(以下三条等价):</p>\n<ol>\n<li>\n<p>该连通图的任意一条边存在一个包含这条边的简单环；</p>\n</li>\n<li>\n<p>该连通图没有桥；</p>\n</li>\n<li>\n<p>该连通图任意两点有至少两条(边不重复)路径。</p>\n</li>\n</ol>\n<p>边双连通分量(eBCC)</p>\n<p>边双连通分量构成对所有点集的一个划分。\n两个边双连通分量最多只有一条边，且必为桥。进一步地，所有边双与桥可抽象为一棵树结构。</p>\n","3a0efcab16a09126d78e0da36eb49797f8a3b773":"<h1 id=\"样式文件说明\"><a href=\"#样式文件说明\" class=\"headerlink\" title=\"样式文件说明\"></a>样式文件说明</h1>\n<h2 id=\"样式拆分说明\"><a href=\"#样式拆分说明\" class=\"headerlink\" title=\"样式拆分说明\"></a>样式拆分说明</h2>\n<p>方案是对 <a href=\"https://blog.skk.moe/post/improve-fcp-for-my-blog/\">https://blog.skk.moe/post/improve-fcp-for-my-blog/</a> 的开源实现</p>\n<h3 id=\"first-styl\"><a href=\"#first-styl\" class=\"headerlink\" title=\"first.styl\"></a>first.styl</h3>\n<p>首屏样式, 内含 首屏基础样式、 cover、 navbar、 首屏search、首屏暗黑模式、首屏字体 等样式, 首屏样式采用硬编码的方式写在HTML中.</p>\n<p>内联硬编码自动化方案 see：scripts/helpers/first-style/index.js</p>\n<h3 id=\"style-styl\"><a href=\"#style-styl\" class=\"headerlink\" title=\"style.styl\"></a>style.styl</h3>\n<p>异步加载样式, 除首屏样式外的其他样式, 最终生成 /css/style.css 异步加载.</p>\n<h2 id=\"暗黑模式样式说明\"><a href=\"#暗黑模式样式说明\" class=\"headerlink\" title=\"暗黑模式样式说明\"></a>暗黑模式样式说明</h2>\n<p>暗黑模式样式被拆分为首屏暗黑模式样式和异步暗黑模式样式，其中在 source/css/ 文件夹下：</p>\n<p>_first/dark_first.styl ： 包含 首屏暗黑模式样式 的 暗黑模式 CSS 变量 和 强制覆盖样式</p>\n<p>_style/_plugins/_dark ： 异步暗黑模式样式文件夹</p>\n<p>_style/_plugins/_dark/dark_async.styl ： 包含 异步暗黑模式样式 的 暗黑模式 CSS 变量</p>\n<p>_style/_plugins/_dark/dark_plugins.styl ： 包含 异步暗黑模式样式 的 强制覆盖样式</p>\n","eb4a2098364e0d564fb3cba385b44c0eed551b89":"<p>有N个变量,每个变量都能取T或F，需要满足M个条件: <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-1-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-1-TEX-I-1D447\"></use></g></g></g></svg> or <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.432ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3284.9 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-2-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-2-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-2-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1480.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2535.9,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-2-TEX-I-1D439\"></use></g></g></g></svg></p>\n<p>要给每个变量赋值,满足所有条件.</p>\n<p>构造有向图G,每个<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-3-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g></g></g></g></svg>拆成两个点2i和2i+1, 分别表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-4-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g></g></g></g></svg>取T或者F. 每个变量选其中的一个进行标记,标记了节点2i表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-5-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-5-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-5-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-5-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-5-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-5-TEX-I-1D447\"></use></g></g></g></svg>,标记2i+1表示<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.325ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3237.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-6-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-6-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-6-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-6-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-6-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-6-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-6-TEX-I-1D439\"></use></g></g></g></svg>.</p>\n<p>对于每个条件,如<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.223ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3192.5 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-7-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-7-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-7-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-7-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-7-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1432.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-7-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2488.5,0)\"><use data-c=\"1D447\" xlink:href=\"#MJX-7-TEX-I-1D447\"></use></g></g></g></svg> or <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.432ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3284.9 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-8-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-8-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-8-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-8-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-8-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1480.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-8-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2535.9,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-8-TEX-I-1D439\"></use></g></g></g></svg>,可以从表示点i为F的节点到表示点j为F的节点连一条边,表示如果点i为F,那么点j一定是F. 同时,还要从表示点j为T的点向表示点i为T的点连一条边.</p>\n<h3 id=\"DFS方法\"><a href=\"#DFS方法\" class=\"headerlink\" title=\"DFS方法\"></a>DFS方法</h3>\n<!--more-->\n<p>逐个考虑每个未赋值的变量<svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.613ex\" height=\"1.902ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1155 840.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-9-TEX-I-1D44B\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(861,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g></g></g></g></g></svg>,先假定为真,标记结点2i,然后沿着边标记所有可以标记的点,并记录这个过程中标记了的点,方便更换这个变量的赋值.如果发现某个变量的两个点都被标记了,说明这个变量不可能为真,就要按照刚刚的记录,将标记去掉,<strong>清空记录</strong>,标记节点2i+1,重复过程.<strong>注意在假定为真的dfs之前也要清空记录</strong>. 如果这时候还不行,这个问题就无解,即使改变之前变量的值也没用.</p>\n<p><strong>luogu P4782 模板</strong></p>\n<!--code￼0-->\n<p>复杂度<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.714ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5619.4 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-10-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-10-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1752,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2141,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2963.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-10-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3963.4,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-10-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4841.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5230.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg></p>\n<p>这个方法还可以保证答案的字典序,对于大部分的题目已经够用了.</p>\n<h3 id=\"SCC方法\"><a href=\"#SCC方法\" class=\"headerlink\" title=\"SCC方法\"></a>SCC方法</h3>\n<p>用Tarjan对每个SCC缩点,如果某个变量对应的两个节点在一个SCC中,则问题无解,否则一定有解.</p>\n<p>如果一个变量的T结点所在SCC的拓扑序大于F结点的,那么就给这个变量赋T,否则赋F,用这个方法一定给所有有解的情况构造出答案.</p>\n<p>复杂度<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.596ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4241.4 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D442\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-11-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D442\" xlink:href=\"#MJX-11-TEX-I-1D442\"></use></g><g data-mml-node=\"mo\" transform=\"translate(763,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1152,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1974.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-11-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2974.4,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3852.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>,达到了输入下限.但由于无法保证解的字典序,一般只用于判断是否有解.</p>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2>\n<h3 id=\"Now-or-later-UVA-1146\"><a href=\"#Now-or-later-UVA-1146\" class=\"headerlink\" title=\"Now or later, UVA-1146\"></a>Now or later, UVA-1146</h3>\n<p><a href=\"https://vjudge.net/problem/UVA-1146\">https://vjudge.net/problem/UVA-1146</a></p>\n<h4 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h4>\n<p>每个飞机都有2个降落时间,早降落时间和晚降落时间,每个飞机都可以选择早或者晚降落,每个飞机的早晚降落时间是固定的,但是可以和其他飞机不同.</p>\n<p>你可以任意指定每个飞机的早晚降落情况,使每个飞机真正的降落时间之间的间隔最大.</p>\n<h4 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h4>\n<p>二分答案T,用<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.9ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3934 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-12-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-12-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-12-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-12-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-12-TEX-N-2F\" d=\"M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-12-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-12-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1028,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-12-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1600,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-12-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1878,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-12-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2156,0)\"><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(2656,0)\"><g data-mml-node=\"mo\"><use data-c=\"2F\" xlink:href=\"#MJX-12-TEX-N-2F\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(3156,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3656,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-12-TEX-N-5D\"></use></g></g></g></svg>代表第x个飞机的早降落时间和晚降落时间,如果<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.921ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 11457.2 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-13-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-13-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-13-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-13-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-13-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-13-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-13-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(278,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-13-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1028,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1306,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-13-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4297.3,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5297.6,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-13-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6047.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(6325.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-13-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(7334.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7612.1,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-13-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(7890.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-13-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-13-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8816.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-13-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9094.7,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-13-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9650.4,0)\"><use data-c=\"3C\" xlink:href=\"#MJX-13-TEX-N-3C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10706.2,0)\"><use data-c=\"1D443\" xlink:href=\"#MJX-13-TEX-I-1D443\"></use></g></g></g></svg>, 说明<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.591ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3797.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-14-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-14-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-14-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-14-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-14-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-14-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-14-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2592.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-14-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3519.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-14-TEX-N-5D\"></use></g></g></g></svg>与<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.591ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3797.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-15-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-15-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-15-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-15-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-15-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-15-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-15-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-15-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-15-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-15-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-15-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2592.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-15-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-15-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3519.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-15-TEX-N-5D\"></use></g></g></g></svg>不能同时选,即<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.331ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9428.2 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-16-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-16-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-16-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-16-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-16-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-N-26\" d=\"M156 540Q156 620 201 668T302 716Q354 716 377 671T401 578Q401 505 287 386L274 373Q309 285 416 148L429 132L437 142Q474 191 543 309L562 341V349Q562 368 541 376T498 385H493V431H502L626 428Q709 428 721 431H727V385H712Q688 384 669 379T639 369T618 354T603 337T591 316T578 295Q537 223 506 176T464 117T454 104Q454 102 471 85T497 62Q543 24 585 24Q618 24 648 48T682 113V121H722V112Q721 94 714 75T692 32T646 -7T574 -22Q491 -19 414 42L402 51L391 42Q312 -22 224 -22Q144 -22 93 25T42 135Q42 153 46 169T55 197T74 225T96 249T125 278T156 308L195 347L190 360Q185 372 182 382T174 411T165 448T159 491T156 540ZM361 576Q361 613 348 646T305 679Q272 679 252 649T232 572Q232 497 255 426L259 411L267 420Q361 519 361 576ZM140 164Q140 103 167 64T240 24Q271 24 304 36T356 61T374 77Q295 156 235 262L220 292L210 310L193 293Q177 277 169 268T151 229T140 164Z\"></path><path id=\"MJX-16-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"21\" xlink:href=\"#MJX-16-TEX-N-21\"></use></g><g data-mml-node=\"mo\" transform=\"translate(278,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(667,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1417,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1695,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-16-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-16-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2703.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2981.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3259.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-16-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-16-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4186.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4464.1,0)\"><use data-c=\"26\" xlink:href=\"#MJX-16-TEX-N-26\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5242.1,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5992.1,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(6270.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-16-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-16-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(7278.7,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7556.7,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-16-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(7834.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-16-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-16-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8761.2,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-16-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9039.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g></g></g></svg>, 由狄摩根定律,这个条件等价于<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.22ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4075.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-17-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-17-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-17-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-17-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-17-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-17-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-17-TEX-N-5B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"21\" xlink:href=\"#MJX-17-TEX-N-21\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-17-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-17-TEX-N-5D\"></use></g></g></g></svg> | <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.22ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4075.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-18-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-18-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-18-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-18-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-18-TEX-N-21\" d=\"M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z\"></path><path id=\"MJX-18-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-18-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(750,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-18-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1028,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-18-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2036.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-18-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2314.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-18-TEX-N-5B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2592.6,0)\"><use data-c=\"21\" xlink:href=\"#MJX-18-TEX-N-21\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2870.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-18-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3797.1,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-18-TEX-N-5D\"></use></g></g></g></svg>,这就转化为了2-SAT判断有解性问题.</p>\n<p><a href=\"https://vjudge.net/solution/24649633\">https://vjudge.net/solution/24649633</a></p>\n<!--code￼1-->\n<p>(明明UVALive-3211和UVA-1146是一样的题,但是在vjudge上一样的代码只能过UVA-1146...刚开始交UVALive-3211怎么都过不去,换了个一模一样的题交就过了,魔幻)</p>\n","e5c46ec4e644133a09a882b2bb56b32394bdee5a":"<p>昨天研究了一下JupyterHub的安装与配置,记录一下安装过程.</p>\n<p>因为不想折腾双系统,也不太信任现在的WSL,选择了在VMware中运行Ubuntu.</p>\n<h2 id=\"1-安装Ubuntu-20-04\"><a href=\"#1-安装Ubuntu-20-04\" class=\"headerlink\" title=\"1. 安装Ubuntu 20.04\"></a>1. 安装Ubuntu 20.04</h2>\n<p>前几天看到了Ubuntu的新LTS版本20.04出来了,一直想体验一把,正好趁这个机会看看长什么样.</p>\n<p>镜像我直接在官网上下的,安装用VMware的简易安装就行了.注意虚拟机的网卡改成桥接模式,让虚拟机直接从路由器上获取ip,方便搭建好在主机上访问JupyterHub.装好Ubuntu后别忘了安装openssh和net-tools:</p>\n<!--more-->\n<!--code￼0-->\n<p>安装成功后,在终端里使用ifconfig -a查看路由器分发的ip地址,在主机上使用ssh连接就可以搭建环境了.</p>\n<p><img src=\"/img/JupyterHub/1.png\" alt=\"\"></p>\n<h2 id=\"2-安装Anaconda3\"><a href=\"#2-安装Anaconda3\" class=\"headerlink\" title=\"2. 安装Anaconda3\"></a>2. 安装Anaconda3</h2>\n<p>去清华的镜像站(TUNA)上找到了Anaconda最新的包的地址:<a href=\"https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh\">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2020.02-Linux-x86_64.sh</a>, 使用wget下载到虚拟机中,然后执行安装脚本,按照他的指示来就行了.</p>\n<!--code￼1-->\n<p>默认是安装到~/anaconda3中.</p>\n<p>顺便,这里我选择的是yes,我也不知道是干啥的.</p>\n<p><img src=\"/img/JupyterHub/2.png\" alt=\"\"></p>\n<p>执行</p>\n<!--code￼2-->\n<p>将anaconda添加到PATH中.</p>\n<p>输入conda,如果显示conda的提示,说明安装成功.</p>\n<h2 id=\"3-安装JupyterHub\"><a href=\"#3-安装JupyterHub\" class=\"headerlink\" title=\"3.安装JupyterHub\"></a>3.安装JupyterHub</h2>\n<p>JupyterHub的官方文档(<a href=\"https://jupyterhub.readthedocs.io/en/stable/\">https://jupyterhub.readthedocs.io/en/stable/</a> )提供了两种安装方法:</p>\n<p><img src=\"/img/JupyterHub/3.png\" alt=\"\"></p>\n<p>这里选择第二种安装.注意如果使用第一种安装的话还需要先额外安装nodejs环境,官方给的命令是:</p>\n<!--code￼3-->\n<p>我使用</p>\n<!--code￼4-->\n<p>也可以完成最终的安装.</p>\n<p>还有一点就是conda的默认源在国外,如果没有特殊工具的话需要换源.</p>\n<p>一般在网络终端上的工具都是不能实现完美的全局代理的,特别对于在虚拟机上的流量,即使使用Proxifier这样的东西也不能达到很好的效果.我是在路由器上直接使用了工具,所以没有考虑这一点.(不能再说了这网站备案了).</p>\n<p>判断是否安装成功:</p>\n<!--code￼5-->\n<p>运行jupyterhub:</p>\n<!--code￼6-->\n<p>出现此界面,安装成功.</p>\n<p><img src=\"/img/JupyterHub/4.png\" alt=\"\"></p>\n<p>下面进行用户的配置.</p>\n<h2 id=\"4-用户配置\"><a href=\"#4-用户配置\" class=\"headerlink\" title=\"4.用户配置\"></a>4.用户配置</h2>\n<p>使用</p>\n<!--code￼7-->\n<p>生成默认的jupyterhub配置文件.</p>\n<p>官方文档建议将此文件放在/etc/jupyterhub目录下.可以自行创建此文件夹后在该文件夹下执行命令.</p>\n<p><img src=\"/img/JupyterHub/5.png\" alt=\"\"></p>\n<p>此时出现了一个棘手的问题:</p>\n<p><img src=\"/img/JupyterHub/6.png\" alt=\"\"></p>\n<p>我们没有权限在这个文件夹下进行写文件的操作.</p>\n<p>一般遇到这样的情况都是直接sudo,但是当我执行</p>\n<!--code￼8-->\n<p><img src=\"/img/JupyterHub/7.png\" alt=\"\"></p>\n<p>他提示没有找到jupyterhub这个命令.</p>\n<p>去网上搜索,找到了解决方法:</p>\n<p>切换到root用户,编辑/etc/sudoers文件.</p>\n<p>将其中<code>Defaults env_reset</code>这一行改成<code>Defaults !env_reset</code></p>\n<p>如果你没有为root用户设置过密码,应该先使用<code>sudo passwd root</code>来给root设置密码,然后使用<code>su</code>来切换到root账户.</p>\n<p><img src=\"/img/JupyterHub/8.png\" alt=\"\"></p>\n<p>如果没有安装vim,使用apt安装即可.</p>\n<p>编辑好后,切换回刚刚的用户.</p>\n<p>编辑/etc/bash.bashrc文件,向最后添加</p>\n<!--code￼9-->\n<p>如果出现文件无法保存,使用<code>:wq!</code>试试,还是不行直接<code>sudo vim</code>.</p>\n<p>让修改的配置生效:</p>\n<!--code￼10-->\n<p>这时就可以在/etc/jupyterhub下执行</p>\n<!--code￼11-->\n<p>还有一种方法,可以解决无法在此文件夹读写的问题,即使用</p>\n<!--code￼12-->\n<p>修改这个文件夹的权限,生成这个配置文件.但是到后期还是需要在sudo下运行jupyterhub,所以在现在直接解决这个问题就好了.</p>\n<p>通过查阅官方文档,我们可以找到配置文件的基本配置.</p>\n<p><img src=\"/img/JupyterHub/9.png\" alt=\"\"></p>\n<p>按照官方文档的说法,默认的用户认证管理器是PAM,ubuntu系统上的用户都被允许登录.</p>\n<p>所以我们可以先切换到root用户,在系统里添加一个用户:</p>\n<!--code￼13-->\n<p>设置好密码后,返回原来的用户.</p>\n<p>修改配置文件,将一个用户添加到管理员列表中(这里是honokasumi),另一个普通用户(这里是kasumi)添加到白名单中.(按照官方文档的说法,在管理员列表中的非白名单中的用户会被自动添加到白名单中):</p>\n<p><img src=\"/img/JupyterHub/10.png\" alt=\"\"></p>\n<p>指定配置文件,启动jupyter</p>\n<!--code￼14-->\n<p>访问http://ip:8000 ,输入账号密码,登录成功.</p>\n<p><img src=\"/img/JupyterHub/11.png\" alt=\"\"></p>\n<h2 id=\"5-安装其他语言的内核\"><a href=\"#5-安装其他语言的内核\" class=\"headerlink\" title=\"5.安装其他语言的内核\"></a>5.安装其他语言的内核</h2>\n<p><img src=\"/img/JupyterHub/12.png\" alt=\"\"></p>\n<p>默认已经安装了Python3的内核,要想支持其他语言,需要安装其他语言的内核.</p>\n<p>这里以安装C++系列内核为例.</p>\n<p>使用</p>\n<!--code￼15-->\n<p>安装xeus-cling,一个在jupyter上支持c++系列的内核.</p>\n<p>安装成功后,可以在这里切换使用内核:</p>\n<p><img src=\"/img/JupyterHub/13.png\" alt=\"\"></p>\n<p><img src=\"/img/JupyterHub/14.png\" alt=\"\"></p>\n<p><a href=\"https://github.com/jupyter/jupyter/wiki/Jupyter-kernels\">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a> 这里列出了jupyter上其他语言的内核,可以自己寻找并安装.</p>\n","de3a562763b92126c8625bfca5fc67a5e13e8d7c":"<p>LSTM</p>\n<!--more-->\n<!--code￼0-->","02364bb92dbd719722ee6dca916336c995e822de":"<h1 id=\"Win10-CMake-MinGW-CLion环境配置\"><a href=\"#Win10-CMake-MinGW-CLion环境配置\" class=\"headerlink\" title=\"Win10+CMake+MinGW+CLion环境配置\"></a>Win10+CMake+MinGW+CLion环境配置</h1>\n<p>在知乎上看到一篇简单介绍make,makefile,cmake的文章,原文链接https://zhuanlan.zhihu.com/p/111110992.</p>\n<p>了解了这些东西之后,可以开始配置Windows上的C++环境了,这里使用CLion+MingW的配置.</p>\n<p>首先在MinGW上下载mingw-get.exe.</p>\n<p><a href=\"http://www.mingw.org/\">http://www.mingw.org/</a></p>\n<p>在mingw-get.exe所在目录下执行命令:</p>\n<!--code￼0-->\n<p>安装gcc,g++,gdb以及mingw32-make,并将bin文件夹添加到PATH环境变量中.</p>\n<p>安装CMake,在安装时可以勾选添加到PATH.</p>\n<!-- more --> \n<p>为了进一步了解CMake,可以利用CMake在windows下的gui试验一下编译.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/1.png\" alt=\"1\"></p>\n<p>编写a.cpp和CMakeLists.txt文件,其中CMakeLists.txt文件内容为</p>\n<!--code￼1-->\n<p>这就是一个最简单的CMakeLists.txt文件,足以将a.cpp编译成hello.exe.</p>\n<p>打开CMake-gui,选择源码文件夹和二进制文件输出文件夹.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2.png\" alt=\"2\"></p>\n<p>点Generate.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/3.png\" alt=\"3\"></p>\n<p>因为使用的是MinGW,所以选择MinGW Makefiles,也就是mingw32-make可以处理的makefiles文件.</p>\n<p>要使用之前自己安装的MinGW,所以选择第二项,之后自己选择编译器.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/4.png\" alt=\"4\"></p>\n<p>选择好编译器后,正常的话已经可以在bin文件夹下生成Makefiles文件了,然后在bin文件夹下执行</p>\n<!--code￼2-->\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/5.png\" alt=\"5\"></p>\n<p>就可以看到bin文件夹下已经编译出hello.exe文件了.</p>\n<p>懂得了基本概念之后,配置CLion也就很简单了.</p>\n<p><img src=\"/img/WCMC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/6.png\" alt=\"6\"></p>\n<p>Environment选择MinGW所在的文件夹.Make选择mingw32-make,C编译器选择gcc,c++编译器g++即可.</p>\n","9e1b4081cc792f3a3e8b830bf5f773e0f4b4b4ff":"<p><a href=\"https://codeforces.com/contest/1623/problem/D\">https://codeforces.com/contest/1623/problem/D</a></p>\n<p>最近在跟队友复健cf, 三个人开黑vp, 感觉状态还是不太行.</p>\n<p>这题感觉还挺有意思, 还没过的时候就想如果真的是这样做的一定要写篇文章记录一下, 然而这题是元旦过的, 我现在才开始写, 拖延症晚期了属于是.</p>\n<!--more-->\n<p>前几天刚把自己的win11重装了一遍, 因为感觉莫名其妙的小问题太多了, 也不知道是软件的问题还是系统的问题, tim和qq在打开打开文件的对话框的时候一定闪退. 还有其他小问题我也记不清了, 反正这些问题我都单方面归咎于傻逼win11了. 而对于一个恶人我只需要记住他最恶的一件事就行了, 就是tim和qq在打开打开文件的对话框的时候一定闪退.</p>\n<p>重装了系统之后果然tim打开打开文件对话框的时候不闪退了, 我刚为这件事弹冠相庆没多长时间, 他又闪退了. \"历史的车轮总是能接受倒退的\", 但是当时在写各种大作业, 就没着急换回win10. 但是当我把我计算机图形学作业发给老师之后, 我又发现他又不闪退了, 他的心好难捉摸.</p>\n<p>总之我现在就安分地用着这个win11, 去typora官网上下个历史版本, 趁着nodejs还在安装的时候先写个题解.</p>\n<p>题目原文:<img src=\"/img/cf763d2D.assets/t.png\" alt=\"img\"></p>\n<p>tmd, 我刚想把这张图发到qq上在保存下来压缩图片, 他又崩了, 麻了.</p>\n<p><img src=\"/img/cf763d2D.assets/2022-01-06_2.png\" alt=\"2022-01-06\"></p>\n<p><img src=\"/img/cf763d2D.assets/2022-01-06.png\" alt=\"\"></p>\n<p>大概题意就是, 有一个扫地机器人在一个网格, 他有一个初始位置, 然后他每秒可以移动(+1, +1), 但是如果有一个坐标方向上他在墙旁边了, 他的下一步对应坐标的增量就是-1. 这样循环的移动. 有一个垃圾, 他在另一个位置上, 扫地机器人每次移动之前, 都有<svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.395ex\" height=\"2.602ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -789.7 1500.7 1150.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mi\" transform=\"translate(572.5,477.2) scale(0.707)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-1-TEX-I-1D45D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-345) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-1-TEX-N-30\" transform=\"translate(1000,0)\"></use></g><rect width=\"1260.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>的概率扫掉对应一行和一列的垃圾. 问期望多长时间他能扫掉这个垃圾.</p>\n<p>因为这场比赛第一题是个不带概率的, 每次一定会扫掉垃圾, 就直接把x和y坐标分开看, 看哪个坐标最先到对应的行和列就行. 所以这题我也直接考虑把两个坐标分开看, 确实推出来了一些东西, 我可以得到这个问题在一维上的公式, 但是这样两个一维的问题还是合并不到一个二维问题上, 所以根据经验这时候就需要直接考虑二维问题.</p>\n<p>这样的递归求期望题很多都用了一个期望的技巧, 就是一个问题的期望是固定的, 而且这个问题可以化成很多相同的子问题, 并且这些子问题能够回到原问题的期望上, 这样就可以找到一个关于这个期望的方程, 直接解了就行了.</p>\n<p>这个问题感觉也可以这样做, 因为这个机器人的状态一定最多只有 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.518ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2439 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-2-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-2-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"34\" xlink:href=\"#MJX-2-TEX-N-34\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-2-TEX-I-1D441\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1388,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-2-TEX-I-1D440\"></use></g></g></g></svg> 种, 即每个位置和每个位置上的四个方向, 并且当前的状态仅于上一个状态有关, 所以只要两个状态相同, 他们之后的所有运动轨迹一定也相同. 这样的话根据抽屉原理, 这个机器人的运动状态的循环节长度一定小于 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.518ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2439 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-3-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-3-TEX-I-1D440\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"34\" xlink:href=\"#MJX-3-TEX-N-34\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D441\" xlink:href=\"#MJX-3-TEX-I-1D441\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1388,0)\"><use data-c=\"1D440\" xlink:href=\"#MJX-3-TEX-I-1D440\"></use></g></g></g></svg> . 我们令初始状态的答案为<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.147ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5811.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-4-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-4-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-4-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-4-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-4-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-4-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1153,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-4-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2161.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2606.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-4-TEX-I-1D466\"></use></g><g data-mml-node=\"mn\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3532.8,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3977.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4477.4,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4922.1,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5422.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-4-TEX-N-29\"></use></g></g></g></svg> , 即起点在 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.144ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3157.8 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-5-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-5-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-5-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-5-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-5-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(389,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-5-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-5-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1397.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-5-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1842.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-5-TEX-I-1D466\"></use></g><g data-mml-node=\"mn\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-5-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2768.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-5-TEX-N-29\"></use></g></g></g></svg>, 两个坐标轴的增量(即方向为) <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.549ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3778.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-6-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-6-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-6-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-6-TEX-N-28\"></use></g><g data-mml-node=\"mo\" transform=\"translate(389,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-6-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1167,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1667,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-6-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2111.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-6-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2889.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3389.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-6-TEX-N-29\"></use></g></g></g></svg>. 只要我们找到状态于状态之间的转移, 就可以列出一个从起点状态回到起点状态的方程, 解出这个方程就行了.</p>\n<p>那么我们模拟这个机器人的运动轨迹, 然后考虑转移, 用 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-7-TEX-I-1D446\"></use></g></g></g></svg> 表示当前状态, 用 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.204ex\" height=\"1.767ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 974.1 781\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-8-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-8-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,363) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-8-TEX-V-2032\"></use></g></g></g></g></svg> 表示下一步的状态. 如果 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-9-TEX-I-1D446\"></use></g></g></g></svg> 这个状态扫不到垃圾, 那么一定有:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"17.554ex\" height=\"2.396ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -809 7759.1 1059\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-10-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-10-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1153,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-10-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1798,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2464.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3520.6,0)\"><use data-c=\"1D438\" xlink:href=\"#MJX-10-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4284.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4673.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-10-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,413) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-10-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5647.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6258.8,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-10-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7259.1,0)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></svg></span></p>\n<p>, 如果 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.459ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 645 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-11-TEX-I-1D446\"></use></g></g></g></svg> 状态可以扫掉垃圾, 那么有 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.138ex\" height=\"1.439ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 503 636\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-12-TEX-I-1D45D\"></use></g></g></g></svg> 的概率, 直接结束, 这个结果对期望时间的贡献为 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.183ex\" height=\"1.946ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 4059 860\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-13-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-13-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-13-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-13-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(725.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-13-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1725.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-13-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2503.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-13-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3559,0)\"><use data-c=\"30\" xlink:href=\"#MJX-13-TEX-N-30\"></use></g></g></g></svg>.</p>\n<p>剩下 <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.035ex\" height=\"1.946ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2225.4 860\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-14-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-14-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1722.4,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-14-TEX-I-1D45D\"></use></g></g></g></svg> 的概率, 他扫不到垃圾, 需要转移到下一个状态的期望, 即:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.218ex\" height=\"2.396ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -809 10262.5 1059\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D438\" d=\"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-15-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-15-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-15-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-15-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-15-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-15-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-15-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D438\" xlink:href=\"#MJX-15-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(764,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1153,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-15-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1798,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2464.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-15-TEX-N-3D\"></use></g><g data-mml-node=\"mover\" transform=\"translate(3520.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-15-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-15-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4245.8,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-15-TEX-N-D7\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5246,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5635,0)\"><use data-c=\"1D438\" xlink:href=\"#MJX-15-TEX-I-1D438\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6399,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"msup\" transform=\"translate(6788,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-15-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,413) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-15-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(7762.1,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8373.3,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-15-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(9373.5,0)\"><use data-c=\"31\" xlink:href=\"#MJX-15-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9873.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>这样一直走下去, 等到 <svg style=\"vertical-align: -0.375ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.595ex\" height=\"2.092ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3357.2 924.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-16-TEX-V-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"></path><path id=\"MJX-16-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-16-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-16-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(729.6,363) scale(0.707)\"><use data-c=\"2032\" xlink:href=\"#MJX-16-TEX-V-2032\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1251.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-16-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2307.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D446\" xlink:href=\"#MJX-16-TEX-I-1D446\"></use></g><g data-mml-node=\"mn\" transform=\"translate(646,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-16-TEX-N-30\"></use></g></g></g></g></svg>, 就可以列到一个方程.</p>\n<p><img src=\"/img/cf763d2D.assets/1.png\" alt=\"1\"></p>\n<p>比如这样一个状态转移, 打√的代表可以扫到垃圾.</p>\n<p>那么我们可以列出一个这样的方程:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"23.093ex\" height=\"2.283ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 10206.9 1009\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-17-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-17-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mover\" transform=\"translate(1722.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-17-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-17-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2225.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2614.4,0)\"><use data-c=\"34\" xlink:href=\"#MJX-17-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3336.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mover\" transform=\"translate(4336.9,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-17-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-17-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4839.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5228.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5951.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-17-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6951.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7523.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7912.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8579.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9634.9,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>对于初始位置在<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.029ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2222.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-18-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-18-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-18-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-18-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-18-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-18-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1333.7,0)\"><use data-c=\"32\" xlink:href=\"#MJX-18-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1833.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g></g></g></svg>, <svg style=\"vertical-align: -0.439ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.302ex\" height=\"2.136ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3669.6 944\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-19-TEX-N-35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path><path id=\"MJX-19-TEX-N-25\" d=\"M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-19-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(780.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1836.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-19-TEX-N-32\"></use><use data-c=\"35\" xlink:href=\"#MJX-19-TEX-N-35\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2836.6,0)\"><use data-c=\"25\" xlink:href=\"#MJX-19-TEX-N-25\"></use></g></g></g></svg> 上的这样一个例子, 可以列出方程:</p>\n<p><img src=\"/img/cf763d2D.assets/f3ef67cfa056fd84d5c6d8ef3cc518acadf36ea7.png\" alt=\"img\"></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.552ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"36.741ex\" height=\"4.586ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1341 16239.3 2027\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-20-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-20-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-20-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-20-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-20-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-20-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-20-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(940,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1329,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2051.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3051.4,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3991.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4380.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5102.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(6102.9,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7042.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7431.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8154.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(9154.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,676)\"><use data-c=\"33\" xlink:href=\"#MJX-20-TEX-N-33\"></use></g><g data-mml-node=\"mn\" transform=\"translate(220,-686)\"><use data-c=\"34\" xlink:href=\"#MJX-20-TEX-N-34\"></use></g><rect width=\"700\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10094.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(10483.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-20-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11205.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-20-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12205.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12777.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13166.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13555.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13944.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(14611.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-20-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15667.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-20-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>可以看出, 方程全部都是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.873ex\" height=\"2.283ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -759 3922 1009\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-21-TEX-N-2013\" d=\"M0 248V285H499V248H0Z\"></path><path id=\"MJX-21-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-21-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-21-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-21-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-21-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mover\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-21-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1.5,374)\"><use data-c=\"2013\" xlink:href=\"#MJX-21-TEX-N-2013\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(503,0)\"><use data-c=\"28\" xlink:href=\"#MJX-21-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(892,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-21-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-21-TEX-N-2B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2199,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2643.7,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3088.3,0)\"><use data-c=\"2E\" xlink:href=\"#MJX-21-TEX-N-2E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3533,0)\"><use data-c=\"29\" xlink:href=\"#MJX-21-TEX-N-29\"></use></g></g></g></svg> 这样的递归形式, 对于每一个扫到垃圾的状态, 方程会增加一层, 对于扫不到垃圾的状态, 只会让当前层的常数项<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.891ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1278 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-22-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2B\" xlink:href=\"#MJX-22-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><use data-c=\"31\" xlink:href=\"#MJX-22-TEX-N-31\"></use></g></g></g></svg>.</p>\n<p>实际上, 对于连续的一堆扫不到垃圾的状态, 他对方程的贡献都是连续的<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.891ex\" height=\"1.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 1278 748\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-23-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-23-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2B\" xlink:href=\"#MJX-23-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(778,0)\"><use data-c=\"31\" xlink:href=\"#MJX-23-TEX-N-31\"></use></g></g></g></svg>, 变成了一个常数项, 所以可以直接在可以扫到垃圾的时候看一下距离上一次扫到垃圾的时候经过了多少扫不到垃圾的状态, 然后直接把常数项加到方程里.</p>\n<p>最后的问题就是如何解这个方程, 这个方程其实直接一层一层解开就行了. 但是可以观察到这个和什么秦九昭算法比较像, 其实就是可以把这个方程展开, 展开成一个多项式的形式, 例如对于倒数第二个样例, 列出的方程为:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"35.148ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 15535.3 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-24-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-24-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-24-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-24-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-24-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-24-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-24-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-24-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-24-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-24-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-24-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-24-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(722.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1722.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3000.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3389.4,0)\"><use data-c=\"34\" xlink:href=\"#MJX-24-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4111.7,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5111.9,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6389.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(6778.9,0)\"><use data-c=\"32\" xlink:href=\"#MJX-24-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7501.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(8501.3,0)\"><use data-c=\"30\" xlink:href=\"#MJX-24-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-24-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-24-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9779.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-24-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(10168.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-24-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10890.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-24-TEX-N-2B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11890.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-24-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12462.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12851.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13240.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-24-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13907.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-24-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14963.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-24-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>左边全部展开, 整理得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"52.261ex\" height=\"2.565ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -883.9 23099.3 1133.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-25-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-25-TEX-N-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-25-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-25-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-25-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-25-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-25-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-25-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-25-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-25-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-25-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-25-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-25-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-25-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1936.8,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2937,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3659.2,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4659.4,0)\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6159.7,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(7159.9,0)\"><use data-c=\"34\" xlink:href=\"#MJX-25-TEX-N-34\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7882.1,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"msup\" transform=\"translate(8882.3,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-25-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10819.1,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(11819.3,0)\"><use data-c=\"32\" xlink:href=\"#MJX-25-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12541.6,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-25-TEX-N-2B\"></use></g><g data-mml-node=\"msup\" transform=\"translate(13541.8,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"33\" xlink:href=\"#MJX-25-TEX-N-33\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(15478.5,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-25-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(16478.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(17256.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-25-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18312.3,0)\"><use data-c=\"28\" xlink:href=\"#MJX-25-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(18701.3,0)\"><use data-c=\"31\" xlink:href=\"#MJX-25-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(19423.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-25-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(20423.8,0)\"><g data-mml-node=\"mn\"><use data-c=\"30\" xlink:href=\"#MJX-25-TEX-N-30\"></use><use data-c=\"2E\" xlink:href=\"#MJX-25-TEX-N-2E\" transform=\"translate(500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-25-TEX-N-39\" transform=\"translate(778,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1311,413) scale(0.707)\"><use data-c=\"33\" xlink:href=\"#MJX-25-TEX-N-33\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(22138.3,0)\"><use data-c=\"29\" xlink:href=\"#MJX-25-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(22527.3,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-25-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p>解得 <svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.506ex\" height=\"2.79ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -872.7 3759.8 1233.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-26-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-26-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-26-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-26-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-26-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-26-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-26-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-26-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-26-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(849.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-26-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(1905.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"36\" xlink:href=\"#MJX-26-TEX-N-36\"></use><use data-c=\"39\" xlink:href=\"#MJX-26-TEX-N-39\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-26-TEX-N-34\" transform=\"translate(1000,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-26-TEX-N-39\" transform=\"translate(1500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(396.8,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-26-TEX-N-32\"></use><use data-c=\"37\" xlink:href=\"#MJX-26-TEX-N-37\" transform=\"translate(500,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\" transform=\"translate(1000,0)\"></use></g><rect width=\"1614.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>, <svg style=\"vertical-align: -0.816ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.59ex\" height=\"2.79ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -872.7 13520.8 1233.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-27-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-27-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path><path id=\"MJX-27-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-27-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-27-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-27-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-27-TEX-N-25\" d=\"M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z\"></path><path id=\"MJX-27-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-27-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-27-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mn\" transform=\"translate(220,394) scale(0.707)\"><use data-c=\"36\" xlink:href=\"#MJX-27-TEX-N-36\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-27-TEX-N-34\" transform=\"translate(1000,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(1500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(396.8,-345) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-27-TEX-N-32\"></use><use data-c=\"37\" xlink:href=\"#MJX-27-TEX-N-37\" transform=\"translate(500,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\" transform=\"translate(1000,0)\"></use></g><rect width=\"1614.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mi\" transform=\"translate(1854.2,0)\"><use data-c=\"25\" xlink:href=\"#MJX-27-TEX-N-25\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2687.2,0)\"><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(3000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(3500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(4000,0)\"></use><use data-c=\"37\" xlink:href=\"#MJX-27-TEX-N-37\" transform=\"translate(4500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7965,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-27-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(9020.8,0)\"><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(500,0)\"></use><use data-c=\"32\" xlink:href=\"#MJX-27-TEX-N-32\" transform=\"translate(1000,0)\"></use><use data-c=\"31\" xlink:href=\"#MJX-27-TEX-N-31\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-27-TEX-N-30\" transform=\"translate(2000,0)\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(2500,0)\"></use><use data-c=\"33\" xlink:href=\"#MJX-27-TEX-N-33\" transform=\"translate(3000,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-27-TEX-N-34\" transform=\"translate(3500,0)\"></use><use data-c=\"39\" xlink:href=\"#MJX-27-TEX-N-39\" transform=\"translate(4000,0)\"></use></g></g></g></svg>.</p>\n<p>代码:</p>\n<!--code￼0-->\n","9e795a64e621a5464684d33ce1d4ea8ec160ba55":"<h1 id=\"梯度下降实现线性拟合矩阵推导及实现\"><a href=\"#梯度下降实现线性拟合矩阵推导及实现\" class=\"headerlink\" title=\"梯度下降实现线性拟合矩阵推导及实现\"></a>梯度下降实现线性拟合矩阵推导及实现</h1>\n<p>acm退役选手正在尝试新东西, 刚开的机器学习的坑.</p>\n<p>实现线性拟合实际上还是用高中最小二乘的那种东西, 只不过不是通过计算直接求得拟合的参数, 而是用梯度下降的方法计算逼近参数.</p>\n<p>用一个二维的直线拟合做例子. 高中就学过拟合实际上就是要找到一个直线  来尝试代表一组数据, 来达到预测的目的. 为了让预测的结果更加准确, 所以要让这个直线尽可能的逼近仅有的数据. 最小二乘法里衡量这个直线对这些仅有的数据的准确程度是用每个数据的真实值与估计值差的平方和, 也就是 <svg style=\"vertical-align: -0.8ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.628ex\" height=\"2.687ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -833.9 6023.5 1187.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-3A3\" d=\"M666 247Q664 244 652 126T638 4V0H351Q131 0 95 0T57 5V6Q54 12 57 17L73 36Q89 54 121 90T182 159L305 299L56 644L55 658Q55 677 60 681Q63 683 351 683H638V679Q640 674 652 564T666 447V443H626V447Q618 505 604 543T559 605Q529 626 478 631T333 637H294H189L293 494Q314 465 345 422Q400 346 400 340Q400 338 399 337L154 57Q407 57 428 58Q476 60 508 68T551 83T575 103Q595 125 608 162T624 225L626 251H666V247Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-1-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-1-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-5E\" d=\"M112 560L249 694L257 686Q387 562 387 560L361 531Q359 532 303 581L250 627L195 580Q182 569 169 557T148 538L140 532Q138 530 125 546L112 560Z\"></path><path id=\"MJX-1-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"3A3\" xlink:href=\"#MJX-1-TEX-N-3A3\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,-295.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1123,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1952.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-1-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2341.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-1-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3380.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\" transform=\"translate(4381,0)\"><g data-mml-node=\"mover\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-1-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(408.5,16) translate(-250 0)\"><use data-c=\"5E\" xlink:href=\"#MJX-1-TEX-N-5E\"></use></g></g></g><g data-mml-node=\"msup\" transform=\"translate(5198,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-1-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g></g></g></g></svg>, 这个值越小, 就说明这个直线对这些数据越准确.</p>\n<p>在这里给这些东西换个名字, 把 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"15.532ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6865.1 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-2-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-2-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-2-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-2-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-2-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-2-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-2-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1537,0)\"><use data-c=\"29\" xlink:href=\"#MJX-2-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2203.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3259.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-2-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-2-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(4387.3,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-2-TEX-N-2B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(5387.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-2-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-2-TEX-N-31\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(6293.1,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></svg> 叫做估计函数, 把 <svg style=\"vertical-align: -0.8ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"31.39ex\" height=\"2.757ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864.9 13874.3 1218.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-3-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-3-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-3A3\" d=\"M666 247Q664 244 652 126T638 4V0H351Q131 0 95 0T57 5V6Q54 12 57 17L73 36Q89 54 121 90T182 159L305 299L56 644L55 658Q55 677 60 681Q63 683 351 683H638V679Q640 674 652 564T666 447V443H626V447Q618 505 604 543T559 605Q529 626 478 631T333 637H294H189L293 494Q314 465 345 422Q400 346 400 340Q400 338 399 337L154 57Q407 57 428 58Q476 60 508 68T551 83T575 103Q595 125 608 162T624 225L626 251H666V247Z\"></path><path id=\"MJX-3-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-3-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-3-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-3-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1022,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-3-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-3-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1927.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(2372.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-3-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(3277.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3944.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5000.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(530.4,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345) scale(0.707)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-3-TEX-I-1D45A\"></use></g></g><rect width=\"1174.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"msubsup\" transform=\"translate(6414.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"3A3\" xlink:href=\"#MJX-3-TEX-N-3A3\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-3-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"TeXAtom\" transform=\"translate(755,-295.7) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1123,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8367.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(8756.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-3-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(9795.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-3-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10795.8,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-3-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11371.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"msub\" transform=\"translate(11760.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(12659.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"msup\" transform=\"translate(13048.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,363) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-3-TEX-N-32\"></use></g></g></g></g></svg> 叫做误差函数, 也就是loss.</p>\n<p>梯度下降算法是很好理解的, 但是因为矩阵的运算我运用不是很灵活, 线代当时也是速成的, 所以刚开始我并没有用矩阵来实现, 后来想了一段时间才写出来了矩阵形式的梯度下降.</p>\n<p>因为我之前没看过别人怎么实现的梯度下降, 所以下面的推导和实现方法的一些细节都是我自己决定的, 很可能与主流写法不一样, 麻烦许多, 这里先记录一下我自己的思考过程, 一会学习了别人的代码之后再来补充.</p>\n<p>因为要用矩阵实现, 所以首先要把这些函数矩阵化. 对于多参数的估计函数, 我们要估计的参数可以写成一个向量 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.925ex\" height=\"2.47ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -841.7 6596.8 1091.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-4-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-4-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-4-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-4-TEX-N-2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path><path id=\"MJX-4-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-4-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-4-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-4-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(278,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1183.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1628.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-4-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2533.8,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2978.4,0)\"><use data-c=\"2026\" xlink:href=\"#MJX-4-TEX-N-2026\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4317.1,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-4-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(4761.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-4-TEX-I-1D703\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(502,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-4-TEX-I-1D45B\"></use></g></g></g><g data-mml-node=\"msup\" transform=\"translate(5738,0)\"><g data-mml-node=\"mo\"><use data-c=\"5D\" xlink:href=\"#MJX-4-TEX-N-5D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(311,363) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-4-TEX-I-1D447\"></use></g></g></g></g></svg>, 先叫他参数向量, 记作 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 778 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-5-TEX-N-398\"></use></g></g></g></svg> . 因为有个常数项, 所以要估计的 <svg style=\"vertical-align: -0.023ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.061ex\" height=\"1.618ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 469 715\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-6-TEX-I-1D703\"></use></g></g></g></svg> 个数要比数据的参数多一个. 同时我们把训练数据写成向量形式, 因为训练数据的第一个要与参数向量的 <svg style=\"vertical-align: -0.375ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.049ex\" height=\"1.97ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 905.6 870.6\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-7-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-7-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\"></use></g></g></g></g></svg> 相乘, 所以这一位可以用一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></svg> 来补上, 这样这个向量就可以写成 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.159ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5816.5 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-9-TEX-N-2026\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z\"></path><path id=\"MJX-9-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(278,0)\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(778,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1222.7,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"mn\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2231.2,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2675.9,0)\"><use data-c=\"2026\" xlink:href=\"#MJX-9-TEX-N-2026\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4014.6,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"msub\" transform=\"translate(4459.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-9-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5538.5,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg>,  这样估计函数就可以写成:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -7.523ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.136ex\" height=\"16.176ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -3825 11110.3 7150\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-10-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-10-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-10-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-10-TEX-I-1D703\" d=\"M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z\"></path><path id=\"MJX-10-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-10-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-10-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-10-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-10-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-10-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path><path id=\"MJX-10-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-10-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1817,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2483.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3539.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4613.8,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-10-TEX-N-22C5\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(5114,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-10-TEX-S4-23A1\" transform=\"translate(0,2671)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-10-TEX-S4-23A3\" transform=\"translate(0,-2681)\"></use><svg width=\"667\" height=\"3752\" y=\"-1626\" x=\"0\" viewBox=\"0 938 667 3752\"><use data-c=\"23A2\" xlink:href=\"#MJX-10-TEX-S4-23A2\" transform=\"scale(1,9.349)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3075)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"30\" xlink:href=\"#MJX-10-TEX-N-30\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1675)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,275)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mn\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-10-TEX-N-32\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-1675)\"><g data-mml-node=\"mtd\" transform=\"translate(349.1,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-10-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3075)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D703\" xlink:href=\"#MJX-10-TEX-I-1D703\"></use></g><g data-mml-node=\"mi\" transform=\"translate(502,-150) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-10-TEX-I-1D45B\"></use></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1643.3,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-10-TEX-S4-23A4\" transform=\"translate(0,2671)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-10-TEX-S4-23A6\" transform=\"translate(0,-2681)\"></use><svg width=\"667\" height=\"3752\" y=\"-1626\" x=\"0\" viewBox=\"0 938 667 3752\"><use data-c=\"23A5\" xlink:href=\"#MJX-10-TEX-S4-23A5\" transform=\"scale(1,9.349)\"></use></svg></g></g><g data-mml-node=\"mo\" transform=\"translate(7702,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8757.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-10-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9832,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-10-TEX-N-22C5\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10332.3,0)\"><use data-c=\"398\" xlink:href=\"#MJX-10-TEX-N-398\"></use></g></g></g></svg></span></p>\n<p>同时我们可以把训练集写成矩阵形式:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -9.392ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"42.921ex\" height=\"19.914ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -4651.1 18971 8802.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-11-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-11-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-11-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-11-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-11-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-11-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-11-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-11-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-11-TEX-N-22EF\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z\"></path><path id=\"MJX-11-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-11-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-11-TEX-N-22F1\" d=\"M133 760Q133 784 150 802T193 820Q217 820 235 804T254 761Q254 736 237 718T194 700T151 717T133 760ZM580 460Q580 484 597 502T640 520Q664 520 682 504T701 461Q701 436 684 418T641 400T598 417T580 460ZM1027 160Q1027 184 1044 202T1087 220Q1111 220 1129 204T1148 161Q1148 136 1131 118T1088 100T1045 117T1027 160Z\"></path><path id=\"MJX-11-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-11-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-11-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-11-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1129.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-11-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2185.6,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-11-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2546.6,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-11-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2997.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-11-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3526.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-11-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3871.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4471.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5321.3,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-11-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(6377.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-11-TEX-S4-23A1\" transform=\"translate(0,3497.1)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-11-TEX-S4-23A3\" transform=\"translate(0,-3507.1)\"></use><svg width=\"667\" height=\"5404.2\" y=\"-2452.1\" x=\"0\" viewBox=\"0 1351 667 5404.2\"><use data-c=\"23A2\" xlink:href=\"#MJX-11-TEX-S4-23A2\" transform=\"scale(1,13.466)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3590.4)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1832.3)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,74.3)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1633.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4459.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9567.6,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-11-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-2143)\"><g data-mml-node=\"mtd\" transform=\"translate(111,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(2274,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(5100,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7151.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22F1\" xlink:href=\"#MJX-11-TEX-N-22F1\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(10207.9,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-11-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3853.7)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(1500,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-11-TEX-N-31\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(4326,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(605,-297.3) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-11-TEX-N-32\"></use></g></g></g><g data-mml-node=\"mtd\" transform=\"translate(7206.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"22EF\" xlink:href=\"#MJX-11-TEX-N-22EF\"></use></g></g><g data-mml-node=\"mtd\" transform=\"translate(9433.9,0)\"><g data-mml-node=\"msubsup\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,530.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-11-TEX-I-1D45A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1267,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(605,-138.9) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(11926.9,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-11-TEX-S4-23A4\" transform=\"translate(0,3497.1)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-11-TEX-S4-23A6\" transform=\"translate(0,-3507.1)\"></use><svg width=\"667\" height=\"5404.2\" y=\"-2452.1\" x=\"0\" viewBox=\"0 1351 667 5404.2\"><use data-c=\"23A5\" xlink:href=\"#MJX-11-TEX-S4-23A5\" transform=\"scale(1,13.466)\"></use></svg></g></g></g></g></svg></span></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -8.171ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.691ex\" height=\"17.474ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -4111.7 9587.5 7723.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-N-A0\" d=\"\"></path><path id=\"MJX-12-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-12-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-12-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-12-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-12-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-12-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-12-TEX-S4-23A2\" d=\"M319 0V602H403V0H319Z\"></path><path id=\"MJX-12-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-12-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-12-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-12-TEX-N-33\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><path id=\"MJX-12-TEX-N-22EE\" d=\"M78 30Q78 54 95 72T138 90Q162 90 180 74T199 31Q199 6 182 -12T139 -30T96 -13T78 30ZM78 440Q78 464 95 482T138 500Q162 500 180 484T199 441Q199 416 182 398T139 380T96 397T78 440ZM78 840Q78 864 95 882T138 900Q162 900 180 884T199 841Q199 816 182 798T139 780T96 797T78 840Z\"></path><path id=\"MJX-12-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-12-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-12-TEX-S4-23A5\" d=\"M263 0V602H347V0H263Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mtext\"><use data-c=\"A0\" xlink:href=\"#MJX-12-TEX-N-A0\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(250,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-12-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-12-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1540.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2596.6,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-12-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2957.6,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-12-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3408.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-12-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3937.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-12-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4282.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-12-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4882.6,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5650.3,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-12-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(6706.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-12-TEX-S4-23A1\" transform=\"translate(0,2957.7)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-12-TEX-S4-23A3\" transform=\"translate(0,-2967.7)\"></use><svg width=\"667\" height=\"4325.3\" y=\"-1912.7\" x=\"0\" viewBox=\"0 1081.3 667 4325.3\"><use data-c=\"23A2\" xlink:href=\"#MJX-12-TEX-S4-23A2\" transform=\"scale(1,10.777)\"></use></svg></g><g data-mml-node=\"mtable\" transform=\"translate(667,0)\"><g data-mml-node=\"mtr\" transform=\"translate(0,3218.3)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,1675)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"32\" xlink:href=\"#MJX-12-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,131.7)\"><g data-mml-node=\"mtd\" transform=\"translate(35.4,0)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mn\" transform=\"translate(389,0)\"><use data-c=\"33\" xlink:href=\"#MJX-12-TEX-N-33\"></use></g><g data-mml-node=\"mo\" transform=\"translate(889,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-1818.3)\"><g data-mml-node=\"mtd\" transform=\"translate(634.7,0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"22EE\" xlink:href=\"#MJX-12-TEX-N-22EE\"></use></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0,-3361.7)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-12-TEX-I-1D466\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(523,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(389,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-12-TEX-I-1D45B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(989,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(2214.4,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-12-TEX-S4-23A4\" transform=\"translate(0,2957.7)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-12-TEX-S4-23A6\" transform=\"translate(0,-2967.7)\"></use><svg width=\"667\" height=\"4325.3\" y=\"-1912.7\" x=\"0\" viewBox=\"0 1081.3 667 4325.3\"><use data-c=\"23A5\" xlink:href=\"#MJX-12-TEX-S4-23A5\" transform=\"scale(1,10.777)\"></use></svg></g></g></g></g></svg></span></p>\n<p>这样我们计算 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.529ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4212 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-13-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-13-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-13-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-13-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-13-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"210E\" xlink:href=\"#MJX-13-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(576,0)\"><use data-c=\"28\" xlink:href=\"#MJX-13-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(965,0)\"><use data-c=\"1D461\" xlink:href=\"#MJX-13-TEX-I-1D461\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1326,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-13-TEX-I-1D45F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1777,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-13-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2306,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-13-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2651,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-13-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3251,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3823,0)\"><use data-c=\"29\" xlink:href=\"#MJX-13-TEX-N-29\"></use></g></g></g></svg>, 就可以惊奇的发现得到一个估计量组成的矩阵.</p>\n<p>这是loss函数就可以写成</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.069ex\" height=\"4.613ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1342 11080.6 2039\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-14-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-14-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-14-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-14-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-14-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-14-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-14-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-14-TEX-N-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path><path id=\"MJX-14-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-14-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-14-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-14-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-14-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-14-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-14-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-14-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2466.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-14-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3522.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(659,676)\"><use data-c=\"31\" xlink:href=\"#MJX-14-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-14-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-14-TEX-I-1D45A\"></use></g></g><rect width=\"1578\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5340.6,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5618.6,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5896.6,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-14-TEX-I-210E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6472.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-14-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6861.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-14-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7713.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-14-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8324.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-14-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9325,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-14-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10088,0) translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(10366,0)\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"7C\" xlink:href=\"#MJX-14-TEX-N-7C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(311,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-14-TEX-N-32\"></use></g></g></g></g></svg></span></p>\n<p>然后我们需要求 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.952ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2189 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-15-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-15-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.645ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -705 778 727\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-16-TEX-N-398\"></use></g></g></g></svg> 的偏导, 这是一个标量对向量的偏导, 但是这个模长不是很好处理, 所以我们转化成向量对向量的偏导, 即把loss函数写为:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.577ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.277ex\" height=\"4.613ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1342 14708.2 2039\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-17-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-17-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-17-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-17-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-17-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-17-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-17-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-17-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1800,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2466.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3522.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(659,676)\"><use data-c=\"31\" xlink:href=\"#MJX-17-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-17-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(500,0)\"><use data-c=\"1D45A\" xlink:href=\"#MJX-17-TEX-I-1D45A\"></use></g></g><rect width=\"1578\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(5340.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5729.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-17-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6581.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7581.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-17-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8582,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-17-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(9345,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-17-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10314.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10703.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-17-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(11555.8,0)\"><use data-c=\"398\" xlink:href=\"#MJX-17-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(12556,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-17-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(13556.2,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-17-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(14319.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>求全微分:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"44.148ex\" height=\"2.583ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -891.7 19513.5 1141.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-18-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-18-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-18-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-18-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-18-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-18-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-18-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-18-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-18-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-18-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-18-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1430.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-18-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3727.6,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4247.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"msup\" transform=\"translate(5025.6,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-18-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5995.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6384.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7236.4,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8236.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-18-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9236.8,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-18-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9999.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10611,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-18-TEX-N-2B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11611.2,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12000.2,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12852.2,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13852.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-18-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14852.7,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-18-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(15615.7,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-18-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(16585.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-18-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(16974.5,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-18-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(17826.5,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-18-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(18346.5,0)\"><use data-c=\"398\" xlink:href=\"#MJX-18-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(19124.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-18-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>整理得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"22.875ex\" height=\"2.583ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -891.7 10110.8 1141.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-19-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-19-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-19-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-19-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-19-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-19-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-19-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-19-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-19-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-19-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1430.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2486.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-19-TEX-N-32\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2986.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3375.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-19-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4227.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-19-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(5227.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-19-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6228,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-19-TEX-I-1D44C\"></use></g><g data-mml-node=\"msup\" transform=\"translate(6991,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-19-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(7960.8,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-19-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8812.8,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-19-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(9332.8,0)\"><use data-c=\"398\" xlink:href=\"#MJX-19-TEX-N-398\"></use></g></g></g></svg></span></p>\n<p>可得:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.602ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.482ex\" height=\"4.749ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1391 9495 2099\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-20-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-20-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-20-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-20-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-20-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-20-TEX-I-1D447\" d=\"M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z\"></path><path id=\"MJX-20-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-20-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-20-TEX-I-1D44C\" d=\"M66 637Q54 637 49 637T39 638T32 641T30 647T33 664T42 682Q44 683 56 683Q104 680 165 680Q288 680 306 683H316Q322 677 322 674T320 656Q316 643 310 637H298Q242 637 242 624Q242 619 292 477T343 333L346 336Q350 340 358 349T379 373T411 410T454 461Q546 568 561 587T577 618Q577 634 545 637Q528 637 528 647Q528 649 530 661Q533 676 535 679T549 683Q551 683 578 682T657 680Q684 680 713 681T746 682Q763 682 763 673Q763 669 760 657T755 643Q753 637 734 637Q662 632 617 587Q608 578 477 424L348 273L322 169Q295 62 295 57Q295 46 363 46Q379 46 384 45T390 35Q390 33 388 23Q384 6 382 4T366 1Q361 1 324 1T232 2Q170 2 138 2T102 1Q84 1 84 9Q84 14 87 24Q88 27 89 30T90 35T91 39T93 42T96 44T101 45T107 45T116 46T129 46Q168 47 180 50T198 63Q201 68 227 171L252 274L129 623Q128 624 127 625T125 627T122 629T118 631T113 633T105 634T96 635T83 636T66 637Z\"></path><path id=\"MJX-20-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(292.5,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-20-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-20-TEX-I-1D43D\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-20-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"398\" xlink:href=\"#MJX-20-TEX-N-398\"></use></g></g><rect width=\"1544\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2061.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-20-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3117.6,0)\"><use data-c=\"32\" xlink:href=\"#MJX-20-TEX-N-32\"></use></g><g data-mml-node=\"msup\" transform=\"translate(3617.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44B\" xlink:href=\"#MJX-20-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(936.2,413) scale(0.707)\"><use data-c=\"1D447\" xlink:href=\"#MJX-20-TEX-I-1D447\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5101.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-20-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5490.6,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-20-TEX-I-1D44B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6342.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-20-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7342.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-20-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8343,0)\"><use data-c=\"1D44C\" xlink:href=\"#MJX-20-TEX-I-1D44C\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9106,0)\"><use data-c=\"29\" xlink:href=\"#MJX-20-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>每次迭代让当前的 <svg style=\"vertical-align: -0.817ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14.526ex\" height=\"2.852ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -899.6 6420.4 1260.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-N-398\" d=\"M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z\"></path><path id=\"MJX-21-TEX-N-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"></path><path id=\"MJX-21-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-21-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-21-TEX-I-1D6FC\" d=\"M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z\"></path><path id=\"MJX-21-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-21-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1055.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3A\" xlink:href=\"#MJX-21-TEX-N-3A\"></use></g><g data-mml-node=\"text\" transform=\"translate(278,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-21-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(2389.6,0)\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3389.8,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-21-TEX-N-2212\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4390,0)\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-21-TEX-I-1D6FC\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5030,0)\"><g data-mml-node=\"mrow\" transform=\"translate(271.3,394) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-21-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-21-TEX-I-1D43D\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-21-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"398\" xlink:href=\"#MJX-21-TEX-N-398\"></use></g></g><rect width=\"1150.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 即可, 其中 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.448ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 640 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-I-1D6FC\" d=\"M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D6FC\" xlink:href=\"#MJX-22-TEX-I-1D6FC\"></use></g></g></g></svg> 为学习率.</p>\n<p>这样, 梯度下降的所有过程都有了数学形式, 也就很好实现了.</p>\n<p>第一次写觉得自己不可能写对, 跑一遍果然成了梯度上升算法, 查了半天没查出错, 把学习率调低就行了...我居然一遍写对了.</p>\n<p>矩阵求导还是太难了, 很不熟练, 以后再多研究研究这些数学基础, 好喜欢这种用数学推导出的有用的东西.</p>\n<p>附上代码:</p>\n<!--code￼0-->\n<h6 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h6>\n","e619b44f6c80807e38d1ea8b179fa02066e4dd25":"<p>好家伙, 我已经三个多月没写东西啦!</p>\n<p>最近两天先写点基础的, 这两天在看jyy的操作系统课和6.S081, 恶补一下操作系统的知识.</p>\n<p>过几天写一下这个学期一直在研究的分布式系统, Raft啥的.</p>\n<!--more-->\n<h2 id=\"互斥\"><a href=\"#互斥\" class=\"headerlink\" title=\"互斥\"></a>互斥</h2>\n<p>互斥就是禁止多个线程同时访问同一个资源, 这个资源叫做临界资源.\n并行编程最大的几个问题之一是多个线程的执行流会被来回切换, 你永远想象不到一个线程会在什么时候被打断.\n还有就是编译器, 现代处理器都会在不同级别上乱序执行, 不过这个也不是今天讨论的重点, 这个主要靠barrier去解决.</p>\n<p>比如这样的:</p>\n<!--code￼0-->\n<p>一个失败的锁的尝试, 多个线程可能同时判断到locked为unlock.</p>\n<p>重点在于处理器不保证load+store的原子性</p>\n<h2 id=\"Peterson算法\"><a href=\"#Peterson算法\" class=\"headerlink\" title=\"Peterson算法\"></a>Peterson算法</h2>\n<p>Peterson算法实现了两个线程的互斥, 不需要任何复杂原子操作.</p>\n<p>两个线程争夺临界区: 每个线程自己有个标志, 临界区有个标志turn</p>\n<ol>\n<li>把自己的标志亮起来.</li>\n<li>把临界区的标志turn改为 <strong>对方</strong>.</li>\n<li>如果对方的标志亮起来, 并且turn是对方, 就等待, 否则进入临界区.</li>\n<li>出临界区, 熄灭自己的标志.</li>\n</ol>\n<p>感性理解:</p>\n<ol>\n<li>如果只有一个线程想要进入临界区, 那显然正确.</li>\n<li>两个线程同时想要进入临界区, 两个线程都会把自己的标志亮起来, 并且去修改turn.</li>\n<li>先修改turn的那个线程把turn改为了对方, 但是后面另一个线程会把自己的turn改回自己.</li>\n<li>turn决定了到底谁进入临界区, 手快🈶️, 手慢🈚️.</li>\n</ol>\n<p>感性理解正确性:</p>\n<ol>\n<li>如果两个线程都想访问临界区, 但是一个线程A比较快, 把turn改为了对方:\n<ol>\n<li>如果另一个线程B还没有亮起自己的标志, 那A就直接进了, 一会B亮标志再改turn的时候会因为turn被自己改成了A而阻塞, 直到A退出临界区, 灭掉了A的标志.</li>\n<li>如果另一个线程已经亮起了自己的标志, 那A会阻塞到B把turn改为A之后, A进入临界区, B同样会被阻塞.</li>\n</ol>\n</li>\n<li>也就是说, 因为大家都会把turn改为对方, 所以大家都会阻塞直到所有人都改了turn, 这时候就根据turn是谁决定谁进入临界区.</li>\n</ol>\n<p>一些思考:</p>\n<ol>\n<li>能不能先改turn, 再亮标志?\n<ol>\n<li>肯定不行, 假如A先把turn改成了B, 然后因为这时候A没有亮标志, 所以B可以直接改turn为A+亮标志+进入临界区, 这时候A因为看到turn为自己, 也可以直接进入临界区, 就寄了.</li>\n</ol>\n</li>\n</ol>\n<p>Peterson算法属于比较一般的互斥算法, 只要内存模型是顺序一致的(Sequential Consistent), 就可以实现两个线程的互斥, 不需要任何复杂原子性的操作. 类似的算法还有dekker, 都比较复杂, 现代操作系统一般可以依赖于硬件实现的原子操作来简化互斥.</p>\n<p>为了防止编译器和处理器在不同级别上的乱序优化, 可能需要在某些地方加不同级别的Barrier.</p>\n<h2 id=\"Model-Checking\"><a href=\"#Model-Checking\" class=\"headerlink\" title=\"Model Checking\"></a>Model Checking</h2>\n<p>使用工具来检验模型的正确性!</p>\n<p>其实就遍历多个线程状态机转移的每一种情况, bfs枚举.</p>\n<p>可以使用python来模拟这个操作, 每一行语句后面加一个yield, 每一个线程包装成一个generator, 一次__next__() 就相当于一个线程执行了一步, 每一行都相当于一个原子操作.</p>\n<p>现代软件自动化测试工具会加很多优化, 比如如果两个线程的某几步涉及到的内存完全不相关, 那他们这几步的顺序是无所谓的…诸如此类.</p>\n<p>还可以用来检查filesystem的正确性, 和其他内存模型下的算法正确性…</p>\n<h2 id=\"锁\"><a href=\"#锁\" class=\"headerlink\" title=\"锁\"></a>锁</h2>\n<p>但是Peterson的假设太弱了, 没有任何复杂的原子操作, 只有load和store.</p>\n<p>自旋锁是加了一个原子指令: lock.</p>\n<p>互斥锁是增加了操作系统作为调度者.</p>\n<p>Futex是结合了自旋锁和互斥锁的优点, 目前使用的Mutex很多都是Futex.</p>\n<h3 id=\"自旋锁-Spinning-Lock\"><a href=\"#自旋锁-Spinning-Lock\" class=\"headerlink\" title=\"自旋锁 (Spinning Lock)\"></a>自旋锁 (Spinning Lock)</h3>\n<p>lock xchg %1, %2. 原子性的交换%1和%2.</p>\n<p>实际上这就是一个load+store:</p>\n<ol>\n<li>load了%1到%2.</li>\n<li>Store了%2到%1.</li>\n</ol>\n<p>如果一个有共享内存a, 0代表未上锁, 1代表上锁.</p>\n<p>那么让b为1, xchg a, b, 检查a</p>\n<ol>\n<li>如果b是1, 说明本来a本来就是1, 说明已经有人上过锁了, 返回xchg重试.</li>\n<li>如果b是0, 说明本来a是0, 没有人上锁, 现在我们把a换成了1, 我们可以安心访问临界资源了.</li>\n<li>从临界区退出后, 把a改回0.</li>\n</ol>\n<h4 id=\"自旋锁的缺陷\"><a href=\"#自旋锁的缺陷\" class=\"headerlink\" title=\"自旋锁的缺陷\"></a>自旋锁的缺陷</h4>\n<ol>\n<li>访问共享变量的自旋会出发多处理器之间的同步, 拖累性能.</li>\n<li>一个线程抢占到锁之后, 其他处理器都在空转!</li>\n<li>获得自旋锁的线程可能会被操作系统切换出去! 其他线程啥也别想干.</li>\n</ol>\n<h4 id=\"自旋锁的使用场景\"><a href=\"#自旋锁的使用场景\" class=\"headerlink\" title=\"自旋锁的使用场景\"></a>自旋锁的使用场景</h4>\n<ol>\n<li>临界区几乎不拥堵, 不太会出现多个线程抢占的情况.</li>\n<li>持有自旋锁的时候可以禁止流切换, 但是一般的程序也没这个权利.</li>\n</ol>\n<p>所以基本只有在操作系统内核中才会使用自旋锁:</p>\n<ol>\n<li>操作系统可以关闭中断和抢占, 保证锁的持有者很快就会释放锁</li>\n</ol>\n<p>但是即使这样也很难用好自旋锁.</p>\n<h3 id=\"Lock指令\"><a href=\"#Lock指令\" class=\"headerlink\" title=\"Lock指令\"></a>Lock指令</h3>\n<h4 id=\"x86的lock\"><a href=\"#x86的lock\" class=\"headerlink\" title=\"x86的lock\"></a>x86的lock</h4>\n<p>在三十年前的80486时期就已经支持双路处理器, 支持lock了.</p>\n<p>lock指令会保证, 在lock之前的所有store都已经写入内存.</p>\n<p>在早期缓存是所有处理器共享的时候, 一个处理器执行lock指令时, 会把总线锁上, 这样其他处理就不会干扰他的原子操作.</p>\n<p>但是现代处理器内部就有缓存, x86就要在L1级别的cache上保证一致性. 所有的L1 Cache都是串起来的, 一个处理器执行了原子性更改内存的操作, 需要更改所有出现这个块的缓存.</p>\n<p>这也是x86背负的巨大历史包袱之一.</p>\n<h4 id=\"RISC-V的另一种lock实现\"><a href=\"#RISC-V的另一种lock实现\" class=\"headerlink\" title=\"RISC-V的另一种lock实现\"></a>RISC-V的另一种lock实现</h4>\n<p>常见的原子操作基本都分为三步:</p>\n<ol>\n<li>load.</li>\n<li>exec, 即处理器自己在进行计算.</li>\n<li>store.</li>\n</ol>\n<p>RISC-V认为exec操作可以多次进行, 影响不大, 所以使用了Load-Reserved/Store-Conditional策略:</p>\n<ol>\n<li>在执行原子操作前, 把需要影响到的内存打上Reserved标记.</li>\n<li>如果计算期间有中断, 或者有其他处理器写入, 标记都会清除.</li>\n<li>store时判断是否有标记, 没有标记就重试.</li>\n</ol>\n<h3 id=\"互斥锁-Mutex\"><a href=\"#互斥锁-Mutex\" class=\"headerlink\" title=\"互斥锁 (Mutex)\"></a>互斥锁 (Mutex)</h3>\n<p>互斥锁可以让没抢到锁的线程被操作系统阻塞, 操作系统可以去执行其他线程.</p>\n<p>当然, 一般的用户程序也没这个权利, 所以互斥锁需要通过系统调用进入内核.</p>\n<ol>\n<li><strong>syscall(SYSCALL_lock, &amp;lk);</strong> 尝试获取锁lk, 如果失败, 进入阻塞.</li>\n<li><strong>syscall(SYSCALL_unlock, &amp;lk);</strong> 释放lk, 唤醒其他因为lk而阻塞的线程.</li>\n</ol>\n<p>操作系统的操作:</p>\n<ol>\n<li>先获取锁的线程, 得到锁, 操作系统让lk=1.</li>\n<li>后获取锁的线程, 进入阻塞队列.</li>\n<li>得到锁的线程释放锁后, 唤醒阻塞队列中的一个线程执行.</li>\n<li>如果阻塞队列为空, lk=0;</li>\n</ol>\n<p>操作系统使用自旋锁来保证自己的操作是原子的.</p>\n<h3 id=\"Futex\"><a href=\"#Futex\" class=\"headerlink\" title=\"Futex\"></a>Futex</h3>\n<p>自旋锁的两种情况:</p>\n<ol>\n<li>更快的fast path: xchg成功, 进入临界区, 开销很小.</li>\n<li>更慢的slow path: xchg失败, 浪费资源自旋.</li>\n</ol>\n<p>Mutex的两种情况:</p>\n<ol>\n<li>更快的slow path: 上锁失败, 直接阻塞.</li>\n<li>更慢的fast path: 无论如何都要进入内核.</li>\n</ol>\n<p>Fast Userspace muTexes (Futex) 的折衷:</p>\n<ol>\n<li>Fast path: 一条原子指令, 上锁成功直接返回.</li>\n<li>Slow path: 上锁失败, 阻塞.</li>\n</ol>\n<p>Linux大范围地使用Futex代替Mutex.</p>\n<p>在FreeBSD, Linux中的Golang里的sync.Mutex, 实际上也是Futex.</p>\n","94b8fde8deaf9f9d2a36856d82e0acf37dd451d5":"<h1 id=\"nlogn的最长不上升子序列\"><a href=\"#nlogn的最长不上升子序列\" class=\"headerlink\" title=\"nlogn的最长不上升子序列\"></a>nlogn的最长不上升子序列</h1>\n<p>nlogn的最长不上升子序列虽然不难,也很常用,但是很容易打错,<s>一不注意就把变量名打错了</s>.</p>\n<p>主要思想是用二分优化\"寻找a[j]&gt;=a[i]中f[j]最大的j\"</p>\n<!--code￼0-->\n<p>既然使用二分,就要寻找一个有单调性的东西.</p>\n<!--more-->\n<p>在原有的基础上新开一个数组temp[],temp[i]表示f[j] = i的最大的a[j],翻译成人话就是f值等于i的最大的数是多少.</p>\n<p>因为是最长不上升子序列,所以在f值相同时,这个数越大越有价值.</p>\n<p>可以发现这个temp是有单调性的,严格证明我不会,可以用反证法瞎搞搞证出来.</p>\n<p>因为要找到一个最大的i,即f值,所以二分是要注意下一个小细节.</p>\n<p>假如按照temp[1]到temp[N]这样从左到右写出来,我们要做的就是找出满足temp[k] &gt;= a[nown]的最右边的值</p>\n<p>所以在二分时,如果当前二分的中点值等于a[nown],应当把左区间端点的值设置为mid,而不是mid+1,防止丢失解.</p>\n<p>如果二分中点小于a[nown],可以大胆的将右端点设为mid-1</p>\n<p>二分部分程序:</p>\n<!--code￼1-->\n<p>这样就实现了去掉f并优化时间复杂度到O(nlogn).</p>\n<p>2018.4.5 22:20</p>\n","10e048db0e2af6e712b7373900b3afd11da4784f":"<p>#P1004 方格取数</p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>设有N*N*的方格图(N&lt;=9)，我们将其中的某些方格中填入正整数，而其他的方格中则放入数字0。如下图所示（见样例）：</p>\n<!--more-->\n<p>A\n0  0  0  0  0  0  0  0</p>\n<p>0  0 13  0  0  6  0  0</p>\n<p>0  0  0  0  7  0  0  0</p>\n<p>0  0  0 14  0  0  0  0</p>\n<p>0 21  0  0  0  4  0  0</p>\n<p>0  0 15  0  0  0  0  0</p>\n<p>0 14  0  0  0  0  0  0</p>\n<p>0  0  0  0  0  0  0  0</p>\n<p>.                       B</p>\n<p>某人从图的左上角的A点出发，可以向下行走，也可以向右走，直到到达右下角的B点。在走过的路上，他可以取走方格中的数（取走后的方格中将变为数字0）。</p>\n<p>此人从A点到B点共走两次，试找出2条这样的路径，使得取得的数之和为最大。</p>\n<p>##输入输出格式</p>\n<p>###输入格式：</p>\n<p>输入的第一行为一个整数N（表示N*N的方格图），接下来的每行有三个整数，前两个表示位置，第三个数为该位置上所放的数。一行单独的0表示输入结束。</p>\n<p>###输出格式：</p>\n<p>只需输出一个整数，表示2条路径上取得的最大的和。</p>\n<p>##输入输出样例</p>\n<p>###输入样例#1：</p>\n<p>8\n2 3 13\n2 6  6\n3 5  7\n4 4 14\n5 2 21\n5 6  4\n6 3 15\n7 2 14\n0 0  0</p>\n<p>###输出样例#1：</p>\n<p>67</p>\n<p>##说明</p>\n<p>NOIP 2000 提高组第四题</p>\n<p>#分析</p>\n<p>根据数据范围，显然不能采用搜索。</p>\n<p>如果直接按照题目编写dp，显然具有后效性。在dp中无法记录走过的路径，更不可能把“走过的路径上的数变为0”，所以对于这样的问题，一般是采用多维dp，同时将路径选出。</p>\n<p>为了方便，可以想象成有两个人，同时从起点出发，走到终点。</p>\n<p>用dp[i][j][k][l]表示两人分别走到了(i,j)和(k,l)这两个点。</p>\n<p>先不考虑走过的数变为0的情况，则dp[i][j][k][l]受到这四个状态的控制：</p>\n<p><code>dp[i-1][j][k-1][l]</code></p>\n<p><code>dp[i-1][j][k][l-1]</code></p>\n<p><code>dp[i][j-1][k-1][l]</code></p>\n<p><code>dp[i][j-1][k][l-1]</code></p>\n<p>因为要取最大的数，可以得到状态转移方程如下</p>\n<p><code>dp[i][j][k][l] = max{dp[i-1][j][k-1][l],dp[i-1][j][k][l-1],dp[i][j-1][k-1][l],dp[i][j-1][k][l-1]} + a[i][j] + a[k][l];</code></p>\n<p>下面可以考虑走过的数变为0这个要求了。</p>\n<p>题目告诉我们，对于每次决策，必须且只有“向下走1格”和“向右走1格”这两种可能。</p>\n<p>所以，无论在什么时候，两个人走到的点距离起点的曼哈顿距离都是一样的，即<code>i+j=k+l</code></p>\n<p>并且，对于一个点(i,j)，从原点出发，无论怎么走，到这个点所经过的距离均为<code>i+j</code></p>\n<p>所以可以得知，当两个人选的路程有公共点时，两个人一定同时到达这个公共点。</p>\n<p>所以只需在进行dp的时候，判断i,j是否等于k,l,如果等于，则在转移的时候只需加一遍这个格上的数即可。</p>\n<p>#####即</p>\n<p><code>dp[i][j][k][l] = max{dp[i-1][j][k-1][l],dp[i-1][j][k][l-1],dp[i][j-1][k-1][l],dp[i][j-1][k][l-1]} + a[i][j];</code></p>\n<p>则程序不难写出</p>\n<!--code￼0-->\n<p>复杂度达到O(n^4)\n尽管对于这个题目而言，这么高的复杂度也能AC，但是仍有简单有效的优化方法。</p>\n<p>首先考虑复杂度这么高的原因</p>\n<p>#####状态参数太多</p>\n<p>对于所有状态，我们需要四个参数才能区分他们，这是很不必要的。</p>\n<p>前面提到过<code>i+j=k+l</code>这个关系。</p>\n<p>变形一下，可得到<code>l=i+j-k</code>。</p>\n<p>###！！！</p>\n<p>也就是说，l这个参数可以通过前面三个参数推出来</p>\n<p>那我还存他干什么</p>\n<p>用dp[i][j][k]表示两人分别走到了(i,j)和(k,i+j-k)这两个点。</p>\n<p>则状态转移方程为</p>\n<p><code>dp[i][j][k] = max{dp[i-1][j][k-1],dp[i-1][j][k],dp[i][j-1][k-1],dp[i][j-1][k]} + a[i][j] + a[k][i+j-k];(i,j != k,l)</code></p>\n<p><code>dp[i][j][k] = max{dp[i-1][j][k-1],dp[i-1][j][k],dp[i][j-1][k-1],dp[i][j-1][k]} + a[i][j];(i,j == k,l)</code></p>\n<p>优化后的程序如下</p>\n<!--code￼1-->","65397790ac55a5250fecedcc589b1f2ee436ae63":"<h1 id=\"P1027-Car的旅行路线\"><a href=\"#P1027-Car的旅行路线\" class=\"headerlink\" title=\"P1027 Car的旅行路线\"></a>P1027 Car的旅行路线</h1>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>又到暑假了，住在城市A的Car想和朋友一起去城市B旅游。她知道每个城市都有四个飞机场，分别位于一个矩形的四个顶点上，同一个城市中两个机场之间有一条笔直的高速铁路，第I个城市中高速铁路了的单位里程价格为Ti，任意两个不同城市的机场之间均有航线，所有航线单位里程的价格均为t。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/8.png\" alt=\"p1027\"></p>\n<!--more-->\n<p>图例（从上而下）</p>\n<p>机场 高速铁路</p>\n<p>飞机航线</p>\n<p>注意：图中并没有标出所有的铁路与航线。</p>\n<p>那么Car应如何安排到城市B的路线才能尽可能的节省花费呢?她发现这并不是一个简单的问题，于是她来向你请教。</p>\n<p>找出一条从城市A到B的旅游路线，出发和到达城市中的机场可以任意选取，要求总的花费最少。</p>\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<h3 id=\"输入格式：\"><a href=\"#输入格式：\" class=\"headerlink\" title=\"输入格式：\"></a>输入格式：</h3>\n<p>第一行为一个正整数n(0&lt;=n&lt;=10)，表示有n组测试数据。</p>\n<p>每组的第一行有四个正整数s，t，A，B。</p>\n<p>S(0&lt;S&lt;=100)表示城市的个数，t表示飞机单位里程的价格，A，B分别为城市A，B的序号，(1&lt;=A，B&lt;=S)。</p>\n<p>接下来有S行，其中第I行均有7个正整数xi1，yi1，xi2，yi2，xi3，yi3，Ti，这当中的(xi1，yi1)，(xi2，yi2)，(xi3，yi3)分别是第I个城市中任意三个机场的坐标，T I为第I个城市高速铁路单位里程的价格。</p>\n<h3 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h3>\n<p>共有n行，每行一个数据对应测试数据。 保留一位小数</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<h3 id=\"输入样例-1：\"><a href=\"#输入样例-1：\" class=\"headerlink\" title=\"输入样例#1：\"></a>输入样例#1：</h3>\n<p>1\n3 10 1 3</p>\n<p>1 1 1 3 3 1 30</p>\n<p>2 5 7 4 5 2 1</p>\n<p>8 6 8 8 11 6 3</p>\n<h3 id=\"输出样例-1：\"><a href=\"#输出样例-1：\" class=\"headerlink\" title=\"输出样例#1：\"></a>输出样例#1：</h3>\n<p>47.5\n#分析</p>\n<p>####<s>披着蓝皮的大水题</s></p>\n<p>每一个机场看作一个节点，所有道路和航线看成边，边权为距离×价格，跑一遍floyd后，枚举起点城市终点城市的所有机场判断最小价格即可。    #include <iostream></iostream></p>\n<!--code￼0-->","e8eb1662edb11336c59f7c4613f236e9039e34c1":"<p>这题刚开始没想到可以枚举第二个客栈,选择了枚举第一个客栈.</p>\n<p>因为只有一次询问,所以每个客栈最低消费的绝对值是没有意义的,有意义的只有这个客栈的最低消费与p的相对大小.</p>\n<p>那么可以用1代表最低消费小于等于p,0代表大于p,对这个数组进行一次前缀和,那么这个前缀和就是一个具有单调性的数组.</p>\n<p>这样枚举第一个客栈之后,可以用二分在logn时间内寻找出第一家可以喝咖啡的客栈,这家客栈之后的所有与第一家客栈色调相同的客栈都可以作为第二家客栈.</p>\n<!--more-->\n<p>可以预处理出每一家客栈之后每种色调的客栈有多少个.</p>\n<p>小细节:</p>\n<ol>\n<li>因为选择喝咖啡的客栈可以作为第一家或第二家客栈,所以在二分的时候寻找的不是前缀和为第一家客栈的前缀和+1的客栈,而是第一家客栈之前一家客栈的前缀和+1的客栈.即寻找的不是s[i]+1,而是s[i-1]+1.</li>\n<li>还是因为选择喝咖啡的客栈可以作为第一家或第二家客栈,预处理每一家客栈之后的每种色调的客栈数量时要包括这家客栈.但是这样会导致计算两人住在同一家客栈的方案,所以在枚举第一家客栈时,计算出可以去哪喝咖啡后,如果可以喝咖啡的客栈与第一家客栈相同,方案数应-1.</li>\n</ol>\n<p>放一下我巨丑的代码</p>\n<!--code￼0-->","8b38a6d1348a5110f922f3166ad8b49b436c92de":"<h1 id=\"P3933-Chtholly-Nota-Seniorious\"><a href=\"#P3933-Chtholly-Nota-Seniorious\" class=\"headerlink\" title=\"P3933 Chtholly Nota Seniorious\"></a>P3933 Chtholly Nota Seniorious</h1>\n<h2 id=\"题目背景\"><a href=\"#题目背景\" class=\"headerlink\" title=\"题目背景\"></a>题目背景</h2>\n<p>大样例下发链接: <a href=\"https://pan.baidu.com/s/1nuVpRS1\">https://pan.baidu.com/s/1nuVpRS1</a> 密码: sfxg</p>\n<p><strong>こんなにも、たくさんの幸せをあの人に分けてもらった</strong></p>\n<p><strong>だから、きっと</strong></p>\n<p><strong>今の、私は</strong></p>\n<p><strong>谁が何と言おうと</strong></p>\n<p><strong>世界一、幸せな女の子だ</strong></p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9193.png\" alt=\"img\"></p>\n<!--more-->\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>——“假如……我是说假如喔。</p>\n<p>万一我再过五天就会死，你能不能对我温柔一点？”</p>\n<p>巨大的六号兽五天后将袭击浮游大陆。</p>\n<p>无数次计算得到的残酷数据表明，只有圣剑瑟尼欧尼斯的适格精灵——珂朵莉·诺塔·瑟尼欧尼斯(Chtholly Nota Seniorious)开启妖精乡之门，才可以以生命为代价守住浮游岛。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9228.png\" alt=\"img\"></p>\n<p>“至少，我也希望自己不用消失，也想让别人记住。我也想留下羁绊啊。”</p>\n<p>留给妖精少女珂朵莉的时间似乎已经不多了。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9229.png\" alt=\"img\"></p>\n<p>年轻的二等技官，妖精仓库的管理员，世界上最后一个人类——威廉·克梅<strong>修</strong>，数百年前曾经是一名准勇者，掌握着成为一名勇者所需要的所有知识。</p>\n<p>大战在即，调整圣剑的状态成为了一项重要的任务。</p>\n<!--code￼0-->\n<p>威廉需要调整圣剑的状态，因此他将瑟尼欧尼斯拆分护符，组成了一个nn 行mm 列的矩阵。</p>\n<p>每一个护符都有自己的魔力值。现在为了测试圣剑，你需要将这些护符分成 A,B两部分。</p>\n<p>要求如下：</p>\n<ol>\n<li>圣剑的所有护符，恰好都属于两部分中的一部分。</li>\n<li>每个部分内部的方块之间，可以通过上下左右相互到达，而且每个内部的方块之间互相到达，最多允许拐一次弯。</li>\n</ol>\n<p>例如</p>\n<!--code￼1-->\n<p>其中(1)(2)是不允许的分法，(3)是允许的分法。在(2)中，a属于A区域，这两个a元素之间互相到达，没有办法最多只拐一次弯。</p>\n<p>现在要问，所有合法的分法中，A区域的极差与B区域的极差 中间较大的一个的 <strong>最小值</strong> 是多少？</p>\n<p>好心而可爱的在一旁默默观察奈芙莲悄悄地告诉你，极差就是区域内最大值减去最小值。</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9230.png\" alt=\"img\"></p>\n<p>夜晚的风吹拂着，68号岛上的景色竟与地上的森林无异。转念又想，黄金妖精本身就是与森林之中出现，成长，消亡的神秘存在啊。</p>\n<p>时间不早了，早上训练中落败的珂朵莉即将回来了。您要尽快和威廉一起调整好圣剑，千万不能迟哟。</p>\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<p>输入格式：</p>\n<p>第一行两个自然数<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 600 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.986ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 878 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D45A\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45A\" xlink:href=\"#MJX-2-TEX-I-1D45A\"></use></g></g></g></svg></p>\n<p>接下来n 行，每行m 个自然数<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.54ex\" height=\"2.286ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 1564.9 1010.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(783,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g></g></g></g></g></svg> 表示权值</p>\n<p>输出格式：</p>\n<p>一个整数表示答案。</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<p>输入样例#1：</p>\n<p>复制</p>\n<!--code￼2-->\n<p>输出样例#1：</p>\n<p>复制</p>\n<!--code￼3-->\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2>\n<p>样例解释</p>\n<!--code￼4-->\n<p>分法不唯一，如图是一种合法的分法。左边部分极差12-1=11，右边一块极差20-10=10，所以答案取这两个中较大者11。没有别的分法，可以使答案更小。</p>\n<p><strong>数据范围与约定</strong></p>\n<table>\n<thead>\n<tr>\n<th>测试点</th>\n<th>n</th>\n<th>m</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#1-2</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.651ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-4-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-4-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-4-TEX-N-30\" transform=\"translate(500,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#3-4</td>\n<td><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg></td>\n<td><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.914ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 3055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-6-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-6-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-6-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-6-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-6-TEX-N-30\" transform=\"translate(1500,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#5-7</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.782ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2555.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-7-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-7-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-7-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-7-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-7-TEX-N-30\" transform=\"translate(1000,0)\"></use></g></g></g></svg></td>\n</tr>\n<tr>\n<td>#8-10</td>\n<td colspan=\"2\"><svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.914ex\" height=\"1.819ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 3055.8 804\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-8-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-8-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2264\" xlink:href=\"#MJX-8-TEX-N-2264\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1055.8,0)\"><use data-c=\"32\" xlink:href=\"#MJX-8-TEX-N-32\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-8-TEX-N-30\" transform=\"translate(1500,0)\"></use></g></g></g></svg></td>\n</tr>\n</tbody>\n</table>\n<p>对于所有的权值<svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.956ex\" height=\"2.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -864 6168.5 1158.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-9-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-9-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-9-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-9-TEX-N-39\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(777.8,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1833.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-9-TEX-I-1D434\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(783,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(345,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(623,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-9-TEX-I-1D457\"></use></g></g></g><g data-mml-node=\"mo\" transform=\"translate(3676.2,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4732,0)\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-9-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-9-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><use data-c=\"39\" xlink:href=\"#MJX-9-TEX-N-39\"></use></g></g></g></g></svg></p>\n<p>《末日时在做什么？有没有空？可以来拯救吗？》</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/9235.png\" alt=\"img\"><s>看题比看番刺激系列</s></p>\n<h1 id=\"胡乱分析\"><a href=\"#胡乱分析\" class=\"headerlink\" title=\"胡乱分析\"></a>胡乱分析</h1>\n<h3 id=\"翻译题意\"><a href=\"#翻译题意\" class=\"headerlink\" title=\"翻译题意\"></a>翻译题意</h3>\n<p><strong>最大的最小</strong>肯定是二分啊.</p>\n<p>二分极值,然后check.</p>\n<p><s>完</s></p>\n<p>好下面考虑check怎么写.</p>\n<p>先解释一下题目分割的要求.</p>\n<p>根据题目描述,可以把要求抽象一下:</p>\n<!--code￼5-->\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13249.png\" alt=\"img\"></p>\n<p>这是一个不合法的情况,因为分割线在既背着第一列方向拐了又向着第一列方向拐了几次.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13247.png\" alt=\"img\"></p>\n<p>这是一个合法的情况,因为分割线从上到下看只向着第一列拐.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13248.png\" alt=\"img\"></p>\n<p>同样,旋转一下这条分割线也是合法的.</p>\n<p>换一种说法,这条分割线除了两端,没有最上或最下或最左或最右.</p>\n<!--code￼6-->\n<p>再根据这几个样例,基本题意就可以理解了吧.</p>\n<h3 id=\"基础的错误算法\"><a href=\"#基础的错误算法\" class=\"headerlink\" title=\"基础的错误算法\"></a>基础的错误算法</h3>\n<p>刚开始拿到这题的时候,没什么思路的我准备瞎写个算法:</p>\n<!--code￼7-->\n<p>很明显,这个方法有一个简单的反例.</p>\n<!--code￼8-->\n<p>假如可以容忍的极差为5,这种方法考虑到6这个元素的时候,由于目前选的A集合的最小值为1,所以6加入A集合,但是此时最大值要更新为6;</p>\n<p>但是当考虑到-2这个元素时,由于最大值已经被更新为6,-2是加入不到A集合的.</p>\n<p>此时检查剩下的四个元素,极差为11,不能接受,好像并不存在一种分法能把极差降到5以下.</p>\n<p>但是一眼可以看出,存在一种分法能把两个集合极差变为3和3(太显然了我不画了).</p>\n<h3 id=\"考虑为什么会错\"><a href=\"#考虑为什么会错\" class=\"headerlink\" title=\"考虑为什么会错\"></a>考虑为什么会错</h3>\n<p>重点就在那个6上,简单说,就是明明不该放到A集合的元素硬拉进来且更新了最大值最小值,导致应该在A集合的元素不能加入A集合.</p>\n<p>换句话说<strong>在枚举过程中,在枚举完所有一定要加入A集合的元素之前枚举到了可以不加入A集合的元素,即枚举顺序错误</strong></p>\n<h3 id=\"换一种枚举顺序\"><a href=\"#换一种枚举顺序\" class=\"headerlink\" title=\"换一种枚举顺序?\"></a>换一种枚举顺序?</h3>\n<p>考虑分割线的限制,再换一种说法:</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/13247.png\" alt=\"img\"></p>\n<p><strong>为了方便,现在只讨论形如这样的分割线,即从上到下只向着第一列方向拐弯或不拐弯</strong></p>\n<p>想象每一行都有一个挡板,为这一行A与B集合的分界线,那么把这些挡板连起来就是整张图的分界线(看图).\n为了保证合法,从上到下的挡板的位置<strong>必须不能比上一行挡板位置靠右</strong>.</p>\n<p>(为了方便,现在只讨论形如上图的分割线,即从上到下只背着第一列方向拐弯或不拐弯)</p>\n<p>那么当两行挡板位置相等时,如果第一行挡板右边元素使可以接受的,那么就可以放心地把他加入A集合了.</p>\n<p>因为此时由于第二行的挡板不能逾越第一行挡板的位置,如果第一行不动,他将不能再动,即使右边的元素可以接受.</p>\n<p>即<strong>已经枚举完了一定要加入A集合的元素</strong>.</p>\n<p>当然,当第二行右边的元素已经不可接受,第一行就可以不用等到第二行挡板和第一行一样时再移动.</p>\n<h3 id=\"考虑一个小问题\"><a href=\"#考虑一个小问题\" class=\"headerlink\" title=\"考虑一个小问题\"></a>考虑一个小问题</h3>\n<p>当遇到一个可以接受的元素k时,是否加入A集合,是否会因为加入A集合导致B集合出现问题?</p>\n<ul>\n<li>当k为未加入元素的极值时,加入A集合就会缩小未来的B集合的极差.</li>\n<li>当k不为未加入元素的极值时,加入A集合不会对B集合有任何影响.</li>\n</ul>\n<h3 id=\"算法实现\"><a href=\"#算法实现\" class=\"headerlink\" title=\"算法实现\"></a>算法实现</h3>\n<p>二分最小的可接受的极值上限,不断地从上到下,在保证从上到下的挡板的位置<strong>必须不能比上一行挡板位置靠右</strong>的条件下尝试移动该行的挡板.</p>\n<p>为了保证下一行没有阻挡的情况下仅当两行挡板位置相同时才能延伸挡板,每次移动只能移动一格.(有点难说,这个意思自己理解一下稍微有点难).</p>\n<p>当一行遇到阻碍时,因为每一次都只移动一格,该行之下的所有行要么已经被不可接受的元素阻挡,要么被这一行阻挡,所以下一次循环时就可以不用考虑改行之下的挡板.</p>\n<p>当第一行遇到阻碍时,循环结束.统计剩下的元素组成的B集合的极值,如果可以接受,下调上限,否则</p>\n<p><strong>就可以返回false上调上限了??</strong></p>\n<p>别忘了,这只是一种情况,一共8种情况呢.(四个延伸起始方向,两个拐弯方向)</p>\n<p>这个可以通过旋转图像后再进行二分简单的实现,但是我当初敲代码的时候少了块脑子写了4个judge,给8种情况都写了一段来判断,反正过了也就不改了.</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3>\n<!--code￼9-->","782ae84689536d1c91c95eacec751fcd291332c5":"<h1 id=\"LNOI2014-LCA\"><a href=\"#LNOI2014-LCA\" class=\"headerlink\" title=\"LNOI2014 LCA\"></a>LNOI2014 LCA</h1>\n<p><strong>人生中第一道黑题</strong></p>\n<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2>\n<p>给出一个n个节点的有根树（编号为0到n-1，根节点为0）。一个点的深度定义为这个节点到根的距离+1。 设<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.407ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2390 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-1-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-1-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-1-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D451\" xlink:href=\"#MJX-1-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(520,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-1-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(986,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-1-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1489,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-1-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1767,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2112,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-1-TEX-N-5D\"></use></g></g></g></svg>表示点<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g></g></g></svg>的深度，<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.436ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4170.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-3-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-3-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43F\" xlink:href=\"#MJX-3-TEX-I-1D43F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(681,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-3-TEX-I-1D436\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1441,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-3-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2191,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2580,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2925,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-3-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3369.7,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3781.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg>表示<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-4-TEX-I-1D456\"></use></g></g></g></svg>与<svg style=\"vertical-align: -0.462ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.932ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 412 865\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-5-TEX-I-1D457\"></use></g></g></g></svg>的最近公共祖先。 有q次询问，每次询问给出<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.674ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 298 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-6-TEX-I-1D459\"></use></g></g></g></svg> <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.02ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 451 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45F\" xlink:href=\"#MJX-7-TEX-I-1D45F\"></use></g></g></g></svg> <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.052ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 465 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D467\" xlink:href=\"#MJX-8-TEX-I-1D467\"></use></g></g></g></svg>，求<svg style=\"vertical-align: -0.866ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"21.376ex\" height=\"2.563ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 9448.2 1132.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-9-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-9-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path><path id=\"MJX-9-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-9-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-9-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-9-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-9-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-9-TEX-I-1D43F\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-9-TEX-I-1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path><path id=\"MJX-9-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-9-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-9-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-9-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path><path id=\"MJX-9-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-9-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-9-TEX-SO-2211\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(1089,-285.4) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-9-TEX-I-1D459\"></use></g><g data-mml-node=\"mo\" transform=\"translate(298,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1076,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1421,0)\"><use data-c=\"2264\" xlink:href=\"#MJX-9-TEX-N-2264\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2199,0)\"><use data-c=\"1D45F\" xlink:href=\"#MJX-9-TEX-I-1D45F\"></use></g></g></g><g data-mml-node=\"mi\" transform=\"translate(3179.5,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-9-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3699.5,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-9-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4165.5,0)\"><use data-c=\"1D45D\" xlink:href=\"#MJX-9-TEX-I-1D45D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4668.5,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-9-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4946.5,0)\"><use data-c=\"1D43F\" xlink:href=\"#MJX-9-TEX-I-1D43F\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5627.5,0)\"><use data-c=\"1D436\" xlink:href=\"#MJX-9-TEX-I-1D436\"></use></g><g data-mml-node=\"mi\" transform=\"translate(6387.5,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-9-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7137.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-9-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(7526.5,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-9-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(7871.5,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-9-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(8316.2,0)\"><use data-c=\"1D467\" xlink:href=\"#MJX-9-TEX-I-1D467\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8781.2,0)\"><use data-c=\"29\" xlink:href=\"#MJX-9-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(9170.2,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-9-TEX-N-5D\"></use></g></g></g></svg></p>\n<!--more-->\n<h2 id=\"输入输出格式\"><a href=\"#输入输出格式\" class=\"headerlink\" title=\"输入输出格式\"></a>输入输出格式</h2>\n<p>输入格式：</p>\n<p>第一行2个整数n q。 接下来n-1行，分别表示点1到点n-1的父节点编号。 接下来q行，每行3个整数l r z。</p>\n<p>输出格式：</p>\n<p>输出q行，每行表示一个询问的答案。每个答案对201314取模输出</p>\n<h2 id=\"输入输出样例\"><a href=\"#输入输出样例\" class=\"headerlink\" title=\"输入输出样例\"></a>输入输出样例</h2>\n<p>输入样例#1：</p>\n<!--code￼0-->\n<p>输出样例#1：</p>\n<!--code￼1-->\n<h2 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h2>\n<p>共5组数据，n与q的规模分别为10000,20000,30000,40000,50000。</p>\n<hr>\n<p>显然暴力的复杂度是承受不了的,上来dfs肯定是不可行的.</p>\n<p>首先考虑两个点的lca的深度的另外一中计算方法:</p>\n<!--code￼2-->\n<p>这个方法在直接求lca时显然是大材小用,200+行的代码只是为了求个lca的深度显然得不偿失.</p>\n<p>但是这种方法在处理本题是很有用的方法,因为这种方法可以很方便的实现对区间求lca深度之和的操作.</p>\n<p><img src=\"https://cdn.luogu.com.cn/upload/pic/15317.png\" alt=\"\"></p>\n<p>如图,假如要求(红色点,橙色点)和棕色点的lca的深度之和,可以这样操作:</p>\n<p>(<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.954ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4841.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-10-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-10-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-10-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-10-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-10-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-10-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-10-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-10-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-10-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3518,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-10-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3962.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-10-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4452.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg>,<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.793ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4770.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-11-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-11-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-11-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-11-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-11-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-11-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-11-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-11-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-11-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1448,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-11-TEX-I-1D462\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2020,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-11-TEX-I-1D452\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486,0)\"><use data-c=\"28\" xlink:href=\"#MJX-11-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3447,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-11-TEX-N-2C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3891.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-11-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4381.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-11-TEX-N-29\"></use></g></g></g></svg>分别为树剖中链增加,链查询函数)</p>\n<!--code￼3-->\n<p>但是此时如果针对每一个操作都在线计算的话,复杂度仍不能达到要求.</p>\n<p>这时注意到如果按顺序进行<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.463ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4624.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-12-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-12-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-12-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-12-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-12-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-12-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-12-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-12-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-12-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-12-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-12-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-12-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-12-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-12-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-12-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3291,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-12-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3735.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-12-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4235.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-12-TEX-N-29\"></use></g></g></g></svg>的操作,所有区间所需的数据都已经计算出来,即考虑差分.</p>\n<p>采用离线算法,将所有查询全部读入后,在<svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.571ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2020.4 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-13-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-13-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D459\" xlink:href=\"#MJX-13-TEX-I-1D459\"></use></g><g data-mml-node=\"mo\" transform=\"translate(520.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-13-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(1520.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-13-TEX-N-31\"></use></g></g></g></svg>和<svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.02ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 451 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D45F\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45F\" xlink:href=\"#MJX-14-TEX-I-1D45F\"></use></g></g></g></svg>处分别打上起始标记和结束标记,然后按顺序执行<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.463ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4624.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-15-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-15-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-15-TEX-I-1D451\" d=\"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-15-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-15-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-15-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-15-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-15-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-15-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-15-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-15-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1517,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-15-TEX-I-1D451\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2037,0)\"><use data-c=\"1D451\" xlink:href=\"#MJX-15-TEX-I-1D451\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2557,0)\"><use data-c=\"28\" xlink:href=\"#MJX-15-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2946,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-15-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3291,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-15-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3735.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-15-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4235.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-15-TEX-N-29\"></use></g></g></g></svg>的操作,若发现有标记,则在对应该查询的数组存此时<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.574ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4673.7 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D45D\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"></path><path id=\"MJX-16-TEX-I-1D45C\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"></path><path id=\"MJX-16-TEX-I-1D45E\" d=\"M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z\"></path><path id=\"MJX-16-TEX-I-1D462\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D467\" d=\"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z\"></path><path id=\"MJX-16-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path><path id=\"MJX-16-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D45D\" xlink:href=\"#MJX-16-TEX-I-1D45D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(503,0)\"><use data-c=\"1D45C\" xlink:href=\"#MJX-16-TEX-I-1D45C\"></use></g><g data-mml-node=\"mi\" transform=\"translate(988,0)\"><use data-c=\"1D45E\" xlink:href=\"#MJX-16-TEX-I-1D45E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1448,0)\"><use data-c=\"1D462\" xlink:href=\"#MJX-16-TEX-I-1D462\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2020,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2486,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2875,0)\"><use data-c=\"1D467\" xlink:href=\"#MJX-16-TEX-I-1D467\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3340,0)\"><use data-c=\"2C\" xlink:href=\"#MJX-16-TEX-N-2C\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3784.7,0)\"><use data-c=\"30\" xlink:href=\"#MJX-16-TEX-N-30\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4284.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g></g></g></svg>的值,为了差分,起始和结束可以分开记录.</p>\n<p>这是差分部分的代码,利用vector来给每一个点记录标记,用st[i],ed[i]表示第i次查询的差分起始数据和差分终止数据.</p>\n<!--code￼4-->\n<p>最后输出每一次查询ed[i]-st[i]即可.</p>\n<p>本来一中午一个多小时就写完了代码,但是因为我太弱了,复制了lzydalao少了一个=的读入优化,三天没改出来...(还是我太弱了)</p>\n<p>知道明明输出q行却一直提示Too Many or Too few Lines有多么抑郁吗,特别是在各种环境测试都没错的时候.</p>\n<p><s><strong>究其根本原因还是我太弱了</strong></s></p>\n<p>完整代码:</p>\n<!--code￼5-->\n<p>2018-3-9 0:31:37 AC</p>\n<p>2018-3-9 1:20:30</p>\n<p>我要猝死了.</p>\n","a360b72d995116304bd0168835ed1af023593111":"<p><img src=\"/img/softmax-mnist.assets/NOH%7DOC%5BSA3A%25@29ALI$PL5.png\" alt=\"img\"></p>\n<p>求了两下午导, 调了半天代码, 终于验证了我寒假的想法, 自己用softmax回归(我也不知道这个叫什么)实现了MNIST手写数字识别.</p>\n<!--more-->\n<p>寒假里那篇讲Logistic回归的最后, 我按照Logistic回归的想法提出了一种解决多分类问题的方法, 然后想着这玩意不就能识别手写数字了嘛, 但是这学期一直在摸鱼, 没有去尝试写过.</p>\n<p>Logistic回归其实还是建立在线性回归上. 线性回归就是拟合出一个矩阵 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-1-TEX-I-1D44A\"></use></g></g></g></svg> , 让 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.691ex\" height=\"1.731ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 3841.6 765\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-2-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-2-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-2-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3269.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-2-TEX-I-1D465\"></use></g></g></g></svg> 尽可能逼近真实答案.</p>\n<p>Logistic回归是加了一个非线性函数Sigmoid函数. 他构造的是 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.911ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5264.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-I-1D446\" d=\"M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z\"></path><path id=\"MJX-3-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-3-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-3-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-3-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-3-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D446\" xlink:href=\"#MJX-3-TEX-I-1D446\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2866.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-3-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3255.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-3-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4303.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-3-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4875.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-3-TEX-N-29\"></use></g></g></g></svg>, 把输出定义为属于其中一类的概率, 让 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-4-TEX-I-1D43B\"></use></g></g></g></svg> 尽可能逼近真实答案. 因为Sigmoid函数是可导的, 所以就可以利用链式法则求出 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-5-TEX-I-1D43B\"></use></g></g></g></svg> 对矩阵中每一项的导数, 即 <svg style=\"vertical-align: -1.034ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.934ex\" height=\"3.07ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -899.6 1738.9 1356.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-6-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-6-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-6-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(355.4,394) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-6-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43B\" xlink:href=\"#MJX-6-TEX-I-1D43B\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-6-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-6-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(977,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-6-TEX-I-1D456\"></use></g></g></g><rect width=\"1498.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>. 这样就可以找到这个函数在一个点的梯度, 就可以用梯度下降啦.</p>\n<p>而在这个基础上, 我们可以让 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-7-TEX-I-1D43B\"></use></g></g></g></svg> 不再代表一个数, 让他表示一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.906ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2610.4 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-8-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-8-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1110.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-8-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2110.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></svg> 的矩阵, 其中 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-9-TEX-I-1D441\"></use></g></g></g></svg> 是类别个数, 每一项代表输入处于这一类的概率. 然后还是利用一个可导函数+线性拟合的思路, 让 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12.146ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5368.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D43B\" d=\"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z\"></path><path id=\"MJX-10-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-10-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path><path id=\"MJX-10-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-10-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43B\" xlink:href=\"#MJX-10-TEX-I-1D43B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1165.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-10-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2221.6,0)\"><use data-c=\"1D439\" xlink:href=\"#MJX-10-TEX-I-1D439\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2970.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-10-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3359.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-10-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4407.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4979.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-10-TEX-N-29\"></use></g></g></g></svg>, 这个函数 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.695ex\" height=\"1.538ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -680 749 680\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D439\" d=\"M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D439\" xlink:href=\"#MJX-11-TEX-I-1D439\"></use></g></g></g></svg> 需要根据线性拟合的结果(也是一个 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.906ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 2610.4 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-12-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-12-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-12-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-12-TEX-I-1D441\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1110.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-12-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2110.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-12-TEX-N-31\"></use></g></g></g></svg> 的矩阵), 得到这个输入属于每个类的概率.</p>\n<p>这个函数首先要保证输出的矩阵每一项加起来为1, 因为输入处于每一类的概率之和一定为1. 还要保证这个函数的输入(即 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.665ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1620 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-13-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-13-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-13-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1048,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-13-TEX-I-1D465\"></use></g></g></g></svg> )越大, 对应的概率也要越大.</p>\n<p>我当时提出直接用输入的每一项比上和, 即<svg style=\"vertical-align: -1.525ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.349ex\" height=\"3.692ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -957.9 2364.3 1632\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-14-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-14-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-14-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-14-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msub\" transform=\"translate(801.4,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-14-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-14-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-14-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-14-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-14-TEX-I-1D457\"></use></g></g></g><rect width=\"2124.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 来当作这个输入函数. 但是发现还有个叫softmax的东西, 就直接用了softmax, 有时间试试我提出的那个咋样, 肯定不好用, 我就想知道有多不好用.</p>\n<p>softmax看名字就知道这是一个soft的max. 为了满足输入越大概率越大, 我们可以直接用一个max函数. 即对于一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.665ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1620 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-15-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-15-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-15-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1048,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-15-TEX-I-1D465\"></use></g></g></g></svg> , 直接看哪一项最大就行, 最大的就认为是分类的结果.</p>\n<p>但是这样做有两个问题, 一个是直接这样把其他的可能性一棒子打死, 就不给他们翻身的机会. 训练过程中是要不断修改的, 直接认为这次分类的结果是对的, 其他类别都是错的, 就没有了训练的空间. 第二个大问题就是, 这个函数不可导, 也基本没有了训练的方法.</p>\n<p>所以softmax就来了:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.155ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 7140.5 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-16-TEX-I-1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path><path id=\"MJX-16-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-16-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-16-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-16-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-16-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-16-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-16-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-16-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D70E\" xlink:href=\"#MJX-16-TEX-I-1D70E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(571,0)\"><use data-c=\"28\" xlink:href=\"#MJX-16-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(960,0)\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"msub\" transform=\"translate(1710,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-16-TEX-N-29\"></use></g><g data-mml-node=\"mi\" transform=\"translate(422,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-16-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(2703.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-16-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3759.5,0)\"><g data-mml-node=\"msup\" transform=\"translate(1035.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-16-TEX-I-1D456\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-16-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-16-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-16-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-16-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-16-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>其实就是先把所有的值来个exp, 然后再用我的那个方法.</p>\n<p>这样不仅保证值大的项得到的概率也很大, 而且还能和其他项拉开差距. 最重要的是, 它可导.</p>\n<p>那对于手写数字识别这个问题, 我们就可以让<svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.433ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5053.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-17-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-17-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-17-TEX-I-1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"></path><path id=\"MJX-17-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-17-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-17-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-17-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-17-TEX-I-1D443\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1028.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-17-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2084.6,0)\"><use data-c=\"1D70E\" xlink:href=\"#MJX-17-TEX-I-1D70E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2655.6,0)\"><use data-c=\"28\" xlink:href=\"#MJX-17-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3044.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-17-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4092.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-17-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4664.6,0)\"><use data-c=\"29\" xlink:href=\"#MJX-17-TEX-N-29\"></use></g></g></g></svg>, 然后训练就行啦. <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-18-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-18-TEX-I-1D443\"></use></g></g></g></svg> 就是我预测的这个输入在每一类的概率</p>\n<p>然后选Loss函数, 和Logistic回归一样, Loss函数我们选用交叉熵, 交叉熵也在之前的文章讲过啦.</p>\n<p>Loss函数:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.697ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.996ex\" height=\"6.636ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1740.7 13700 2932.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-19-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-19-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-19-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-19-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-19-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-19-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-19-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-19-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-19-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-19-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-19-TEX-I-1D450\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"></path><path id=\"MJX-19-TEX-I-1D459\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"></path><path id=\"MJX-19-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-19-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-19-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-19-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-19-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-19-TEX-N-2061\" d=\"\"></path><path id=\"MJX-19-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-19-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-19-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-19-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2736.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-19-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3792.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-19-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4570.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-19-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-19-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6065.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-19-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-19-TEX-I-1D441\"></use></g></g><g data-mml-node=\"munderover\" transform=\"translate(7675.9,0)\"><g data-mml-node=\"mo\" transform=\"translate(55.1,0)\"><use data-c=\"2211\" xlink:href=\"#MJX-19-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(655.1,-1084.4) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(0,1150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D450\" xlink:href=\"#MJX-19-TEX-I-1D450\"></use></g><g data-mml-node=\"mi\" transform=\"translate(433,0)\"><use data-c=\"1D459\" xlink:href=\"#MJX-19-TEX-I-1D459\"></use></g><g data-mml-node=\"mi\" transform=\"translate(731,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-19-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1260,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-19-TEX-I-1D460\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1729,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-19-TEX-I-1D460\"></use></g></g></g><g data-mml-node=\"msub\" transform=\"translate(9396.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-19-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(10380.4,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-19-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-19-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(11214.4,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-19-TEX-N-2061\"></use></g><g data-mml-node=\"msub\" transform=\"translate(11381.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-19-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-19-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(12350,0)\"><use data-c=\"28\" xlink:href=\"#MJX-19-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(12739,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-19-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(13311,0)\"><use data-c=\"29\" xlink:href=\"#MJX-19-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>其中<svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.009ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 888 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-20-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D441\" xlink:href=\"#MJX-20-TEX-I-1D441\"></use></g></g></g></svg>是训练数据的个数, 第二个求和实际上就是求真实数据分布对我的预测分布的交叉熵. <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.848ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 817 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-21-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-21-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-21-TEX-I-1D466\"></use></g><g data-mml-node=\"mi\" transform=\"translate(523,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-21-TEX-I-1D456\"></use></g></g></g></g></svg> 是真实分布的One-hot向量, 即真实在哪一类, 这个向量的哪一项就是1, 其他都是0.</p>\n<p>在MNIST手写数字识别里, <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-22-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-22-TEX-I-1D44A\"></use></g></g></g></svg> 矩阵是 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.422ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 3722.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-23-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-23-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-23-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-23-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-23-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-23-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-23-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-23-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-23-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"37\" xlink:href=\"#MJX-23-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-23-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-23-TEX-N-34\" transform=\"translate(1000,0)\"></use></g></g></g></svg> 的, <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-24-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-24-TEX-I-1D466\"></use></g></g></g></svg> 和 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-25-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-25-TEX-I-1D443\"></use></g></g></g></svg> 都是 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.159ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2722.4 688\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-26-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-26-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-26-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-26-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-26-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-26-TEX-N-31\"></use></g></g></g></svg> 的, <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.294ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 572 453\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-27-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-27-TEX-I-1D465\"></use></g></g></g></svg> 是一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.291ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 3222.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-28-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-28-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-28-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-28-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-28-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"37\" xlink:href=\"#MJX-28-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-28-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-28-TEX-N-34\" transform=\"translate(1000,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-28-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2722.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-28-TEX-N-31\"></use></g></g></g></svg> 的列向量.</p>\n<p>其实, <svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-29-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-29-TEX-I-1D466\"></use></g></g></g></svg> 矩阵只有一项是 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.131ex\" height=\"1.507ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 500 666\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-30-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-30-TEX-N-31\"></use></g></g></g></svg> , 那就可以把交叉熵改成:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -1.552ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25.109ex\" height=\"5.473ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 11098 2419\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-31-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-31-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-31-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-31-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-31-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-31-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-31-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-31-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-31-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-31-TEX-N-6C\" d=\"M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z\"></path><path id=\"MJX-31-TEX-N-6E\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"></path><path id=\"MJX-31-TEX-N-2061\" d=\"\"></path><path id=\"MJX-31-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-31-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-31-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-31-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-31-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-31-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-31-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2736.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-31-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3792.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-31-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4570.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-31-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-31-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6065.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-31-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-31-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(7675.9,0)\"><use data-c=\"6C\" xlink:href=\"#MJX-31-TEX-N-6C\"></use><use data-c=\"6E\" xlink:href=\"#MJX-31-TEX-N-6E\" transform=\"translate(278,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8509.9,0)\"><use data-c=\"2061\" xlink:href=\"#MJX-31-TEX-N-2061\"></use></g><g data-mml-node=\"msub\" transform=\"translate(8676.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-31-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-31-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(9748,0)\"><use data-c=\"28\" xlink:href=\"#MJX-31-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(10137,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-31-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(10709,0)\"><use data-c=\"29\" xlink:href=\"#MJX-31-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p><svg style=\"vertical-align: -0.464ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.109ex\" height=\"1.464ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 490 647\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-32-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D466\" xlink:href=\"#MJX-32-TEX-I-1D466\"></use></g></g></g></svg> 是这个数据真实类别.</p>\n<p>然后, 为了拟合出 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-33-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-33-TEX-I-1D443\"></use></g></g></g></svg> 里的 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-34-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-34-TEX-I-1D44A\"></use></g></g></g></svg>, 需要求出 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.563ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 2459 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-35-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-35-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-35-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-35-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D43D\" xlink:href=\"#MJX-35-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(633,0)\"><use data-c=\"28\" xlink:href=\"#MJX-35-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1022,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-35-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2070,0)\"><use data-c=\"29\" xlink:href=\"#MJX-35-TEX-N-29\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.371ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1048 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-36-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-36-TEX-I-1D44A\"></use></g></g></g></svg> 的每一项的偏导, 即<svg style=\"vertical-align: -1.253ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.835ex\" height=\"3.622ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2579 1600.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-37-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-37-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-37-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-37-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-37-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-37-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-37-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-37-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-37-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-37-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-37-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-37-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(537,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-37-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-37-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-37-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-37-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2339\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>.</p>\n<p>由链式法则:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.274ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"33.871ex\" height=\"6.194ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 14970.9 2737.9\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-38-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-38-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-38-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-38-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-38-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-38-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-38-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-38-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-38-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-38-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-38-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-38-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-38-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-38-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-38-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-38-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-38-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-38-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3742.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-38-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4798.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-38-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(5576.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-38-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-38-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(7071.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-38-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-38-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(8681.9,0)\"><g data-mml-node=\"mn\" transform=\"translate(1180.7,676)\"><use data-c=\"31\" xlink:href=\"#MJX-38-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-710)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-38-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-38-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1071.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1460.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-38-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2032.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><rect width=\"2621.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mfrac\" transform=\"translate(11543.4,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,755)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-38-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-38-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1637.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-38-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2026.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-38-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2598.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-38-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(649.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-38-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-38-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-38-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-38-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3187.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>下面研究 <svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.699ex\" height=\"1.545ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 751 683\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-39-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-39-TEX-I-1D443\"></use></g></g></g></svg> 对 <svg style=\"vertical-align: -0.666ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.535ex\" height=\"2.211ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -683 1562.3 977.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-40-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-40-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-40-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-40-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-40-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-40-TEX-I-1D457\"></use></g></g></g></g></g></svg> 的偏导.</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.641ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30.348ex\" height=\"5.944ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 13413.8 2627.4\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-41-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-41-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-41-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-41-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-41-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-41-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-41-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-41-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-41-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-41-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-41-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-41-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-41-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-41-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-41-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-41-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-41-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-41-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-41-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2900.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-41-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(800.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-41-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-41-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-41-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3489.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4007.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-41-TEX-N-3D\"></use></g><g data-mml-node=\"munder\" transform=\"translate(5063,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-41-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(594.4,-1059.6) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(6673.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-41-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-41-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-41-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-41-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-41-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(897.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-41-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10345.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-41-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(10845.5,0)\"><g data-mml-node=\"mrow\" transform=\"translate(457,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-41-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-41-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-41-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-41-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-41-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-41-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>考虑到当 <svg style=\"vertical-align: -0.486ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.614ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2039.6 931\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-42-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-42-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path><path id=\"MJX-42-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D461\" xlink:href=\"#MJX-42-TEX-I-1D461\"></use></g><g data-mml-node=\"mo\" transform=\"translate(638.8,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-42-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1694.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-42-TEX-I-1D456\"></use></g></g></g></svg> 时, <svg style=\"vertical-align: -1.253ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.549ex\" height=\"3.42ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -957.9 3778.5 1511.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-43-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-43-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-43-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-43-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-43-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-43-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-43-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-43-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(387.6,451.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-43-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-43-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-43-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-43-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-43-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-43-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-43-TEX-I-1D457\"></use></g></g></g></g><rect width=\"1704.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2222.7,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-43-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3278.5,0)\"><use data-c=\"30\" xlink:href=\"#MJX-43-TEX-N-30\"></use></g></g></g></svg>, 所以:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.641ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48.614ex\" height=\"5.944ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1460 21487.4 2627.4\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-44-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-44-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-44-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-44-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-44-TEX-I-1D44B\" d=\"M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z\"></path><path id=\"MJX-44-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-44-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-44-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-44-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-44-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-44-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-44-TEX-I-1D461\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><path id=\"MJX-44-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-44-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-44-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D44B\" xlink:href=\"#MJX-44-TEX-I-1D44B\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2900.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(800.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3489.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4007.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-44-TEX-N-3D\"></use></g><g data-mml-node=\"munder\" transform=\"translate(5063,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-44-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(594.4,-1059.6) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(6673.6,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-44-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(897.6,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(10345.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-44-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(10845.5,0)\"><g data-mml-node=\"mrow\" transform=\"translate(457,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D461\" xlink:href=\"#MJX-44-TEX-I-1D461\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(13691.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-44-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(14747.3,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-44-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-44-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-44-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-44-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-44-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(903.2,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(18418.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-44-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(18919.2,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-44-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-44-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-44-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-44-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-44-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p>其中,</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16.195ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 7158 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-45-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-45-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-45-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-45-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-45-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-45-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-45-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-45-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-45-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-45-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-45-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-45-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1093.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-45-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1482.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-45-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2054.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-45-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2721.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-45-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(3777,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-45-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-45-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-45-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-45-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-45-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-45-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-45-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-45-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg></span></p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8.379ex\" height=\"1.805ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 3703.6 798\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-46-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-46-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-46-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-46-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-46-TEX-I-1D434\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1027.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-46-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2083.6,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-46-TEX-I-1D44A\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3131.6,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-46-TEX-I-1D465\"></use></g></g></g></svg></span></p>\n<p><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.697ex\" height=\"1.62ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 750 716\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-47-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-47-TEX-I-1D434\"></use></g></g></g></svg> 是一个 <svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.159ex\" height=\"1.557ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -666 2722.4 688\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-48-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-48-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><path id=\"MJX-48-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-48-TEX-N-31\"></use><use data-c=\"30\" xlink:href=\"#MJX-48-TEX-N-30\" transform=\"translate(500,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1222.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-48-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2222.4,0)\"><use data-c=\"31\" xlink:href=\"#MJX-48-TEX-N-31\"></use></g></g></g></svg> 的列向量.</p>\n<p>由矩阵相乘可知,</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.218ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.969ex\" height=\"5.367ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1392 4848.2 2372.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-49-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-49-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-49-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-49-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-49-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-49-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-49-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-49-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-49-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-49-TEX-I-1D456\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-49-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-49-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-49-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-49-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2328.3\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2846.1,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-49-TEX-N-3D\"></use></g><g data-mml-node=\"msub\" transform=\"translate(3901.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-49-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-49-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n<p>所以主要看<svg style=\"vertical-align: -1.036ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.81ex\" height=\"3.405ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2568 1505\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-50-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-50-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-50-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-50-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-50-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-50-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-50-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-50-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-50-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-50-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-50-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-50-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-50-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-50-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(703.1,-346.3) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-50-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-50-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-50-TEX-I-1D456\"></use></g></g></g><rect width=\"2328\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 就行啦.</p>\n<p>要求<svg style=\"vertical-align: -1.036ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"5.81ex\" height=\"3.405ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1047.1 2568 1505\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-51-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-51-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-51-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-51-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-51-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-51-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-51-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-51-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-51-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-51-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-51-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-51-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-51-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-51-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(703.1,-346.3) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-51-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-51-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-51-TEX-I-1D456\"></use></g></g></g><rect width=\"2328\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg>, 首先要讨论一下 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.179ex\" height=\"1.595ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 521 705\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-52-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-52-TEX-I-1D458\"></use></g></g></g></svg> 和 <svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"0.781ex\" height=\"1.52ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 345 672\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-53-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-53-TEX-I-1D456\"></use></g></g></g></svg> 的关系.</p>\n<ol>\n<li>\n<p><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.976ex\" height=\"1.756ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -694 2199.6 776\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-54-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-54-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-54-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-54-TEX-I-1D458\"></use></g><g data-mml-node=\"mo\" transform=\"translate(798.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-54-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1854.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-54-TEX-I-1D456\"></use></g></g></g></svg> 时:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -3.275ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"102.546ex\" height=\"7.681ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1947.5 45325.3 3395\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-55-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-55-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-55-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-55-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-55-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-55-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-55-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-55-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-55-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-55-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-55-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-55-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-55-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-55-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-55-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-55-TEX-S4-23A1\" d=\"M319 -645V1154H666V1070H403V-645H319Z\"></path><path id=\"MJX-55-TEX-S4-23A3\" d=\"M319 -644V1155H403V-560H666V-644H319Z\"></path><path id=\"MJX-55-TEX-S4-28\" d=\"M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z\"></path><path id=\"MJX-55-TEX-S4-29\" d=\"M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z\"></path><path id=\"MJX-55-TEX-S4-23A4\" d=\"M0 1070V1154H347V-645H263V1070H0Z\"></path><path id=\"MJX-55-TEX-S4-23A6\" d=\"M263 -560V1155H347V-644H0V-560H263Z\"></path><path id=\"MJX-55-TEX-SO-5B\" d=\"M202 -349V850H394V810H242V-309H394V-349H202Z\"></path><path id=\"MJX-55-TEX-SO-5D\" d=\"M22 810V850H214V-349H22V-309H174V810H22Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(841,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3671.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4171.8,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-55-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-55-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2452.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7142.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(8198.1,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,889.6)\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(1620.7,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2121,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(2510,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(4107,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(5451,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6062.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(7062.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(8683.2,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msup\" transform=\"translate(9183.4,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(3433.2,-784.9)\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(389,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1986,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"msup\" transform=\"translate(3330,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,289) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g></g><rect width=\"10781.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(19442.3,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(19942.5,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(20888.8,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(21166.6,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(22222.4,0)\"><g data-mml-node=\"mo\"><use data-c=\"23A1\" xlink:href=\"#MJX-55-TEX-S4-23A1\" transform=\"translate(0,793.5)\"></use><use data-c=\"23A3\" xlink:href=\"#MJX-55-TEX-S4-23A3\" transform=\"translate(0,-803.5)\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(667,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4270.2,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(5270.5,0)\"><g data-mml-node=\"mrow\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-S4-28\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(792,0)\"><g data-mml-node=\"msup\" transform=\"translate(991.2,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"munder\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-55-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1597,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-55-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-55-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></g><rect width=\"3141\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(4173,0) translate(0 -0.5)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-S4-29\"></use></g></g><g data-mml-node=\"mn\" transform=\"translate(4998,1476.6) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(10672,0)\"><use data-c=\"23A4\" xlink:href=\"#MJX-55-TEX-S4-23A4\" transform=\"translate(0,793.5)\"></use><use data-c=\"23A6\" xlink:href=\"#MJX-55-TEX-S4-23A6\" transform=\"translate(0,-803.5)\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(33783.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(34283.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(35230.2,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(35507.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-55-TEX-N-3D\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(36563.7,0)\"><g data-mml-node=\"mo\" transform=\"translate(0 -0.5)\"><use data-c=\"5B\" xlink:href=\"#MJX-55-TEX-SO-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(417,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-55-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1510.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1899.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2471.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3082.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-55-TEX-N-2212\"></use></g><g data-mml-node=\"msup\" transform=\"translate(4082.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-55-TEX-I-1D443\"></use></g><g data-mml-node=\"mn\" transform=\"translate(839.5,413) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-55-TEX-N-32\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(5325.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-55-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(5714.9,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6286.9,0)\"><use data-c=\"29\" xlink:href=\"#MJX-55-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(6675.9,0) translate(0 -0.5)\"><use data-c=\"5D\" xlink:href=\"#MJX-55-TEX-SO-5D\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(43878.8,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-55-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(44379,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-55-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-55-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n</li>\n<li>\n<p><svg style=\"vertical-align: -0.486ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.976ex\" height=\"2.106ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -716 2199.6 931\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-56-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-56-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path><path id=\"MJX-56-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-56-TEX-I-1D458\"></use></g><g data-mml-node=\"mo\" transform=\"translate(798.8,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-56-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1854.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-56-TEX-I-1D456\"></use></g></g></g></svg> 时:</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.748ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"60.042ex\" height=\"6.244ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1545.3 26538.6 2759.7\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-57-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-57-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-57-TEX-I-1D458\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path><path id=\"MJX-57-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-57-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-57-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-57-TEX-I-1D434\" d=\"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z\"></path><path id=\"MJX-57-TEX-N-22C5\" d=\"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z\"></path><path id=\"MJX-57-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-57-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-57-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-57-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-57-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-57-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-57-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-57-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1659.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2048.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2620.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(841,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g><rect width=\"3209.4\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3671.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4171.8,0)\"><g data-mml-node=\"mrow\" transform=\"translate(462.7,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-57-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-57-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g><g data-mml-node=\"mi\" transform=\"translate(521,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2452.7\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(7142.4,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-57-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(8198.1,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-57-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(8976.1,0)\"><g data-mml-node=\"msup\" transform=\"translate(1598.5,676)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220,-784.9)\"><g data-mml-node=\"mo\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"munder\" transform=\"translate(389,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-57-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,-285.4) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g><g data-mml-node=\"msup\" transform=\"translate(1986,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,318.6) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g><g data-mml-node=\"msup\" transform=\"translate(3330,0)\"><g data-mml-node=\"mo\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mn\" transform=\"translate(422,289) scale(0.707)\"><use data-c=\"32\" xlink:href=\"#MJX-57-TEX-N-32\"></use></g></g></g><rect width=\"4355.6\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(13793.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msup\" transform=\"translate(14294.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D452\" xlink:href=\"#MJX-57-TEX-I-1D452\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(499,413) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D434\" xlink:href=\"#MJX-57-TEX-I-1D434\"></use></g><g data-mml-node=\"mi\" transform=\"translate(783,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-57-TEX-I-1D456\"></use></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(15826.9,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(16327.1,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mspace\" transform=\"translate(17273.4,0)\"></g><g data-mml-node=\"mo\" transform=\"translate(17551.2,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-57-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18607,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-57-TEX-N-2212\"></use></g><g data-mml-node=\"msub\" transform=\"translate(19385,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D458\" xlink:href=\"#MJX-57-TEX-I-1D458\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(20478.4,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(20867.4,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(21439.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(22050.6,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(22550.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-57-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-57-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(23519.8,0)\"><use data-c=\"28\" xlink:href=\"#MJX-57-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(23908.8,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(24480.8,0)\"><use data-c=\"29\" xlink:href=\"#MJX-57-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(25092,0)\"><use data-c=\"22C5\" xlink:href=\"#MJX-57-TEX-N-22C5\"></use></g><g data-mml-node=\"msub\" transform=\"translate(25592.2,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-57-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-57-TEX-I-1D457\"></use></g></g></g></g></svg></span></p>\n</li>\n</ol>\n<p>然后把玩意带回到<svg style=\"vertical-align: -1.31ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"28.424ex\" height=\"3.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1078.9 12563.4 1657.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-58-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-58-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-58-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-58-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-58-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-58-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-58-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-58-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-58-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-58-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-58-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-58-TEX-SO-2211\" d=\"M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z\"></path><path id=\"MJX-58-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-58-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-58-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,516.8) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-58-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(537,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-58-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-58-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2339\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(2856.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-58-TEX-N-3D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3912.6,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-58-TEX-N-2212\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4690.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(357.2,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-58-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-345) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-58-TEX-I-1D441\"></use></g><rect width=\"827.9\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(5925.1,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-58-TEX-SO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1089,477.1) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-58-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mfrac\" transform=\"translate(7858.7,0)\"><g data-mml-node=\"mn\" transform=\"translate(899.3,394) scale(0.707)\"><use data-c=\"31\" xlink:href=\"#MJX-58-TEX-N-31\"></use></g><g data-mml-node=\"mrow\" transform=\"translate(220,-370.3) scale(0.707)\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-58-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-58-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1071.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1460.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-58-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2032.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><rect width=\"1912.2\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mfrac\" transform=\"translate(10011,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,548.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-58-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-58-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1637.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-58-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2026.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-58-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2598.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-58-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(523.8,-345.6) scale(0.707)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-58-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-58-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-58-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-58-TEX-I-1D457\"></use></g></g></g></g><rect width=\"2312.5\" height=\"60\" x=\"120\" y=\"220\"></rect></g></g></g></svg> 里.</p>\n<p><span style=\"margin-left: 50%; transform: translateX(-50%); display: inline-block; \"><svg style=\"vertical-align: -2.218ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"82.191ex\" height=\"6.138ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -1733 36328.4 2713.2\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-59-TEX-I-1D715\" d=\"M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z\"></path><path id=\"MJX-59-TEX-I-1D43D\" d=\"M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z\"></path><path id=\"MJX-59-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"></path><path id=\"MJX-59-TEX-I-1D44A\" d=\"M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z\"></path><path id=\"MJX-59-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"></path><path id=\"MJX-59-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-59-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-59-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path id=\"MJX-59-TEX-I-1D441\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path><path id=\"MJX-59-TEX-LO-2211\" d=\"M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z\"></path><path id=\"MJX-59-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-59-TEX-I-1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"></path><path id=\"MJX-59-TEX-I-1D466\" d=\"M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-59-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-59-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-59-TEX-N-A0\" d=\"\"></path><path id=\"MJX-59-TEX-I-1D464\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path><path id=\"MJX-59-TEX-I-210E\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path><path id=\"MJX-59-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"></path><path id=\"MJX-59-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-59-TEX-N-2260\" d=\"M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-59-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(3742.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(4798.6,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(6293.2,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-59-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(7903.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"5B\" xlink:href=\"#MJX-59-TEX-N-5B\"></use></g><g data-mml-node=\"msub\" transform=\"translate(278,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-59-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1349.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1738.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2310.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2921.7,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-59-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(3921.9,0)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4421.9,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-59-TEX-N-5D\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(12603.8,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mtext\" transform=\"translate(13550.1,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(13800.1,0)\"><use data-c=\"1D464\" xlink:href=\"#MJX-59-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(14516.1,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-59-TEX-I-210E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15092.1,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-59-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(15558.1,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-59-TEX-I-1D45B\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(16158.1,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mo\" transform=\"translate(16408.1,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(16797.1,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(17419.9,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(18475.7,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(18965.7,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"mspace\" transform=\"translate(19354.7,0)\"></g><g data-mml-node=\"mfrac\" transform=\"translate(19354.7,0)\"><g data-mml-node=\"mrow\" transform=\"translate(220,710)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"mi\" transform=\"translate(566,0)\"><use data-c=\"1D43D\" xlink:href=\"#MJX-59-TEX-I-1D43D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1199,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(1588,0)\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"mo\" transform=\"translate(2636,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g><g data-mml-node=\"mrow\" transform=\"translate(668.4,-686)\"><g data-mml-node=\"mi\"><use data-c=\"1D715\" xlink:href=\"#MJX-59-TEX-I-1D715\"></use></g><g data-mml-node=\"msub\" transform=\"translate(566,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D44A\" xlink:href=\"#MJX-59-TEX-I-1D44A\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(977,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mi\" transform=\"translate(345,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g></g></g><rect width=\"3225\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mo\" transform=\"translate(23097.5,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-59-TEX-N-3D\"></use></g><g data-mml-node=\"mfrac\" transform=\"translate(24153.3,0)\"><g data-mml-node=\"mn\" transform=\"translate(414,676)\"><use data-c=\"31\" xlink:href=\"#MJX-59-TEX-N-31\"></use></g><g data-mml-node=\"mi\" transform=\"translate(220,-686)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g><rect width=\"1088\" height=\"60\" x=\"120\" y=\"220\"></rect></g><g data-mml-node=\"mover\" transform=\"translate(25647.9,0)\"><g data-mml-node=\"mo\"><use data-c=\"2211\" xlink:href=\"#MJX-59-TEX-LO-2211\"></use></g><g data-mml-node=\"mi\" transform=\"translate(408,1150) scale(0.707)\"><use data-c=\"1D441\" xlink:href=\"#MJX-59-TEX-I-1D441\"></use></g></g><g data-mml-node=\"msub\" transform=\"translate(27258.6,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D443\" xlink:href=\"#MJX-59-TEX-I-1D443\"></use></g><g data-mml-node=\"mi\" transform=\"translate(675,-150) scale(0.707)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(28227.5,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(28616.5,0)\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mo\" transform=\"translate(29188.5,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g><g data-mml-node=\"msub\" transform=\"translate(29577.5,0)\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-59-TEX-I-1D465\"></use></g><g data-mml-node=\"mi\" transform=\"translate(605,-150) scale(0.707)\"><use data-c=\"1D457\" xlink:href=\"#MJX-59-TEX-I-1D457\"></use></g></g><g data-mml-node=\"mtext\" transform=\"translate(30523.9,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mi\" transform=\"translate(30773.9,0)\"><use data-c=\"1D464\" xlink:href=\"#MJX-59-TEX-I-1D464\"></use></g><g data-mml-node=\"mi\" transform=\"translate(31489.9,0)\"><use data-c=\"210E\" xlink:href=\"#MJX-59-TEX-I-210E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(32065.9,0)\"><use data-c=\"1D452\" xlink:href=\"#MJX-59-TEX-I-1D452\"></use></g><g data-mml-node=\"mi\" transform=\"translate(32531.9,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-59-TEX-I-1D45B\"></use></g><g data-mml-node=\"mtext\" transform=\"translate(33131.9,0)\"><use data-c=\"A0\" xlink:href=\"#MJX-59-TEX-N-A0\"></use></g><g data-mml-node=\"mo\" transform=\"translate(33381.9,0)\"><use data-c=\"28\" xlink:href=\"#MJX-59-TEX-N-28\"></use></g><g data-mml-node=\"mi\" transform=\"translate(33770.9,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-59-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(34393.6,0)\"><use data-c=\"2260\" xlink:href=\"#MJX-59-TEX-N-2260\"></use></g><g data-mml-node=\"mi\" transform=\"translate(35449.4,0)\"><use data-c=\"1D466\" xlink:href=\"#MJX-59-TEX-I-1D466\"></use></g><g data-mml-node=\"mo\" transform=\"translate(35939.4,0)\"><use data-c=\"29\" xlink:href=\"#MJX-59-TEX-N-29\"></use></g></g></g></svg></span></p>\n<p>最后求出来的结果还是很简单的.</p>\n<p>公式推到完啦, 下一步就是写代码.</p>\n<p>MNIST数据集谷歌一下就有了:</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000330267.png\" alt=\"image-20210716000330267\"></p>\n<p>下下来之后是个二进制文件, 下面介绍了二进制文件的构造.</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000418636.png\" alt=\"image-20210716000418636\"></p>\n<p>这是训练集输入, 从第16B开始, 每一个字节代表一个像素, 一张图有784个像素, 一共有60000个图.</p>\n<p><img src=\"/img/softmax-mnist.assets/image-20210716000503830.png\" alt=\"image-20210716000503830\"></p>\n<p>这是训练集输出, 从第8B开始, 每一个字节代表一张图片的标签.</p>\n<p>为了验证一下数据是不是这样用的, 我写了个程序把第一个图片搞出来看看长啥样.</p>\n<p>把这个输入文件从第16B开始, 读取784B, 生成到一个ppm图片里.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-10.png\" alt=\"2021-07-10\"></p>\n<p>我猜这是个5.</p>\n<p>然后按照输出的格式, 读取第8个字节.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-10-1.png\" alt=\"2021-07-10-1\"></p>\n<p>果然是个5, 我眼真好使.</p>\n<p>除了训练数据, 他还给了测试数据, 只不过测试数据只有10000个.</p>\n<p>验证了这些数据集的构造后, 就开始写代码.</p>\n<p>第一部分就是读入数据集嘛, 构造一个<svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.815ex\" height=\"1.581ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -677 5222.4 699\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-60-TEX-N-37\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path><path id=\"MJX-60-TEX-N-38\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path><path id=\"MJX-60-TEX-N-34\" d=\"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z\"></path><path id=\"MJX-60-TEX-N-D7\" d=\"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z\"></path><path id=\"MJX-60-TEX-N-36\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path><path id=\"MJX-60-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mn\"><use data-c=\"37\" xlink:href=\"#MJX-60-TEX-N-37\"></use><use data-c=\"38\" xlink:href=\"#MJX-60-TEX-N-38\" transform=\"translate(500,0)\"></use><use data-c=\"34\" xlink:href=\"#MJX-60-TEX-N-34\" transform=\"translate(1000,0)\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1722.2,0)\"><use data-c=\"D7\" xlink:href=\"#MJX-60-TEX-N-D7\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2722.4,0)\"><use data-c=\"36\" xlink:href=\"#MJX-60-TEX-N-36\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(1000,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(1500,0)\"></use><use data-c=\"30\" xlink:href=\"#MJX-60-TEX-N-30\" transform=\"translate(2000,0)\"></use></g></g></g></svg> 的训练输入矩阵. 但是我无论用什么方法, 读入数据都挺慢的. 后来我发现numpy里有个叫fromfile的东西, 可以直接读取这种东西, 速度飞快, 大意了.</p>\n<p>然后就是把上面的推导过程写成代码, 代码挺难写的, 而且要注意输入从一个数据变成了60000个数据同时输入, 写了一两小时才写完.</p>\n<!--code￼0-->\n<p>为了把训练结果表示的更清楚一些, 我每10次迭代都会用测试集测试一下正确率.</p>\n<p>调试也调了挺长时间的, 包括调代码的错误, 调学习率之类的.</p>\n<p>不过出人意料的是, 这玩意竟然只需要迭代一次就能达到67%的正确率. 当时刚跑出来正确结果我都不信, 因为调了半天, 我都觉得我这辈子调不出来了. 然后我在训练之前用随机的参数矩阵测试了一下正确率, 果然是10%左右, 就说明我的测试正确率的代码没问题, 他的正确率确实只用了一次迭代就达到了67%.</p>\n<p>迭代20次时, 正确率已经达到了86%左右, 之后正确率上升的就慢慢缓慢了.</p>\n<p><img src=\"/img/softmax-mnist.assets/2021-07-15-3.png\" alt=\"2021-07-15-3\"></p>\n<p>这么简单的方法能达到这么高的正确率是我没想到的, 不愧是机器学习的Hello World.</p>\n<p>这个方法其实和一个全连接的神经网络是一样的, 只是我直接写成了矩阵形式.</p>\n<p>不怎么参考别人, 自己推公式+自己写程序最后出结果挺快乐的, 感觉自己什么都会, 有点飘了.</p>\n<p>下班了, 明天还要去讲课, 这几天好累. 感觉后面应该要学点东西了, 思而不学则殆.</p>\n<p><img src=\"/img/softmax-mnist.assets/4RBM1%7BTIEEXFDV72%5B2GK4FI.jpg\" alt=\"img\"></p>\n","b0dde8ff6d98c8502bdddcda1b9bb4ecefc21ece":"<p>条件变量, 哲学家吃饭</p>\n<h2 id=\"条件变量\"><a href=\"#条件变量\" class=\"headerlink\" title=\"条件变量\"></a>条件变量</h2>\n<p>条件变量用在一个线程需要一直等待一个条件满足后在执行.</p>\n<p>比如下面这段代码就是等待count==n满足之后再继续执行.</p>\n<p>即使用上了互斥锁, 不用自旋锁, 也是有个类似自旋的过程的:</p>\n<!--more-->\n<!--code￼0-->\n<p>只不过, 这个自旋没有自旋锁那么暴力, 他是更大层面上的自旋:</p>\n<ul>\n<li>自旋锁是在上锁的时候, 也就是mutex_lock的时候去自旋, 尝试上锁, 无法上锁就继续自旋.</li>\n<li>这个自旋是上锁之后判断条件是否满足, 如果没有条件不能满足就解锁.</li>\n<li>这个自旋是有条件的, 注意因为mutex他是维护了一个waiter序列, lock失败后这个线程会阻塞, 只有当有人unlock了之后, 这个线程被唤醒了, 才会去尝试这个大自旋.</li>\n</ul>\n<p>看起来, 这个锁尝试自旋的次数并不是很多, 因为只有有人unlock之后他才会自旋.</p>\n<p>但是, 一个mutex可能管理了很多个变量, 这个锁可能会非常大, 很有可能一个线程lock了之后更改了一些毫不相干的变量, 然后unlock, 就会把这个线程给唤醒, 造成资源浪费.</p>\n<p>这样就有条件变量cond, 条件变量必须和mutex一起用, 并且一个cond只能对应一个mutex.</p>\n<p>他支持三个api:</p>\n<ul>\n<li>wait(cv, mutex), 标记为因为cv而阻塞.</li>\n<li>signal/notify(cv), 唤醒一个因为cv而阻塞的线程.</li>\n<li>broadcast/notify_all(cv), 换新所有因为cv而阻塞的线程.</li>\n</ul>\n<p>正常的使用方法:</p>\n<!--code￼1-->\n<p>这是个模版, 我之前在用golang写Raft的时候也经常使用这个模版.</p>\n<p>下面来具体分析了一下这地方干了啥:</p>\n<p>重点在wait, wait我的理解是完成了下面这三个操作:</p>\n<ol>\n<li>mutex.unlock()</li>\n<li>让这个线程阻塞, 等待被唤醒.</li>\n<li>被唤醒后, mutex.lock()</li>\n</ol>\n<p>考虑broadcast的语义, 它会让所有卡在第二步的线程全部启动起来, 这样所有的线程就都会去运行第三步, 争抢mutex. 但是这时候一定只有一个线程能够抢到这个锁. 但是这时候就进入到mutex的语义了: 其他线程虽然没抢到mutex, 又进入了阻塞状态, 但是当mutex被释放后, 他们会因为mutex被唤醒, 从而得到lock, 这一步的唤醒跟broadcast其实是没关系的, 只是因为mutex被释放了.</p>\n<p>考虑到第二步这个操作, 如果另一个锁mutex2已经被其他线程lock上了, 那实际上第二步跟mutex2.lock的效果是一样的, 如果把第二步换成这个, 那么mutex2.unlock就相当于broadcast唤醒了所有线程. 但是感觉还是会遇到很多问题, 有时间仔细想想这个跟条件变量的关系吧.</p>\n<p>信号量啥的感觉没啥讲的, 就不写了.</p>\n<h2 id=\"哲学家吃饭问题\"><a href=\"#哲学家吃饭问题\" class=\"headerlink\" title=\"哲学家吃饭问题\"></a>哲学家吃饭问题</h2>\n<p>哲学家吃饭这个经典问题, jyy主张大道至简, 一切都用一个大锁来锁住所有人, 让所有人拿起和放下叉子的过程都是串行的, 然后用条件变量:</p>\n<!--code￼2-->\n<p>并且jyy主张不要花时间去考虑其他的比较tricky的方法, 他课上也确实没讲.</p>\n<p>不过我还是觉得有些方法还是有一些很值得学习的思想在里面的: 比如我在写6.824的时候就意识到, 如果几个线程都需要获取同样的多个锁, 比如几个线程都需要获取锁mutex1和mutex2, 那这些线程在lock这些锁的时候一定要以一个相同的顺序去lock. 比如要么都是先mutex1.lock再mutex2.lock, 要么都是先mutex2.lock再mutex1.lock, 否则这两个线程一定会死锁.</p>\n<p>然后我看到了哲学家吃饭问题的这样的解法: 让奇数编号的哲学家都先拿右手的叉子再拿左手的叉子, 偶数编号的相反. 我总感觉这两个的思想是一样的, 就是那种规定了每个锁的优先级, 所有人在加锁的时候都需要按照相同的优先级顺序去加锁.</p>\n<p>进一步的, 我深入思考了这个想法, 发现用操作系统那个资源依赖图模型可以说出一些道理: 如果绘制一张图, 图里的每个节点都是一把锁, 那么每个线程的加锁顺序可以用一个这个图上的一组有向边表示. 比如, 两个线程以不同的顺序去加两把锁, 那么这个图就可以表示为:</p>\n<p><img src=\"/img/sync/IMG_E74CF893BDD5-1.jpeg\" alt=\"IMG_E74CF893BDD5-1.jpeg\"></p>\n<p>我认为, 死锁可能发生的充分必要条件是这个图上存在一个环. 比如, 考虑下面的这样一个图:</p>\n<p><img src=\"/img/sync/IMG_4AAC5F1576FF-1.jpeg\" alt=\"IMG_4AAC5F1576FF-1.jpeg\"></p>\n<p>三个线程分别按顺序锁住:</p>\n<ol>\n<li>(红色) 1 2 3 4</li>\n<li>(棕色) 5 4 6 7</li>\n<li>(紫色) 8 7 9 2</li>\n</ol>\n<p>这样, 当所有的线程都锁住了他们锁住的第三个锁时, 没有任何一个线程可以锁住最后一个锁, 就死锁了.</p>\n<p>如果在哲学家问题中, 让每个人先拿左手边的再拿右手边的, 那这五个锁就会形成一个环. 而我们要做的, 就是控制一些锁加锁的顺序, 让他们永远不可能成环. 比如, 在那个奇偶数的哲学家问题解决方法中, 如果把每个人右手边的叉子标号为这个人的编号, 那么这五个叉子的加锁顺序是这样的:</p>\n<p><img src=\"/img/sync/IMG_97DB4ED2C16F-1.jpeg\" alt=\"IMG_97DB4ED2C16F-1.jpeg\"></p>\n<p>这是一个有向无环图, 在上面无论如何找不到一条成环的路径.</p>\n<p>实际上, 这相当于给每个锁设置了一个偏序关系, 这个偏序至少要保证一个线程需要的所有锁都可以互相比较. 这样, 当一个线程需要很多锁时, 就按照这几个锁的偏序关系去加锁, 这样得到的一定是一个有向无环图.</p>\n<p>更一般的做法是, 我可以直接给所有的锁一个全序关系, 这样无论任何线程需要多少锁, 只需要按照这个全序关系的顺序去加锁就行. 比如在哲学家吃饭问题中, 完全可以给每个叉子编号之后, 让每个人先拿编号大的再拿编号小的, 这就构造了一个全序关系. 也就是除了第5个哲学家先拿左手再拿右手, 其他的都先拿右手再拿左手, 这样就可以避免死锁.</p>\n","b736efca373fe790dec946a9cac40791dc521618":"<p><img src=\"/img/%E6%97%A0%E5%90%91%E5%9B%BE%E5%89%B2%E7%82%B9%E6%A1%A5-%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/a.jpg\" alt=\"\"></p>\n<h1 id=\"无向图割点-桥-双连通分量\"><a href=\"#无向图割点-桥-双连通分量\" class=\"headerlink\" title=\"无向图割点/桥&amp;双连通分量\"></a>无向图割点/桥&amp;双连通分量</h1>\n<p>无向图图中所有边要么是树边，要么是反向边。</p>\n<h2 id=\"割点的条件\"><a href=\"#割点的条件\" class=\"headerlink\" title=\"割点的条件\"></a>割点的条件</h2>\n<ol>\n<li>当树根有两个及以上子节点时，树根是割点。</li>\n<li>非根节点u为割点，当且仅当该点<strong>存在</strong>一个子节点v，且v及其所有后代都没有反向边连回u的祖先。（连回u不算，此时u是割点）</li>\n</ol>\n<p>用LOW[x]代表x及其后代能连回祖先最小的DFN值，那么上述条件即为u存在一个子节点v，使得LOW[v] <svg style=\"vertical-align: -0.312ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.76ex\" height=\"1.751ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -636 778 774\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-2A7E\" d=\"M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM674 172Q692 172 694 154Q694 142 687 137Q685 135 395 -2L107 -138H101Q83 -136 83 -118Q83 -106 96 -100Q100 -98 380 35T665 170T674 172Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><use data-c=\"2A7E\" xlink:href=\"#MJX-1-TEX-N-2A7E\"></use></g></g></g></svg> DFN[u].</p>\n<p>另外，若v的后代最早只能连到v自己，那么边(u,v)是桥。</p>\n<!-- more -->\n<!--code￼0-->\n<h2 id=\"例题-POJ1523\"><a href=\"#例题-POJ1523\" class=\"headerlink\" title=\"例题 POJ1523\"></a>例题 POJ1523</h2>\n<!--code￼1-->\n<p>求出所有割点后枚举要删除的割点然后dfs就行了.</p>\n<!--code￼2-->\n<h2 id=\"双连通分量\"><a href=\"#双连通分量\" class=\"headerlink\" title=\"双连通分量\"></a>双连通分量</h2>\n<h3 id=\"点双连通\"><a href=\"#点双连通\" class=\"headerlink\" title=\"点双连通\"></a>点双连通</h3>\n<p>点双连通(以下三条等价):</p>\n<ol>\n<li>该连通图的任意两条边存在一个包含这两条边的简单环；</li>\n<li>该连通图没有割点；</li>\n<li>对于至少3个点的图，若任意两点有至少两条点不重复路径。</li>\n</ol>\n<p>点双连通分量(BCC)</p>\n<p>点双连通分量构成对所有边集的一个划分。(一个点可能属于多个点双连通分量,而一个边恰好属于一个)</p>\n<p>两个点双连通分量最多只有一个公共点，且必为割点。进一步地，所有点双与割点可抽象为一棵树结构。</p>\n<p>不同BCC可能会有公共点,最多只有一个,即割点.任意割点都至少属于两个BCC.</p>\n<p>去掉BCC中任意一个点,BCC仍联通.</p>\n<p>求每个点双分量的方法类似tarjan,栈存的不是点而是边,因为一个点可能属于多个点双,出栈之后无法将这个点统计到其他点双中,而每个边一定都只属于一个点双.不过这样的点一定是割点,可以用栈存点+对割点特判,</p>\n<h4 id=\"例题-HDU3884\"><a href=\"#例题-HDU3884\" class=\"headerlink\" title=\"例题 HDU3884\"></a>例题 HDU3884</h4>\n<!--code￼3-->\n<p>点双缩点之后,整个图变成一个无根树.</p>\n<p>考虑每个叶节点,在叶节点对应的点双中一定要有一个太平井,否则当删除对应的割点后,这个点双将无法到达任何太平井.并且,这个太平井不能安装在割点,如果安装在割点,删除割点后,这个点双的其他结点不仅无法到达其他叶节点的太平井,自己的太平井也被删了.</p>\n<p>同时,对于每个非叶节点,是不需要太平井的.因为非叶节点度数大于1,只删除一个节点是无法让这个节点对应的点双的其他节点到达不了任意一个叶点双的.</p>\n<p>缩点后每个节点的度数等于该点双中割点的个数,因为一个割点代表这个点双连接了另一个点双.</p>\n<p>最终太平井的个数就是叶节点的个数,方案数就是每个叶节点对应的点双中非割节点的个数的乘积.</p>\n<p>特别地,如果整个图只有一个点双,那么应该要修建两个太平井,防止删去唯一的太平井.此时方案数为N*(N-1)/2,其中N为节点个数.</p>\n<p>代码:(<a href=\"https://vjudge.net/solution/24521411\">https://vjudge.net/solution/24521411</a>)</p>\n<!--code￼4-->\n<h3 id=\"边双连通\"><a href=\"#边双连通\" class=\"headerlink\" title=\"边双连通\"></a>边双连通</h3>\n<p>边双连通(以下三条等价):</p>\n<ol>\n<li>\n<p>该连通图的任意一条边存在一个包含这条边的简单环；</p>\n</li>\n<li>\n<p>该连通图没有桥；</p>\n</li>\n<li>\n<p>该连通图任意两点有至少两条(边不重复)路径。</p>\n</li>\n</ol>\n<p>边双连通分量(eBCC)</p>\n<p>边双连通分量构成对所有点集的一个划分。\n两个边双连通分量最多只有一条边，且必为桥。进一步地，所有边双与桥可抽象为一棵树结构。</p>\n","5724108c8dc515f3c5c5232b8ed916b664ede714":"<p><s>一年半前为了省选学网络流之后第一次做网络流的题</s></p>\n<p>首先是自己改造后的Dinic:</p>\n<!--more-->\n<!--code￼0-->\n<p>就用网络流24题当例题了</p>\n<h1 id=\"最大流\"><a href=\"#最大流\" class=\"headerlink\" title=\"最大流\"></a>最大流</h1>\n<h2 id=\"P2766-最长不下降子序列问题\"><a href=\"#P2766-最长不下降子序列问题\" class=\"headerlink\" title=\"P2766 最长不下降子序列问题\"></a>P2766 最长不下降子序列问题</h2>\n<p>第一问直接n^2就行,dp后的数组记为f,其中f[i]代表以第i个数结尾的最长不下降子序列的长度,答案记为ans1.\na[i]代表第i个数.</p>\n<p>第二问可以给对于每个 <svg style=\"vertical-align: -0.462ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.49ex\" height=\"1.957ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -661 2868.6 865\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-1-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-1-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-1-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D457\" xlink:href=\"#MJX-1-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(689.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3C\" xlink:href=\"#MJX-1-TEX-N-3C\"></use></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-1-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(2523.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-1-TEX-I-1D456\"></use></g></g></g></svg> ,如果 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.399ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 5038.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-2-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-2-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-2-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-2-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-2-TEX-N-3C\" d=\"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z\"></path><path id=\"MJX-2-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-2-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(529,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-2-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(807,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-2-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1219,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-2-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1774.8,0)\"><g data-mml-node=\"text\"><use data-c=\"3C\" xlink:href=\"#MJX-2-TEX-N-3C\"></use></g><g data-mml-node=\"text\" transform=\"translate(778,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-2-TEX-N-3D\"></use></g></g><g data-mml-node=\"mi\" transform=\"translate(3608.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-2-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4137.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-2-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(4415.6,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-2-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4760.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-2-TEX-N-5D\"></use></g></g></g></svg> 并且 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13.631ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 6025 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-3-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-3-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-3-TEX-I-1D456\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-3-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-3-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-3-TEX-I-1D457\" d=\"M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z\"></path><path id=\"MJX-3-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"></path><path id=\"MJX-3-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-3-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-3-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D456\" xlink:href=\"#MJX-3-TEX-I-1D456\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1173,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-3-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1728.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-3-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2784.6,0)\"><use data-c=\"1D453\" xlink:href=\"#MJX-3-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(3334.6,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-3-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3612.6,0)\"><use data-c=\"1D457\" xlink:href=\"#MJX-3-TEX-I-1D457\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4024.6,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-3-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(4524.8,0)\"><use data-c=\"2B\" xlink:href=\"#MJX-3-TEX-N-2B\"></use></g><g data-mml-node=\"mn\" transform=\"translate(5525,0)\"><use data-c=\"31\" xlink:href=\"#MJX-3-TEX-N-31\"></use></g></g></g></svg> ,就意味着选完第j个数后,再选第i个数,可以选到一个最长的不下降子序列.</p>\n<p>因为最后是要记录最长不下降子序列的个数,所以每个最长不下降子序列对答案的贡献均为1,所以可以从j到i连一条容量为1的边.\n因为所有 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.847ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 3468.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-4-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-4-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-4-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-4-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-4-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-4-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-4-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-4-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-4-TEX-I-1D44E\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1357,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-4-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1912.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-4-TEX-N-3D\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2968.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-4-TEX-N-31\"></use></g></g></g></svg> 的点a都可作为起点,所有 <svg style=\"vertical-align: -0.566ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11.237ex\" height=\"2.262ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -750 4966.6 1000\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-5-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"></path><path id=\"MJX-5-TEX-N-5B\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path><path id=\"MJX-5-TEX-I-1D44F\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path><path id=\"MJX-5-TEX-N-5D\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path><path id=\"MJX-5-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"></path><path id=\"MJX-5-TEX-I-1D44E\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><path id=\"MJX-5-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-5-TEX-I-1D460\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"></path><path id=\"MJX-5-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use data-c=\"1D453\" xlink:href=\"#MJX-5-TEX-I-1D453\"></use></g><g data-mml-node=\"mo\" transform=\"translate(550,0)\"><use data-c=\"5B\" xlink:href=\"#MJX-5-TEX-N-5B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(828,0)\"><use data-c=\"1D44F\" xlink:href=\"#MJX-5-TEX-I-1D44F\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1257,0)\"><use data-c=\"5D\" xlink:href=\"#MJX-5-TEX-N-5D\"></use></g><g data-mml-node=\"mo\" transform=\"translate(1812.8,0)\"><use data-c=\"3D\" xlink:href=\"#MJX-5-TEX-N-3D\"></use></g><g data-mml-node=\"mi\" transform=\"translate(2868.6,0)\"><use data-c=\"1D44E\" xlink:href=\"#MJX-5-TEX-I-1D44E\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3397.6,0)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-5-TEX-I-1D45B\"></use></g><g data-mml-node=\"mi\" transform=\"translate(3997.6,0)\"><use data-c=\"1D460\" xlink:href=\"#MJX-5-TEX-I-1D460\"></use></g><g data-mml-node=\"mn\" transform=\"translate(4466.6,0)\"><use data-c=\"31\" xlink:href=\"#MJX-5-TEX-N-31\"></use></g></g></g></svg> 的点b都可作为终点,所以可以用超级源向所有满足条件的点a连一条边,所有满足条件的点b向超级汇连一条边.同理,这些边容量均为1.</p>\n<p>这样对整个图跑一个最大流即可得到答案.但是为了保证每个数只被用一次,需要利用拆点限制每个点的流量为1.即将一个点拆为两个点,并且这两个点之间仅有一条容量为1的边.</p>\n<p>第三问只是取消了<svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-6-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-6-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-6-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-6-TEX-N-31\"></use></g></g></g></g></g></svg> 和 <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-7-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-7-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-7-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-7-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 的使用次数限制,所以只要把限制这两个点使用次数的边的容量全部改为INF即可,即超级源向 <svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-8-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-8-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-8-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-8-TEX-N-31\"></use></g></g></g></g></g></svg> 的边, <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-9-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-9-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-9-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-9-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 到超级汇的边, <svg style=\"vertical-align: -0.339ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.282ex\" height=\"1.339ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1008.6 592\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-10-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-10-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-10-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mn\"><use data-c=\"31\" xlink:href=\"#MJX-10-TEX-N-31\"></use></g></g></g></g></g></svg> 和 <svg style=\"vertical-align: -0.357ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.442ex\" height=\"1.357ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -442 1079.3 599.8\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-11-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"></path><path id=\"MJX-11-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msub\"><g data-mml-node=\"mi\"><use data-c=\"1D465\" xlink:href=\"#MJX-11-TEX-I-1D465\"></use></g><g data-mml-node=\"TeXAtom\" transform=\"translate(605,-150) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use data-c=\"1D45B\" xlink:href=\"#MJX-11-TEX-I-1D45B\"></use></g></g></g></g></g></svg> 分别拆成的两点之间的边这四条边的容量限制改为INF后再跑最大流即可.</p>\n<p>超级汇有一种整合所有信息的感觉,将所有和答案直接相关的节点流量信息全部汇总起来.</p>\n<p>对于点流量的限定,一般用拆点的方法.拆点可以用*2-1和*2防止撞车.</p>\n<p>图可以表示元素之间的关系,这题元素之间的关系十分明显(走过一个节点下一个可以走哪些节点),考虑建图.</p>\n<p>第二问是一种\"并列\"的问题,取出的几个子序列地位相同,且均满足相同的条件.网络流解决的也是这种\"并列\"的问题,在图中,每一个节点,每一条路径都是地位相同的.</p>\n<!--code￼1-->\n<h1 id=\"最小割\"><a href=\"#最小割\" class=\"headerlink\" title=\"最小割\"></a>最小割</h1>\n<h2 id=\"P2774-方格取数问题\"><a href=\"#P2774-方格取数问题\" class=\"headerlink\" title=\"P2774 方格取数问题\"></a>P2774 方格取数问题</h2>\n<p>这道题也是一中\"并列\"的问题,要所有元素地位均相同,需要从中挑选出几个.</p>\n<p>\"割\"的概念是,让这个图的原点无法到达汇点,意味着关系的断绝.</p>\n<p>将这个方格棋盘染色后,就是让黑点和其相邻的白点不能同时出现.</p>\n<p>只要让建立的图反映出,当黑点和相邻的白点同时出现时,源点和汇点就会联通,这样让图不连通就意味着没有黑点和相邻白点同时出现.</p>\n<p>为了让删去的点值最小,要把点值反映到边权上,才能利用\"最小\"割求解</p>\n<!--code￼2-->\n<p>To be continued...</p>\n","4cbcec8af53fd160cabf7c78da1ed52f2fdd2e8d":"<h1 id=\"基础算法\"><a href=\"#基础算法\" class=\"headerlink\" title=\"基础算法\"></a>基础算法</h1>\n<h2 id=\"贪心\"><a href=\"#贪心\" class=\"headerlink\" title=\"贪心\"></a>贪心</h2>\n<p>根据贪心的数学背景我们在做贪心题目的时候一般有两种策略：\n1.把一个问题划分成很多子问题，对于每个子问题直接求最优解，然后合成一个最优解；\n2.对于当前局面，搜索所有可能的“临近局面”，选择最优的局面进行转移</p>\n<!--more-->\n<p><strong>数据范围较大时，一般使用贪心</strong></p>\n<p><strong>贪心的复杂度一般很小</strong></p>\n<h3 id=\"eg1\"><a href=\"#eg1\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rd7NQ.png\" alt=\"\"></p>\n<p>按单价排序即可</p>\n<h3 id=\"eg2\"><a href=\"#eg2\" class=\"headerlink\" title=\"eg2.\"></a>eg2.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rw1gI.png\" alt=\"9rw1gI.png\">(<a href=\"https://imgchr.com/i/9rw1gI\">https://imgchr.com/i/9rw1gI</a>)</p>\n<p>数学上的mod指如果mod为负数,不断加模数直到为正数.</p>\n<p>即 '5 mod 6 = 5'</p>\n<h3 id=\"eg3-4\"><a href=\"#eg3-4\" class=\"headerlink\" title=\"eg3-4\"></a>eg3-4</h3>\n<p>紫书区间问题</p>\n<h3 id=\"eg5\"><a href=\"#eg5\" class=\"headerlink\" title=\"eg5.\"></a>eg5.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdIHS.png\" alt=\"\"><strong>非矩形贪心问题一定要转化成线段问题</strong></p>\n<hr>\n<ul>\n<li><strong>雷达放在x轴上一定比放在x轴下方更优</strong></li>\n</ul>\n<h4 id=\"错误思路\"><a href=\"#错误思路\" class=\"headerlink\" title=\"错误思路\"></a>错误思路</h4>\n<!--code￼0-->\n<p>由于圆的特性,会出现以下反例</p>\n<p><img src=\"1-1-1.jpg\" alt=\"\"></p>\n<h4 id=\"正确思路\"><a href=\"#正确思路\" class=\"headerlink\" title=\"正确思路\"></a>正确思路</h4>\n<!--code￼1-->\n<p><strong>改变研究对象</strong></p>\n<p>考虑研究每一个岛屿.</p>\n<p>由于雷达的半径固定,所以对于每一个与x轴距离小于半径的岛屿,都能在x轴上找到一个区间,使这个区间里所有的雷达都能探测到这个岛屿.</p>\n<p>问题转化为区间选点问题.</p>\n<h3 id=\"eg6\"><a href=\"#eg6\" class=\"headerlink\" title=\"eg6.\"></a>eg6.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rd4nf.png\" alt=\"\"></p>\n<p><strong>进制问题</strong></p>\n<p>因为1!+2!+...+(n-1)! &lt; n!</p>\n<p>所以如果可以表示,则一定可以通过每次取最大的不超过n-已表示的数的数的阶乘得到</p>\n<p>[一个我不知道为什么的结论]</p>\n<h3 id=\"eg7\"><a href=\"#eg7\" class=\"headerlink\" title=\"eg7.\"></a>eg7.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdq9s.png\" alt=\"\"></p>\n<p>字典序最大即越靠前越大</p>\n<p>当K&lt;= N-1时,把第N个数换到最前</p>\n<p>K&gt;N-1时类似.</p>\n<h3 id=\"eg8\"><a href=\"#eg8\" class=\"headerlink\" title=\"eg8.\"></a>eg8.</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdHhj.png\" alt=\"\"></p>\n<p>过于复杂先挖个坑</p>\n<h2 id=\"贪心的骗分策略\"><a href=\"#贪心的骗分策略\" class=\"headerlink\" title=\"贪心的骗分策略\"></a>贪心的骗分策略</h2>\n<p>1.贪心算法与随机化算法的结合（例如模拟退火）</p>\n<ul>\n<li>在决策时有概率接受比当前情况差的方向</li>\n<li>在搜索到结果时以一定概率跳出当前解，重新开始贪心</li>\n<li>在贪心开始的时候，利用随机化选择多个起点开始贪心，取其最小值</li>\n</ul>\n<!--code￼2-->\n<h2 id=\"分治\"><a href=\"#分治\" class=\"headerlink\" title=\"分治\"></a>分治</h2>\n<h3 id=\"分治的用处\"><a href=\"#分治的用处\" class=\"headerlink\" title=\"分治的用处\"></a>分治的用处</h3>\n<p>分治算法在OI中的运用主要在两个方面：</p>\n<ul>\n<li>基于二分查找、三分查找的运用</li>\n<li>将题目划分为更细小的子问题的运用</li>\n</ul>\n<h3 id=\"二分\"><a href=\"#二分\" class=\"headerlink\" title=\"二分\"></a>二分</h3>\n<ul>\n<li>本质:在一个范围里确定一个分界,使分界的左边满足一个条件,右边满足一个条件</li>\n<li>适用范围:范围满足单调性</li>\n</ul>\n<p>常见使用情景:</p>\n<ul>\n<li>简单的二分查找</li>\n<li>在一个单调函数里寻找可行最值</li>\n<li>最值的最值</li>\n</ul>\n<h4 id=\"首先我们需要一个好的模板\"><a href=\"#首先我们需要一个好的模板\" class=\"headerlink\" title=\"首先我们需要一个好的模板\"></a>首先我们需要一个好的模板</h4>\n<!--code￼3-->\n<h4 id=\"eg1-1\"><a href=\"#eg1-1\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdq9s.png\" alt=\"\"></p>\n<ul>\n<li><strong>借教室的原则是先到先得</strong> 这句话点明修改的订单编号满足单调性.即如果前面的订单都满足不了,后面的订单一定不能满足.如果后面的订单可以满足,前面的订单一定能满足.</li>\n<li><strong>主题框架</strong> 既然满足单调性,不难想到二分.二分出能满足的订单与不能满足的订单的分界即可.</li>\n<li><strong>数据结构</strong> 显然这道题多次进行<strong>区间修改,单点查询</strong> 的操作,考虑用差分来维护.</li>\n</ul>\n<h4 id=\"eg2-1\"><a href=\"#eg2-1\" class=\"headerlink\" title=\"eg2.\"></a>eg2.</h4>\n<!--code￼4-->\n<ul>\n<li>二分 + 一些神奇的算法</li>\n<li>这个神奇的算法能计算出能否选中k个区间使任意一个点仍保持在k以下</li>\n<li>二分出k的最大值即可</li>\n<li>具体使什么神奇的算法我好像忘了但好像是贪心</li>\n</ul>\n<h4 id=\"eg3\"><a href=\"#eg3\" class=\"headerlink\" title=\"eg3.\"></a>eg3.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdHhj.png\" alt=\"\">过于复杂先开个坑</p>\n<h3 id=\"三分\"><a href=\"#三分\" class=\"headerlink\" title=\"三分\"></a>三分</h3>\n<ul>\n<li>使用范围:求一个单峰函数的最值</li>\n</ul>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdxBT.png\" alt=\"\"></p>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdXj0.png\" alt=\"9rdXj0.png\"></p>\n<p>ppt好像有错误不确定就不写了</p>\n<h3 id=\"归并类分治\"><a href=\"#归并类分治\" class=\"headerlink\" title=\"归并类分治\"></a>归并类分治</h3>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdOcq.png\" alt=\"\"></p>\n<h3 id=\"分块\"><a href=\"#分块\" class=\"headerlink\" title=\"分块!!!!!\"></a>分块!!!!!</h3>\n<p><strong>类型</strong></p>\n<ul>\n<li>给出一个长度为n的数列，以及m个操作，支持区间加法，单点查询</li>\n<li>给出一个长为n的数列以及m个操作，支持区间加法，并询问区间内小于等于某个数x的元素个数</li>\n<li>给出一个长为n的数列以及m个操作，支持区间开方，区间求和</li>\n</ul>\n<h4 id=\"分块-1\"><a href=\"#分块-1\" class=\"headerlink\" title=\"分块\"></a>分块</h4>\n<p>分块是线段树/树状数组的一个替代品.</p>\n<p>给定一个区间,分为[sqrt(N)]块,每一块有[sqrt(N)]个元素.</p>\n<p>剩余的不足[sqrt(N)]个元素单独暴力处理.</p>\n<p>[]为向下取整</p>\n<h4 id=\"区间加法-单点查询\"><a href=\"#区间加法-单点查询\" class=\"headerlink\" title=\"区间加法,单点查询\"></a>区间加法,单点查询</h4>\n<p><strong>类lazy标记</strong></p>\n<p>每一块都有一个lazy标记.</p>\n<p>加法区间内的整块加法,只需在加lazy标记上加.</p>\n<p>查询时加上该块的标记即可.</p>\n<p>不在整块内的?暴力啊啊啊啊!</p>\n<h4 id=\"区间加法-查询小于x的个数\"><a href=\"#区间加法-查询小于x的个数\" class=\"headerlink\" title=\"区间加法,查询小于x的个数\"></a>区间加法,查询小于x的个数</h4>\n<p>每一块排序+二分 不解释</p>\n<p>不在整块内的同样暴力啊啊啊</p>\n<h4 id=\"区间开方-区间求和\"><a href=\"#区间开方-区间求和\" class=\"headerlink\" title=\"区间开方,区间求和\"></a>区间开方,区间求和</h4>\n<p>因为是向下取整开方,所以每一数在开方后多次后就会变为1</p>\n<p>然后自己研究吧(狗屎)</p>\n<h4 id=\"eg1-2\"><a href=\"#eg1-2\" class=\"headerlink\" title=\"eg1.\"></a>eg1.</h4>\n<p><img src=\"/img/%E8%B4%AA%E5%BF%83-%E5%88%86%E6%B2%BB-%E5%88%86%E5%9D%97%E6%80%BB%E7%BB%93/9rdL3n.png\" alt=\"\"></p>\n<p>难点主要在<strong>如何求[l,r]之间不同的元素</strong></p>\n<p>用pre[i]代表上一次出现a[i]这个元素的位置,问题转化为查询[l,r]区间内pre[i] &lt; l的个数.</p>\n<p>O(n)即可完成预处理</p>\n<!--code￼5-->","9b05d264d765f40c2cc72fac6045dc550485c55a":"<p>想联系👴的可以发邮件给orange_cheers@outlook.com捏.</p>\n","d6c3f9184a019254e9f84586f657aae697c18e28":"<p>如果按照第一天只有其他症状不发烧来算的话, 今天应该是我渡劫第三天. 早上起来并没有预期的喉咙如咽刀片一般, 只是感觉有点冷, 有点想燃起来的样子. 随后吃了一粒布洛芬缓释. 虽然有人说布洛芬缓释的退热效果一般, 主要是用来止痛的, 但是今天它的效果却意料之外的好, 早上吃了一粒之后一整天都没什么发热的迹象, 一直到现在才刚刚有点头晕. 问了一个同在西安感染的朋友, 他说他是第四天嗓子才会剧痛, 我等明天看看吧.</p>\n<p>今天的症状甚至比昨天还要好太多, 今天只解锁了全身随机痛这一个效果, 大概每分钟会有手指, 胳膊, 肺, 肚子, 腿, 脚中的两个地方痛一下, 也很轻微罢了. 昨天早上九点多感觉剧烈地发冷之后, 体温一路飙升, 终于到晚上达到了38度7, 一天都属于在床上半死不活的状态. 虽然38度5的这个不成文的规定好像也没有什么特别的道理, 但是至少到了这个温度之后吃药的罪恶感就会几乎消失.</p>\n<p>病急乱投医, 头晕的时候也是如此. 我本着宁可信其有不可信其无的心态, 吃了一包网上说效果要比缓释胶囊好的布洛芬颗粒. 西安的水质是真的硬, 我今天第一次用自来水烧了开水, 冲泡布洛芬的时候以为杯子里面悬浮的大块颗粒物都是不溶于水的布洛芬, 颗粒物喝到嗓子上发出了几声让99以为我要4⃣️了的咳嗽声之后还想着把这个颗粒咽下去, 能多吃一点是一点, 后来看了看茶壶里也有的水垢才明白. 但是布洛芬确实不怎么溶于水.</p>\n<p>今天中午点了一家量很大很便宜的外卖, 虽然味道不怎么样. 晚上点了一份皮蛋瘦肉粥和一份蒸饺. 今天两份外卖送的都比较迟. 中午在比预计时间晚了半小时后还没收到送达通知的我准备打电话催单的时候突然想起今天考研人中午吃饭时间比较拥挤, 遂作罢. 我甚至想打个电话说我不考研我的餐可以送晚一点, 但是感觉这样也挺麻烦人家, 也就算了.</p>\n<p>说到考研, 昨天测了抗原实锤阳了之后最难受的并不是养着病毒的身体, 而是心里实在对不起跟我一起住的两位考研人. 我也实在不知道我有没有什么地方没有做好, 导致我成为屋子里第一个被发现的阳性. N95什么的肯定是必备的, 平时点来外卖我也是75%的医用酒精直接对着米饭喷, 为了防止不经意感染我已经两个星期没有去过比拿外卖的货架更远的地方了. 上个星期, 由于我上个月错判国家形势, 再加上中山那边一直在催, 我被迫去了一趟医院做了一次体检. 回来之前我让99提前把酒精放在门口, 我先全身喷一遍, 吸入了不知道多少酒精蒸汽, 感觉脑子里的液体都是乙醇之后才敢进的屋子. 进屋之后走一步喷一步, 一小瓶酒精消毒液被我喷完了小一半. 回来之后在自己带洗手间的主卧里自我隔离了三天, 确认没有任何症状才敢出的屋子. 虽然我知道很多措施可能太过夸张, 但是至少在我的认知里这些措施多做总比少做要好一点, 这样当我真的阳性了之后, 就不至于一直后悔自己当时为什么没有再多做一点.</p>\n<p>事到如今, 我也很希望自己能接受我的病毒大概率是通过下水道的气溶胶传染这个观点. 不过无论怎样, 这次意料之外的, 在最不该出现的时刻出现的感染, 确实带给了我很大的心理折磨. 无论是之前的红码强制隔离通报批评警告处分也好, 还是这次的害怕在考研前传染给考研室友也好, 我害怕的一直都不是病毒本身, 不是阳性之后的一系列身体不适的症状, 而是阳性之后带来的社会层面的影响, 无论是不合理的还是合理的, 无论是人为强加荒谬可笑的还是自然而然理所应当的.</p>\n<p>听说今年的政治和英语一非常不容易, 比往年都难上许多, 希望他们如果有幸能够发现病毒并没有给他们带来太大的影响的话, 能够顺便消散掉自己对考试的恐惧吧.</p>\n<p>我已经很久不敢在空间里表达自己的一些哪怕有那么一点点敏感的观点了, 不过为了不浪费自己的时间, 我还是想说我不希望在这里跟任何人产生有关防控政策的讨论, 如果您对我有什么意见, 您是对的.</p>\n<p>头有点晕了, 就这样吧.</p>\n<p>作为一个敬畏科学的人, 最后附一张布洛芬的合成路线图.</p>\n<p><img src=\"/img/corona-day3/ibuprofen.png\" alt=\"img\"></p>\n","c4187fd8f9518f509cb8aef35cd4eccb13837e0c":"<p>如果按照第一天只有其他症状不发烧来算的话, 今天应该是我渡劫第三天. 早上起来并没有预期的喉咙如咽刀片一般, 只是感觉有点冷, 有点想燃起来的样子. 随后吃了一粒布洛芬缓释. 虽然有人说布洛芬缓释的退热效果一般, 主要是用来止痛的, 但是今天它的效果却意料之外的好, 早上吃了一粒之后一整天都没什么发热的迹象, 一直到现在才刚刚有点头晕. 问了一个同在西安感染的朋友, 他说他是第四天嗓子才会剧痛, 我等明天看看吧.</p>\n<p>今天的症状甚至比昨天还要好太多, 今天只解锁了全身随机痛这一个效果, 大概每分钟会有手指, 胳膊, 肺, 肚子, 腿, 脚中的两个地方痛一下, 也很轻微罢了. 昨天早上九点多感觉剧烈地发冷之后, 体温一路飙升, 终于到晚上达到了38度7, 一天都属于在床上半死不活的状态. 虽然38度5的这个不成文的规定好像也没有什么特别的道理, 但是至少到了这个温度之后吃药的罪恶感就会几乎消失.</p>\n<p>病急乱投医, 头晕的时候也是如此. 我本着宁可信其有不可信其无的心态, 吃了一包网上说效果要比缓释胶囊好的布洛芬颗粒. 西安的水质是真的硬, 我今天第一次用自来水烧了开水, 冲泡布洛芬的时候以为杯子里面悬浮的大块颗粒物都是不溶于水的布洛芬, 颗粒物喝到嗓子上发出了几声让99以为我要4⃣️了的咳嗽声之后还想着把这个颗粒咽下去, 能多吃一点是一点, 后来看了看茶壶里也有的水垢才明白. 但是布洛芬确实不怎么溶于水.</p>\n<p>今天中午点了一家量很大很便宜的外卖, 虽然味道不怎么样. 晚上点了一份皮蛋瘦肉粥和一份蒸饺. 今天两份外卖送的都比较迟. 中午在比预计时间晚了半小时后还没收到送达通知的我准备打电话催单的时候突然想起今天考研人中午吃饭时间比较拥挤, 遂作罢. 我甚至想打个电话说我不考研我的餐可以送晚一点, 但是感觉这样也挺麻烦人家, 也就算了.</p>\n<p>说到考研, 昨天测了抗原实锤阳了之后最难受的并不是养着病毒的身体, 而是心里实在对不起跟我一起住的两位考研人. 我也实在不知道我有没有什么地方没有做好, 导致我成为屋子里第一个被发现的阳性. N95什么的肯定是必备的, 平时点来外卖我也是75%的医用酒精直接对着米饭喷, 为了防止不经意感染我已经两个星期没有去过比拿外卖的货架更远的地方了. 上个星期, 由于我上个月错判国家形势, 再加上中山那边一直在催, 我被迫去了一趟医院做了一次体检. 回来之前我让99提前把酒精放在门口, 我先全身喷一遍, 吸入了不知道多少酒精蒸汽, 感觉脑子里的液体都是乙醇之后才敢进的屋子. 进屋之后走一步喷一步, 一小瓶酒精消毒液被我喷完了小一半. 回来之后在自己带洗手间的主卧里自我隔离了三天, 确认没有任何症状才敢出的屋子. 虽然我知道很多措施可能太过夸张, 但是至少在我的认知里这些措施多做总比少做要好一点, 这样当我真的阳性了之后, 就不至于一直后悔自己当时为什么没有再多做一点.</p>\n<p>事到如今, 我也很希望自己能接受我的病毒大概率是通过下水道的气溶胶传染这个观点. 不过无论怎样, 这次意料之外的, 在最不该出现的时刻出现的感染, 确实带给了我很大的心理折磨. 无论是之前的红码强制隔离通报批评警告处分也好, 还是这次的害怕在考研前传染给考研室友也好, 我害怕的一直都不是病毒本身, 不是阳性之后的一系列身体不适的症状, 而是阳性之后带来的社会层面的影响, 无论是不合理的还是合理的, 无论是人为强加荒谬可笑的还是自然而然理所应当的.</p>\n<p>听说今年的政治和英语一非常不容易, 比往年都难上许多, 希望他们如果有幸能够发现病毒并没有给他们带来太大的影响的话, 能够顺便消散掉自己对考试的恐惧吧.</p>\n<p>我已经很久不敢在空间(原文发送在QQ空间)里表达自己的一些哪怕有那么一点点敏感的观点了, 不过为了不浪费自己的时间, 我还是想说我不希望在这里跟任何人产生有关防控政策的讨论, 如果您对我有什么意见, 您是对的.</p>\n<p>头有点晕了, 就这样吧.</p>\n<p>作为一个敬畏科学的人, 最后附一张布洛芬的合成路线图.</p>\n<p><img src=\"/img/corona-day3/ibuprofen.png\" alt=\"img\"></p>\n","92a2eb3ea0b70146848bbcb99e34c503bb33f0b3":"<h1 id=\"保研游记\"><a href=\"#保研游记\" class=\"headerlink\" title=\"保研游记\"></a>保研游记</h1>\n<p>这个游记其实是从7月初, 准确地说应该是2022年7月4日, 中间一直断断续续的写, 一直到今天, 也就是2023年1月15日, 才算正式把它写完.</p>\n<p>这篇文章因为写的时候跨度比较长, 所以也可以从我的文笔, 或者语气什么的看出我在这段时间对一些事的看法(能吗), 并且有时候写文章的日期跟写的这件事发生的日子其实差距挺大, 所以我会把每一段发生的事日期标注起来的同时, 标注出写这段文字时的日期.</p>\n<p>这篇文章原连载于xdsec内部bbs, 现在写完了就把他发了出来, 当然对一些敏感信息做了处理.</p>\n<p>最后对自己的条件简单介绍一下:(这段文字是7月4日写的)</p>\n<p>保研无非看四个方面: 排名, 竞赛奖项, 科研, 项目. 我是计科院计算机科学与技术专业, 标准的低排名选手, 夏令营期间排名7%. 竞赛主要是acm类, 有邀请赛的银牌, 区域赛的铜牌和省赛的金牌. 还有一些其他的奖项, 比如大二时拿的国家奖学金, 中国计算机学会的CCF优秀大学生, 还有数模美赛的M奖. CSP, 就是那个CCF软件能力认证, 我是在大二上学期的CSP中拿到了330分, 累计排名前1.9%. 科研毫无经历, 这也是我除了排名外的最大弱势. 项目经历只有自己在自学MIT的 6.824 Distributed Systems 时自己完成的lab1-3, 我把它包装成了两个项目: 一个是 MapReduce系统, 另一个是基于Raft一致性算法的Key-Value存储服务.</p>\n<p>因为自己之前曾经在深度学习方向探索过很长一段时间, 最终最大的收获就是我坚决不碰这玩意. 所以夏令营期间的我的方向也很明确: 尽量找搞systems方向的老师和实验室. 并且个人因为听过太多博士生的悲惨遭遇, 所以选择了就业导向, 接受专硕, 拒绝直博. 所以这样一套选择对于我来说其实是很有利的: 一个是避开了AI这个卷王方向, 另一个是能接受专硕让我能入更多学校的夏令营. 当然现在看好像其实第二个的帮助不是很大, 因为专硕也很卷, 有的时候甚至比学硕还卷.</p>\n<p>因为排名低, 所以才去的 海投 策略, 也就是应报尽报, 不漏一校, 除非太麻烦. 截止到7.4日晚, 我已经报名了22所学校的夏令营, 已经收到了8个学校的入营通知, 这其实是我没想到的. 因为按理说7%的排名, 基本是没有什么营可以入的. 比我低2名的一位acm铜牌选手, 现在基本没入什么营.</p>\n<p>目前收到的入营通知有: 中山大学计算机学院, 浙江大学软件学院, 北京邮电大学计算机学院, 上海交通大学软件学院, 上海科技大学信息学院, 北京航空航天大学计算机学院, 哈尔滨工业大学(威海)计算机学院, 山东大学计算机学院.</p>\n<p>其中, 哈工威和山大报着是想练练手, 但是哈工威进群之后我忘改备注了, 第二天被踢了, 正好还要陪rx去一附院, 就不去了.</p>\n<p>山大跟北航冲突了, 就主动联系了山大放弃夏令营名额.</p>\n<p>明天要去陪rx做胃镜, 今天先写到这.</p>\n<p>下面开始正文:</p>\n<hr>\n<h2 id=\"7月4日-写于7月5日\"><a href=\"#7月4日-写于7月5日\" class=\"headerlink\" title=\"7月4日 (写于7月5日)\"></a>7月4日 (写于7月5日)</h2>\n<p>集美们, 今天又遇到绝绝子事件, 咱就是说一整个的无语住了.\n前两天, 6月30日, 我收到了中山大学的入营邮件, 这对于保研底层人的我来说算是如获至宝. 即使在对着邮件思考了半天6月到底有没有31号之后, 我对sysu的热情也丝毫未减, 没等到6月31号我就进了中山的群.\n<img src=\"img/baoyan/1657007619-88739-image.jpeg\" alt=\"\"></p>\n<p>但是, 北航是出了名的喜欢acm选手, 并且北航的夏令营是不允许北航本科的同学参加的, 到了预推免阶段就基本都是北航本科的神仙打架, 所以北航一直是我夏令营的第一目标. 但是当时北航的入营结果还没出来, 作为保研弱势群体, 我还不敢奢求能再入什么营了, 而且即使能入营时间也有可能不冲突, 而且即使时间冲突了也大概率可以双开, 不会说真的两个两边都不能翘的东西撞在一起的.</p>\n<p>事实证明, 我低估了事情的复杂性. 最终, 我入了北航, 并且北航时间和中山的冲突了, 并且, 中山的机试和北韩的双机位测试时间冲突了. 我本以为问题不大, 大不了双机位测试调调时间, 或者中山机试光速ak下播. 然而, 中山可能是故意的, 时间放在了7号上午9点到12点, 并且 不可以提前交卷 . 而北航那边说的也很绝, 说双机位测试如果不参加, 就视为放弃入营资格:</p>\n<p><img src=\"img/baoyan/1657008326-237856-image.jpeg\" alt=\"\"></p>\n<p>没办法, 只能放弃中山了. 可是中山群里早就说要放弃入营的尽早放弃, 现在机试的账号密码都发给我了, 今天上午中山的监考都联系我了, 跟我约好了面试测试时间.</p>\n<p><img src=\"img/baoyan/1657008467-146891-image.jpeg\" alt=\"\"></p>\n<p>正在我进退两难的时候, 地铁到站了, 我又要去处理我上次出地铁的时候Apple Watch没电了导致我现在手表上的长安通还处于未出站的状态的问题, 处理完这个问题再接着进退两难.</p>\n<p>这时, 中山的一个叫做考务助理的人来找我:</p>\n<p><img src=\"img/baoyan/1657008595-400801-image.jpeg\" alt=\"\"></p>\n<p>看到这个, 👴就想起来前两天👴花了23大洋在顺丰寄了个特快把材料寄过去, 结果还没送到, 气不打一出来.</p>\n<p><img src=\"img/baoyan/1657009187-761246-img-5933.jpeg\" alt=\"\"></p>\n<p>这时候👴急中生智, 想着能不能借着这个机会编个理由, 比如中午有火车, 把夏令营给推脱掉, 正好借着这个机会营造出一种“哎呀我本来是想参加机试的而且我本来还有事情克服了各种困难想要参加机试结果现在还整出来材料没寄过去这一出我要参加的话不仅麻烦自己还要麻烦您老人家所以我干脆不参加算了都怪顺丰呜呜呜”的感觉.</p>\n<p><img src=\"img/baoyan/1657009284-7467-image.jpeg\" alt=\"\"></p>\n<p>没想到那边答应的还算爽快.</p>\n<p>现在就算是把中山也放弃了, 还是挺不舍的, 虽然可能大概率不会去广州那边, 但是中山有个天河二号, 那边搞超算衍生出来的方向的老师还是很多的, 而且夏令营系统做的也很好, 比北邮那个点任何一个按钮都有50%的几率进入到asp.net的错误页面每次报名都是一个马尔可夫过程的系统好多了.</p>\n<p>18级的一个学长跟我说, 夏令营面试最好是从最菜的学校往上面试, 这样自信也会越来越强, 但是经过这样一折腾, 我的第一个面试就是北航了, 没有一个学校供我练手了. 可能这就是夏令营要寄的预兆吧.</p>\n<h2 id=\"7-8-大寄-写于7月8日\"><a href=\"#7-8-大寄-写于7月8日\" class=\"headerlink\" title=\"7.8 大寄 (写于7月8日)\"></a>7.8 大寄 (写于7月8日)</h2>\n<p>今天是北航的机试. 按理说我是可以不参加的. 北航的机试是可以用CSP的分数折算的. 按理说, CSP的累计排名前10%折算就不亏. 但是折算之后具体多少分还是要在所有要求折算的人中按照累计排名来看. 但是北航有个特殊的要求, CSP报名的时候选的那个语言必须是C/C++, 不能选择ALL. 我虽然每次CSP都是只用C++, 但是我最高的一次330分(累计排名1.9%)是选了ALL, 选C++的只有一次290分(那次比较难, 单次排名2%, 但是累计排名是在所有场次里排名, 只有4.6%).\n按理说, 如果我能够用330分抵机试, 那我将绝杀, 大概率是满分. 但是用290分可能有那么一点几率不是满分, 但是即使不是满分, 估计也差不了几分. 但是我想到前段时间学长劝我的, 说我这情况可以直接去考机试, 拿个满分, 这样比较稳妥一点. 北航是很看重机试的, 其他学校都说机试成绩仅供参考, 但是北航明确说了机试成绩占50%. 北航历年的题目也不难, 满分问题不大. 我去看了一下往年题, 好像难度确实不大, 满分应该十拿九稳.\n跟我类似情况的还有我的两个朋友, 一个是ACM区域赛银, 一个是ACM区域赛金, 他们是完全没有CSP的C++成绩, 只有ALL的成绩. 我是有一次C++的成绩, 但是我怕我不能满分, 所以我们三个都选择了参加机试. (尽管我们所有的CSP全部都只用了C++)\n于是今天就去参加了机试, 机试有两题, 时间两小时, oi赛制. 具体过程就不说了, 只能说是大寄. 两道题全部都是巨大模拟题, 各种小情况贼恶心, 我写完第一题就已经过了一个小时多, 第二题思考了一段时间, 挣扎了一段时间, 最后还是觉得不可能写得完剩下这点时间.\n考完我觉得我寄了, 我去找那位银牌同学说, “我只做了一题, 我寄了”. 那位银牌同学说他也只做了一题.\n我们聊了一会, 过一会那位金牌同学跟我私聊发了四个字:</p>\n<p><img src=\"img/baoyan/1657272510-873749-image.jpeg\" alt=\"\"></p>\n<p>哈哈, 他也只做了一题.\n我去绿裙里看了一眼, 好像还有不少acm金出来说自己只写了一题.\n今天的总体评价是, 真不如拿csp抵了, 290就290, 不能满分就不能满分, 我现在还在担心我能不能到60分.\n麻了, 今天晚上出评测结果, 我都不知道我能不能进面试.</p>\n<p>我为什么不用csp抵了.</p>\n<p>我还是低估了夏令营折磨我的程度, 过去一点时间每天处理完各种事情就什么都不想干了, 现在夏令营的面试应该都结束了, 凭回忆更新一下吧.</p>\n<h2 id=\"7-9-北航面试-写于7月20日\"><a href=\"#7-9-北航面试-写于7月20日\" class=\"headerlink\" title=\"7.9 北航面试 (写于7月20日)\"></a>7.9 北航面试 (写于7月20日)</h2>\n<p>昨天晚上收到了机试合格的通知, 不过今年buaa好像机试没刷人, 往年都是至少做一题才能进面试的, 今年好多机试0分的进了面试, 保研名场面+1.\n北航发了个面试的顺序表, 一共有十几个组并行. 我是第四组的第7位. 往年说这个面试顺序是反映了机试排名的, 但是今年我调查了几个, 好像并没有什么规律. 邮件里说每一位同学面试时间大概是20分钟, 第一位同学8:30开始, 我算了一下我应该是10:50面试, 邮件里说提前十分钟过去就行, 我就一直准备十点四十再进会议.\n九点四十我收到了一个电话, 说面试快到我了, 让我进会议, 给我一个措手不及, 加了会议, 结果等到10:20才让我进.\n看群里先面试的说北航的专业课问的很多, 出来的一个个都愁眉苦脸的. 也做好了心理准备.</p>\n<p>面试上来问了俩离散数学的问题, 不过很简单, 然后让我设计一个算法去生成一个集合的幂集. 我本来说可以直接枚举二进制, 从0到 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.176ex\" height=\"1.714ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -675.5 2729.7 757.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1229.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2229.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g></svg>, 每一位代表这个元素是否出现就行了. 但是很明显他好像没听懂, 问我能不能换个方法, 我又说了递归的做法他才满意.</p>\n<p>然后是数学, 一个老师问我线性无关和矩阵相似的定义. 也挺简单的.</p>\n<p>然后让我介绍了一下我的项目, 就是Raft上的KV存储服务, 问我Raft是怎么保证分布式一致性的, 我讲了半天log是啥. 然后另一个老师说看你这个log讲的挺好, 要我介绍一下数据库的log. 我也不太懂他让我介绍啥, 我就说我的上层其实也是一个KV数据库, 介绍了一下我上层的KV服务怎么和Raft层通过log交互的. 他说我回答的方向不太对, 但是时间差不多了, 就换了个人问我经典问题:“你为什么想来北航啊”. 我吹了吹北航就结束了.</p>\n<p>结束了之后去帮棒子做饭, 做的咖喱鸡🍛, 但是做到一半想起来我有上交的双机位测试, 一点开始, 我又赶紧爬过去进会议测试了一下.</p>\n<p>晚上出了优营和候补, 大寄, 进候补了. 虽然按照往年的情况我是能在后期被录取的, 但是也不是很敢赌, 而且进去估计也都是坑导. 我很确定是傻逼机试的问题, 我看到候补前面的两名是一个我认识的金牌👴, 一问发现他跟我一样的情况, csp怕不能满分然后参加了他那个傻逼机试.</p>\n<p>当天晚上还挺郁闷的, 半夜拉着99和rx出去陪我吃了顿海底捞.</p>\n<h2 id=\"7-10-玉玉-写于7月21日\"><a href=\"#7-10-玉玉-写于7月21日\" class=\"headerlink\" title=\"7.10 玉玉 (写于7月21日)\"></a>7.10 玉玉 (写于7月21日)</h2>\n<p>9号晚上九点多出的门, 我本来想着10点海底捞就能有6.9折. 但是走到一半才想起来今天是周六, 要到12点之后才能6.9折. 我们三个在高新万达的门口坐了一个半小时, 等到十二点才进海底捞的.</p>\n<p>吃完海底捞我们三个看了一下骑个车也就15公里就到西电了, 上次我们去阳光天地骑车过去都12公里了, 半夜打车还贵, 我们就决定骑车回去. 三个人只有rx的iPhone 13 Pro电比较多, 我和99的iPhone 12和11电池都比较垃圾, 所以决定让rx看着导航走. 不过因为rx错过了一个很隐蔽的路口, 又不敢逆行骑回去,  就把整个街区都绕了一遍才绕过立交桥. 折腾到3点多才回去.</p>\n<p>起来之后发现北邮是11号自我介绍, 然后还要做项目, 15号还要验收项目, 15号本来还有上科大的面试, 心情本来就不好的我直接选择了放弃北邮. 这样11号就只有上交的机试了.</p>\n<p>上交软院的机试很神必, 需要连上上交的vpn, 然后rdp上他给每一个人开的windows服务器上写代码. 环境的话他让提前几天连上去自己配, 允许下载任何软件和电子资料, 但是机试的时候会断网. 之前上交软的机试一大特点就是会要求你写GUI程序, 但是今年明确说明了不会考察GUI, 我也就没去准备. 环境我也就装了个CLion, PyCharm, 下了一个OiWiki的pdf版.</p>\n<h2 id=\"7-11-上交软院机试-写于7月21日\"><a href=\"#7-11-上交软院机试-写于7月21日\" class=\"headerlink\" title=\"7.11 上交软院机试 (写于7月21日)\"></a>7.11 上交软院机试 (写于7月21日)</h2>\n<p>下午三点开始机试, 时长3个小时. 但是有人一直连不上vpn, 等到四点半才开始, 这可能也是一轮筛选吧.</p>\n<p>上交果然是上交, 机试让3小时手撸随机森林. 邮件里说的60分才能进入面试, 评分是按照模块白盒给分. 比如统计训练集里的target label有多少个0和1就有10分了. 然后使用基尼系数实现每一个节点的特征选取, 建立出决策树后输出这个决策树的后序遍历, 然后在测试集上测试, 输出正确率. 这样才实现了60分的功能, 剩下40分其中有10分是代码规范和注释分, 5分是通过他的所有测试点, 15分是使用三个决策树实现随机森林, 10分是微调让正确率尽量高.</p>\n<p>我最后实现了60分的功能, 下一个15分的随机森林其实也不是很复杂了, 但是时间不够, 而且在写前面的代码的时候并没有考虑后面的功能的实现, 导致写这一步的时候需要改一下之前函数所传递的参数, 然后差一点点没写完. 功能分已经有60分, 就算我的代码写的再烂, 代码规范一分都不给我, 还没有通过所有的测试点, 我也能拿到60分, 所以机试完我也不是很紧张.</p>\n<p>上交软院的面试是很有特色的. 他分了5个方向, 并且在机试前就让所有人选择方向, 面试时就去面试对应的方向. 作为做梦都想去IPADS实验室的我, 当然直接选择了IPADS方向.</p>\n<p><img src=\"img/baoyan/Untitled.jpeg\" alt=\"Untitled\"></p>\n<p>本来说的机试前就要截止, 但是9号又改成了12号晚上之前都行, 可能是有的方向去的人太少了吧.</p>\n<p>上交软院的另一个特色时, 他会在入营的时候就附赠所有方向的指定论文, 每个人选择一个方向的一篇论文去精读, 面试的时候几乎所有的时间都在问论文里的问题. 我前一段时间都在忙其他夏令营, 而且IPADS给了十几篇论文, 所以前面几天在论文上的进展就只有换了好几篇论文之后最终选定一篇论文.</p>\n<p>13号就面试了, 我11号晚上才算是开始认真看了论文. 因为之前有过读论文的经验, 所以看论文还算顺利, 我选的论文是一篇20页的双栏, 这在系统领域也不算是很长了. 当然跟AI领域的论文相比算很长的了.</p>\n<p>12号一天都是上交的宣讲, 我一直在读论文, 所以没去听. 到了傍晚上交机试结果还没出, 有点心急, 这时候突然收到一个邮件:</p>\n<p><img src=\"img/baoyan/Untitled1.jpeg\" alt=\"Untitled\"></p>\n<p>挺离谱的, 我看到很遗憾的时候我以为我上交论文白看了, 结果仔细一看是南大的. 全世界都知道你他妈面试都面试完了, 你才给我发邮件说我初审挂了, 真绝绝子.</p>\n<p>论文看到Evaluation就没再看了, 仔细整理了一下前面可能会问到的问题. 晚上八点终于收到了进面试的邮件. 离谱的是他邮件里不仅没有说每个人的面试时间, 甚至连顺序都要明天早上七点半爬起来看.</p>\n<p><img src=\"img/baoyan/Untitled2.jpeg\" alt=\"Untitled\"></p>\n<p>收到邮件之后草草做了个自我介绍ppt, 然后把论文又梳理了一遍就睡觉去了.</p>\n<h2 id=\"7-13-IPADS面试-写于7月24日\"><a href=\"#7-13-IPADS面试-写于7月24日\" class=\"headerlink\" title=\"7.13 IPADS面试 (写于7月24日)\"></a>7.13 IPADS面试 (写于7月24日)</h2>\n<p>早上七点半的闹铃, 伴随着经典的雷达铃声我火速进了腾讯会议看面试顺序. 可惜我进去的时候会议公告开始空空如也. 等到七点五十多还是没有消息, 八点就开始第一个人的面试, 我在想到底是哪个倒霉蛋会是第一个面试. 过了两分钟看到绿裙里有人说名单出来了, 但是我的腾讯会议好像坏了, 收不到消息, 我就找了个群友要了一份顺序名单, 还好, 一共35个人左右, 我在第17位. 如果每一个人二十分钟的话, 我应该是一点二十开始面试, 听说中午还要休息一段时间, 如果是休息一小时的话, 应该就是两点二十开始面试. 于是我又躺床上了一会, 然后爬起来论文, 准备自我介绍之类的.</p>\n<p>十一点多点了份摇滚炒鸡, 等到快一点了还没到, 有点害怕他们不午休或者午休时间没这么长或者有人放弃面试导致我提前面试, 所以已经做好了不吃午饭的准备. 没一会就到了, 光速把饭吃完就布置双机位之类的了. 一点四五十的时候我进去问了一下面到哪了, 发现再过一个就是我了, 就感觉又把英语自我介绍, 论文里的那些问题又看了一遍.</p>\n<p>两点二十我准时被放进了会议室. IPADS的摄像头感觉像挂在了天花板的角落上, 能看到整个大会议室, 但是看不清人脸, 所以刚开始感觉压迫感也没那么强.</p>\n<p>首先是邮件里就提到的自我介绍, 五分钟的ppt自我介绍. 在自我介绍之前, 一个单独坐在一边的老师问了我选择了哪片论文. 我主要介绍了我的两个项目. 自我介绍完后, 那个老师说:“好的, 非常好, 下面我们来探讨一下你选择的这篇论文吧.” 然后大的就来了.</p>\n<p>他首先问了大概四五个论文主体部分就已经介绍的一些实现, 因为这些都是论文的核心, 所以我应该基本都答上来了. 然后开始问一些至少在我看的论文的部分里面没有出现过的拓展性的问题, 很显然, 对于一个理解论文在说什么都已经拼尽全力的我来说, 这种问题还是太过超前了点. 他大概问了三四个这样的问题, 我基本都在全程口胡, 他的反应也都是一样的, 所以我也不知道我口胡的到底有多少是对的. 然后他还想问, 旁边一个老师提醒他到了英语考核时间了, 我随便说了几句就结束了. 然后刚刚那位老师又开始了:“还有两分钟, 我再问你一个问题..”. 然后让我把我的ppt翻到我的MapReduce系统那一页, 问了个我不是很能理解他的意思的问题, 我一般遇到这样的情况都是先用自己的语言复述一下那个问题, 不管我能不能听得懂, 然后说了句我觉得这个问题有问题的地方, 他说不会有这个问题, 虽然我还是没懂, 但我又复述了一遍问题, 他说对, 你可以这样理解, 然后旁边的老师提醒他时间到了, 该下一个了, 别问了, 然后才让我下播.</p>\n<p>总之, 面试虽然挺寄的, 但是见识到IPADS的面试水平也是死而无憾了, 专业问题从项目到论文全是那一个老师在问, 而且不像某些学校会一你一些很具体还不重要的早就忘掉的实现细节, 你不记得就说你准备不充分, IPADS的问题都是很合理的, 会给你一个具体的情境, 让你意识到这是真的会遇到的问题, 然后让你提出你的解决方法, 可能这就是IPADS吧.</p>\n<h2 id=\"7-14-计算所面试-上科大宣讲-写于7月26日\"><a href=\"#7-14-计算所面试-上科大宣讲-写于7月26日\" class=\"headerlink\" title=\"7.14 计算所面试&amp;上科大宣讲 (写于7月26日)\"></a>7.14 计算所面试&amp;上科大宣讲 (写于7月26日)</h2>\n<p>7月12日的上午, 就是上交宣讲的那一天, 我收到了一个来自北京的电话. 他告诉我是计算所的, 问我明天(7月13日)有没有时间面试. 我计算所报的是一个搞存储的组, 分布式存储, NVM之类的东西. 本来我以为只能13日面试, 我就说你先别急, 我过一会看看13号啥时候有时间, 确定好了短信发给你, 他说行. 其实我是想等上交的面试时间出来, 但上交不给面子, 一直等到晚上五六点都没发通知, 我就短信问他能不能14号面试, 他说可以. 事实证明我没有继续等下去是正确的, 上交在第二天面试开始前五分钟才把顺序发出来, 我的腾讯会议还没收到. 最终时间定在了14日上午的10点半.</p>\n<p>10点半, 他准时打电话告诉我说可以进入腾讯会议了. 这个应该是这个组的单独面试, 因为会议里就两个人, 还不用开摄像头, 而且会议是刚建的, 可能这个点面试的就我一个人.</p>\n<p>首先是自我介绍, 然后他开始问我操作系统的问题. 第一个问题是线程切换的时候要干什么. 我随便说了说什么保存现场之类的. 他问我保存现场的现场有哪些, 我说就是寄存器之类的, 还有栈上的局部变量啥的, 这时候我突然意识到我在说什么勾八, 刚反应过来我说了什么不得了的事情的时候那边就问栈上局部变量也是? 我连忙说没有没有, 说错了. 这可能注定了我这场面试会寄.</p>\n<p>之后问了计网, 数据结构, 操作系统那些东西, 感觉答上来的有七八十吧, 有些东西他说的我都没听说过, 就直接说不会了. 最后要开共享屏幕打代码, 感觉是标准的考研或者找工作的那种题目, 我空间复杂度多了个系数, 他的答案只需要一个哈希表, 我开了两个. 然后面试就结束了, 一共四十分钟.</p>\n<p>过了两三天计算所的入营名单出来了, 没有👴, 👴去问了一下那个联系我面试的, 他说没入营就是寄了, 那就寄了.</p>\n<h2 id=\"7-15-上科大面试-写于10月15日\"><a href=\"#7-15-上科大面试-写于10月15日\" class=\"headerlink\" title=\"7.15 上科大面试 (写于10月15日)\"></a>7.15 上科大面试 (写于10月15日)</h2>\n<p>今天rx让我给他bbs发的新帖点赞, 我才想起来我还有个坑没填, 保研都结束了, 慢慢填吧.</p>\n<p>到了👴最喜欢的上科大的面试. 上科大一直是👴好感度很高的一个学校, 师资力量巨强, 如果确定走科研的话来这里的强组不仅能享受到一些巨nb的老师的指导, 也能把上科大当作跳板去润国外读phd, 上科大的title申国外phd的水平已经能到华五的级别了. 而且宿舍和校园环境也是国内第一梯队的, 比西电好了不知道多少倍. 上科大报名和面试是分组进行的, 👴报的是系统与安全中心, 面试的也都是搞系统或者安全的.</p>\n<p>👴上科大面试的过程还是很寄的. 首先👴一进去就看到了👴报的第一志愿的老师. 这个老师首先问了我一个很简单的问题: 给你一个硬币, 你可以抛他, 每次都是等概率的落下正反面, 怎么利用这个硬币在四个选择中等概率的选择一个. 这个问题当然很简单, 我甚至以为这个面试就这么简单. 然后这个老师又问, 那变成三个选择呢? 👴当时就不太会了, 不过👴大概说了下思路, 口胡了几句.</p>\n<p>然后另一个老师问我计网的问题, 就是TCP/UDP, 流量控制, 拥塞控制之类的, 这些都很简单.</p>\n<p>然后第三个老师说, 看我是打acm的, 就问我个数学题吧. 我当时就想我tm虽然是打acm的但是👴最不会的就是数学而且刚刚那人已经问我过数学题了你怎么还问没活整可以不问可以咬个打火机. 问了个概率论智商题, 👴吭哧了半天唯一进展就是我说可以用递推. 然后面试就结束了.</p>\n<p>👴面试完觉得自己铁寄的, 没想到过两天就给👴发优营通知了, 还是学硕. 你们是有多缺人啊.</p>\n<p>👴本来不想联系老师的, 因为感觉👴去上科大的概率不大, 但是八月份的时候夏令营都结束了, 👴还是只有上科大一个offer, 就去联系了个老师. 那老师跟我聊了四五十分钟, 最后跟我说, 我对你的印象还是很正面的, 但是保研还都有不确定性, 我现在也不敢说我不要你或者我要你… 反正就是养鱼, 我也没管过了.</p>\n<h2 id=\"7-20-软件所面试-写于10月15日\"><a href=\"#7-20-软件所面试-写于10月15日\" class=\"headerlink\" title=\"7.20 软件所面试 (写于10月15日)\"></a>7.20 软件所面试 (写于10月15日)</h2>\n<p>这地方之前还是挺想去的, 毕竟听说是中科院title, 而且实力很强, 说跟华五下游一个水平balabala…</p>\n<p>但是后来因为种种原因不是很想去了, 本着自己大概率不去我就不耽误人家老师的心态, 我也就没联系什么老师.</p>\n<p>软件所也是报到实验室的, 面试分实验室进行. 我报的并行计算实验室. 这个实验室先有一个笔试, 微信群里发题, 然后开摄像头写好发给老师. 笔试内容就是高性能计算那一套, 不过都是很基础的, 基本都在考cache friendly的东西.</p>\n<p>面试是属实绷不住, 他面试分成了三天, 五个半天, 每半天有十个人左右, 👴有幸成为了第一个半天的第一位. 进去之后纯闲聊, 问我读不读博, 我说我有读博的想法, 但是想先读硕士感受一下科研, 我说我想研一体验科研, 然后决定转不转博. 然后另一个老师说, 你们研一都在雁栖湖, 应该是不方便做科研的. 然后又另一个老师说, 虽然你们在雁栖湖, 但是有很多同学还是研一甚至大四就来做科研的. 你要是来软件所的话你可以提前进组. 整个面试问我最有技术含量的问题就是问西电微机原理学的汇编是x86的还是RISC-V的.</p>\n<p>面试完过几天有个软件所的老师给我打电话, 说他是搞模式识别和区块链的, 问我愿不愿意去. 因为这个跟我想做的方向差距实在太大, 就给拒了. 然后软件所的优营果然没有我, 这玩意纯看老师.</p>\n<p>至此, 夏令营环节全都结束了.</p>\n<h2 id=\"预推免-写于1月24日\"><a href=\"#预推免-写于1月24日\" class=\"headerlink\" title=\"预推免 (写于1月24日)\"></a>预推免 (写于1月24日)</h2>\n<p>本以为预推免是一场恶战, 没想到就这样草草结束了.</p>\n<p>预推免我也是海投, 但是说是海投, 其实心里也基本做好了去上科大的准备了.</p>\n<p>预推免最终入营了的也只有中山和同济. 本来夏令营极限🐦中山的操作让我以为他不会放我入预推免了, 没想到他还是愿意再给我一次机会, 他真的我哭死.</p>\n<h2 id=\"中山机试-面试-写于1月24日\"><a href=\"#中山机试-面试-写于1月24日\" class=\"headerlink\" title=\"中山机试&amp;面试 (写于1月24日)\"></a>中山机试&amp;面试 (写于1月24日)</h2>\n<p>中山的机试还是很简单快乐的, 一共是10道题目, 考得东西也很广. 前面三道考的是c++面向对象相关的东西, 好像有几层多继承下面的构造函数的调用顺序, 虚函数, 多态之类的. 但是因为都是提交代码题, 并且没有罚时, 当场出结果, 所以我感觉即使不太会这些东西, 也总能试出来. 后面都是一些简单的小算法/模拟题. 最后一道算法题感觉还是比较难的, 我不会做, 而且当时评测也卡了, 想着900分应该稳了我就没钻研下去.</p>\n<p>这里就不得不说这个oj设计的很多不合理的地方. 他的逻辑是当上一次评测结果没有出来时就不能进行下一次提交, 这就导致在卡评测的时候即使你发现了代码的问题也没办法交了. 并且这次机试一共三小时, 评测机听说从结束前一个多小时就开始卡, 幸亏我早早把前面的题都写了.</p>\n<p>还有一个很不合理的地方就是评测结果里可以看到输入数据和输出数据! 虽然他很多题目都是每次提交随机生成数据(虽然这样还是不是很合理), 但是有些题还是固定了输入输出数据的. 比如这次机试我不会的这题, 输出数据是完全可以看到的, 我也完全可以通过多次提交把数据全骗出来拿个满分. 但是一向做事光明磊落要求问心无愧的我肯定是不会干这种事的, 即使这样可能会让我吃亏.</p>\n<p>中山对我最大的吸引力就是拥有一个依托天河二号超算建立的组, 或者说是国家超级计算广州中心, 我能去的学校里应该只有中山能有一个规模不小的研究这些东西的组了.</p>\n<p>中山面试也比较轻松愉快, 感觉唯一正经的问题就是让我解释极大似然估计了. 之后都是一些聊家常的问题. “我看你在分布式系统方面做了很多项目, 你了解分布式方向有哪些期刊和会议吗”之类的.</p>\n<p>这时候还发生了一件很尴尬的事情, 先是一个老师A说现在分布式和高性能计算都跟AI相结合, 正好我的实习经历也是这方面, 我就顺着讲了讲我的实习, 然后A老师问我“你知道中山有哪些组在研究这些吗”, 我确实不清楚, 但是我觉得大概率在超算组, 我就说了. 这时候换了个老师B来介绍了两句超算组. 我怀疑是A老师是研究这个的, 但是他不是超算组的, 有点尴尬.</p>\n<p>面试结束后就有个老师加了我微信, 但是因为方向感觉不是很相合, 就没有给肯定的答复(我怀疑这位就是A老师).</p>\n<p>中山因为每年都被鸽穿, 所以如果真的想去中山, 只要入了夏令营或者预推免就一定可以去.</p>\n<p>之后只有一个同济的面试了, 但是随着99的去向越来越确定, 去同济我们俩肯定是要异地了. 并且我把同济的计科专业的老师名单翻了三遍, 没找到一个搞system相关的老师, 就进了群之后又退了.</p>\n<p>所以这时候我本应该可以松一口气迎接养老生活的, 但没想到恶战刚刚开始.</p>\n<p>面试刚结束不久我就联系了一位超算组的老师, 这老师估计也很忙, 邮件里虽然给了偏肯定的答复, 并且也让我加了微信, 但是加了微信之后两天没理我. 我也是不太懂咋回事, 后来终于给我打了一个电话, 意思是他名下没名额了, 但是他们组都是一起培养, 我大概率可以找到其他名额多的老师要到名额, 最后回来大概率还是他来带. 然后我就开始了漫长的找名额之路, 这时候已经是9月27日下午了.</p>\n<p>这位老师首先给我指定一位老师, 让我问问他有没有名额. 我给那位老师发了邮件之后, 并没有理我.</p>\n<p>然后到了9月28的上午九点, 这时候👴收到了北航的电话, 告诉👴北航候补到了. 其实虽然按理说我这个名次北航能候补到是意料之中的, 但是还没开系统, 甚至九点就候补到了, 这个是真的没想到. 虽然我早就想过如果北航候补到我应该是不会去的, 一方面因为我以后有出国的打算, 北航因为是10043, 进去之后大概率是告别出国了, 以后可能连外企都不好进, 另一方面还是担心跟99异地, 还有担心是怕候补到找不到好老师. 但是现在这个形势, 中山那边一直没有什么肯定的答复, 进去说不定跟哪个老师, 计算机评级A+的北航的offer只要我点同意就有, 说实话, 确实很心动.</p>\n<p>这时候我主动给加了微信的那个中山的老师打了个电话, 他说他指定的那个老师可能确实没有名额了, 然后我把我北航offer这个情况说了, 他说他觉得很大概率可以让我进他们组的, 即使现在找不到, 因为中山实际选老师在研一开学一段时间才选, 到时候说不定也是可以有名额的, 而且说超算组是个很大的组, 名额可以互相协调, 想要找到一个名额应该不难.</p>\n<p>这时候我也在积极的找北航的老师, 这个时间靠邮件肯定是来不及了, 我就找了一个夏令营录取北航已经联系好老师的朋友, 问问他们导还有没有名额. 我朋友直接把他导微信给我了, 我申请了之后, 也没有什么回信.</p>\n<p>总之, 这几个小时是我保研几个月里最煎熬的几个小时, 最终, 考虑了很多很多因素, 还是决定选了中山.</p>\n<p>之后, 已经录取中山拒绝北航之后, 我依然在紧张刺激的联系老师. 我几乎把组里所有老师都联系了一遍.</p>\n<p>下午两点多, 联系到了某位老师, 她说她有名额, 但是不知道是学硕还是专硕的. 我当时脑子没反应过来啥意思, 因为中山的录取规则是夏令营的最后一名&gt;预推免的第一名, 👴因为当时中山跟北航冲突了, 没参加夏令营. 虽然是预推免第6, 但是拿到学硕肯定是不可能的. 我以为她如果有学硕名额能给我换成学硕, 所以我回了句“学硕专硕无所谓”, 她可能以为我是学硕, 换成专硕也无所谓, 也给了肯定的答复, 就这样我误以为自己上岸了.</p>\n<p>过了一会, 她又发来邮件说她的名额是学硕名额, 这时候我意识到可能不是我想的那样, 我问了一下老师, 果然意思是只有学硕才能用这个名额. 这时候我又想到👴当时夏令营把中山鸽了的事, 心态有点崩.</p>\n<p>最终, 终于在晚上七点多找到一位大导手下还有名额, 这才算是真的上岸了.</p>\n<p>这时候, 白天加的那位北航的导师也加我微信了, 我跟他说我没去北航, 这位老师说我朋友告诉他了. 他还说中山超算很不错, 还给我推荐了几位老师, 感觉人非常好.</p>\n<p>最终, 我在中山这种夏令营最后一名大于预推免第一名的奇特制度下, 因为夏令营跟北航冲突放弃了中山, 预推免又去了中山, 最终在北航跟中山之间还选择了中山.</p>\n<p>我在保研系统里拒绝北航也截图了下来, 发给了几个朋友, 几个朋友都说这图帅.</p>\n<p>这个选择很难做, 我的选择也确实很大胆, 但是究竟哪个选择好呢, 可能谁都有自己的看法, 也可能谁也都不知道. 毕竟我没办法在928当天把自己fork一份出来看看以后两个我会咋样, 我只能像类似罗老师说的那样, 在我生命的每个阶段都选择了我相信的东西.</p>\n<p>人生有变, 世事无常. 可以说最后这个选择跟我在一年前的规划是完全不相符的. 不是说对自己的去向估计太低或者太高, 而是自己当时并不觉得自己会去一个离家这么远, 大概率不会一直生活下去的地方. 现在来看这个选择, 是那么的荒诞无奇又顺理成章, 而我只能感叹这几个小时是如此短暂, 短暂到我不敢相信我未来的人生就已经被这样, 被这几个小时决定了.</p>\n<p>高中的时候不懂事, 想让每次重要的选择都能准备充足, 做出最好的最正确的选择. 后来发现“好”和“正确”并没有什么严格的定义, 只需要每次选择能让自己不后悔就可以了. 现在觉得每次选择都不后悔也不容易, 只奢求以后再回来看这段至少现在我觉得非常重要的路的时候, 能感觉到“也无风雨也无晴”就行了.</p>\n","c7d75333544c26743dc0e40b6e818b465994c000":"<h1 id=\"保研游记\"><a href=\"#保研游记\" class=\"headerlink\" title=\"保研游记\"></a>保研游记</h1>\n<p>这个游记其实是从7月初, 准确地说应该是2022年7月4日, 中间一直断断续续的写, 一直到今天, 也就是2023年1月15日, 才算正式把它写完.</p>\n<p>这篇文章因为写的时候跨度比较长, 所以也可以从我的文笔, 或者语气什么的看出我在这段时间对一些事的看法(能吗), 并且有时候写文章的日期跟写的这件事发生的日子其实差距挺大, 所以我会把每一段发生的事日期标注起来的同时, 标注出写这段文字时的日期.</p>\n<p>这篇文章原连载于xdsec内部bbs, 现在写完了就把他发了出来, 当然对一些敏感信息做了处理.</p>\n<p>最后对自己的条件简单介绍一下:(这段文字是7月4日写的)</p>\n<p>保研无非看四个方面: 排名, 竞赛奖项, 科研, 项目. 我是计科院计算机科学与技术专业, 标准的低排名选手, 夏令营期间排名7%. 竞赛主要是acm类, 有邀请赛的银牌, 区域赛的铜牌和省赛的金牌. 还有一些其他的奖项, 比如大二时拿的国家奖学金, 中国计算机学会的CCF优秀大学生, 还有数模美赛的M奖. CSP, 就是那个CCF软件能力认证, 我是在大二上学期的CSP中拿到了330分, 累计排名前1.9%. 科研毫无经历, 这也是我除了排名外的最大弱势. 项目经历只有自己在自学MIT的 6.824 Distributed Systems 时自己完成的lab1-3, 我把它包装成了两个项目: 一个是 MapReduce系统, 另一个是基于Raft一致性算法的Key-Value存储服务.</p>\n<p>因为自己之前曾经在深度学习方向探索过很长一段时间, 最终最大的收获就是我坚决不碰这玩意. 所以夏令营期间的我的方向也很明确: 尽量找搞systems方向的老师和实验室. 并且个人因为听过太多博士生的悲惨遭遇, 所以选择了就业导向, 接受专硕, 拒绝直博. 所以这样一套选择对于我来说其实是很有利的: 一个是避开了AI这个卷王方向, 另一个是能接受专硕让我能入更多学校的夏令营. 当然现在看好像其实第二个的帮助不是很大, 因为专硕也很卷, 有的时候甚至比学硕还卷.</p>\n<p>因为排名低, 所以才去的 海投 策略, 也就是应报尽报, 不漏一校, 除非太麻烦. 截止到7.4日晚, 我已经报名了22所学校的夏令营, 已经收到了8个学校的入营通知, 这其实是我没想到的. 因为按理说7%的排名, 基本是没有什么营可以入的. 比我低2名的一位acm铜牌选手, 现在基本没入什么营.</p>\n<p>目前收到的入营通知有: 中山大学计算机学院, 浙江大学软件学院, 北京邮电大学计算机学院, 上海交通大学软件学院, 上海科技大学信息学院, 北京航空航天大学计算机学院, 哈尔滨工业大学(威海)计算机学院, 山东大学计算机学院.</p>\n<p>其中, 哈工威和山大报着是想练练手, 但是哈工威进群之后我忘改备注了, 第二天被踢了, 正好还要陪rx去一附院, 就不去了.</p>\n<p>山大跟北航冲突了, 就主动联系了山大放弃夏令营名额.</p>\n<p>明天要去陪rx做胃镜, 今天先写到这.</p>\n<p>下面开始正文:</p>\n<hr>\n<h2 id=\"7月4日-写于7月5日\"><a href=\"#7月4日-写于7月5日\" class=\"headerlink\" title=\"7月4日 (写于7月5日)\"></a>7月4日 (写于7月5日)</h2>\n<p>集美们, 今天又遇到绝绝子事件, 咱就是说一整个的无语住了.\n前两天, 6月30日, 我收到了中山大学的入营邮件, 这对于保研底层人的我来说算是如获至宝. 即使在对着邮件思考了半天6月到底有没有31号之后, 我对sysu的热情也丝毫未减, 没等到6月31号我就进了中山的群.\n<img src=\"/img//baoyan/1657007619-88739-image.jpeg\" alt=\"\"></p>\n<p>但是, 北航是出了名的喜欢acm选手, 并且北航的夏令营是不允许北航本科的同学参加的, 到了预推免阶段就基本都是北航本科的神仙打架, 所以北航一直是我夏令营的第一目标. 但是当时北航的入营结果还没出来, 作为保研弱势群体, 我还不敢奢求能再入什么营了, 而且即使能入营时间也有可能不冲突, 而且即使时间冲突了也大概率可以双开, 不会说真的两个两边都不能翘的东西撞在一起的.</p>\n<p>事实证明, 我低估了事情的复杂性. 最终, 我入了北航, 并且北航时间和中山的冲突了, 并且, 中山的机试和北韩的双机位测试时间冲突了. 我本以为问题不大, 大不了双机位测试调调时间, 或者中山机试光速ak下播. 然而, 中山可能是故意的, 时间放在了7号上午9点到12点, 并且 不可以提前交卷 . 而北航那边说的也很绝, 说双机位测试如果不参加, 就视为放弃入营资格:</p>\n<p><img src=\"/img//baoyan/1657008326-237856-image.jpeg\" alt=\"\"></p>\n<p>没办法, 只能放弃中山了. 可是中山群里早就说要放弃入营的尽早放弃, 现在机试的账号密码都发给我了, 今天上午中山的监考都联系我了, 跟我约好了面试测试时间.</p>\n<p><img src=\"/img//baoyan/1657008467-146891-image.jpeg\" alt=\"\"></p>\n<p>正在我进退两难的时候, 地铁到站了, 我又要去处理我上次出地铁的时候Apple Watch没电了导致我现在手表上的长安通还处于未出站的状态的问题, 处理完这个问题再接着进退两难.</p>\n<p>这时, 中山的一个叫做考务助理的人来找我:</p>\n<p><img src=\"/img//baoyan/1657008595-400801-image.jpeg\" alt=\"\"></p>\n<p>看到这个, 👴就想起来前两天👴花了23大洋在顺丰寄了个特快把材料寄过去, 结果还没送到, 气不打一出来.</p>\n<p><img src=\"/img//baoyan/1657009187-761246-/img/-5933.jpeg\" alt=\"\"></p>\n<p>这时候👴急中生智, 想着能不能借着这个机会编个理由, 比如中午有火车, 把夏令营给推脱掉, 正好借着这个机会营造出一种“哎呀我本来是想参加机试的而且我本来还有事情克服了各种困难想要参加机试结果现在还整出来材料没寄过去这一出我要参加的话不仅麻烦自己还要麻烦您老人家所以我干脆不参加算了都怪顺丰呜呜呜”的感觉.</p>\n<p><img src=\"/img//baoyan/1657009284-7467-image.jpeg\" alt=\"\"></p>\n<p>没想到那边答应的还算爽快.</p>\n<p>现在就算是把中山也放弃了, 还是挺不舍的, 虽然可能大概率不会去广州那边, 但是中山有个天河二号, 那边搞超算衍生出来的方向的老师还是很多的, 而且夏令营系统做的也很好, 比北邮那个点任何一个按钮都有50%的几率进入到asp.net的错误页面每次报名都是一个马尔可夫过程的系统好多了.</p>\n<p>18级的一个学长跟我说, 夏令营面试最好是从最菜的学校往上面试, 这样自信也会越来越强, 但是经过这样一折腾, 我的第一个面试就是北航了, 没有一个学校供我练手了. 可能这就是夏令营要寄的预兆吧.</p>\n<h2 id=\"7-8-大寄-写于7月8日\"><a href=\"#7-8-大寄-写于7月8日\" class=\"headerlink\" title=\"7.8 大寄 (写于7月8日)\"></a>7.8 大寄 (写于7月8日)</h2>\n<p>今天是北航的机试. 按理说我是可以不参加的. 北航的机试是可以用CSP的分数折算的. 按理说, CSP的累计排名前10%折算就不亏. 但是折算之后具体多少分还是要在所有要求折算的人中按照累计排名来看. 但是北航有个特殊的要求, CSP报名的时候选的那个语言必须是C/C++, 不能选择ALL. 我虽然每次CSP都是只用C++, 但是我最高的一次330分(累计排名1.9%)是选了ALL, 选C++的只有一次290分(那次比较难, 单次排名2%, 但是累计排名是在所有场次里排名, 只有4.6%).\n按理说, 如果我能够用330分抵机试, 那我将绝杀, 大概率是满分. 但是用290分可能有那么一点几率不是满分, 但是即使不是满分, 估计也差不了几分. 但是我想到前段时间学长劝我的, 说我这情况可以直接去考机试, 拿个满分, 这样比较稳妥一点. 北航是很看重机试的, 其他学校都说机试成绩仅供参考, 但是北航明确说了机试成绩占50%. 北航历年的题目也不难, 满分问题不大. 我去看了一下往年题, 好像难度确实不大, 满分应该十拿九稳.\n跟我类似情况的还有我的两个朋友, 一个是ACM区域赛银, 一个是ACM区域赛金, 他们是完全没有CSP的C++成绩, 只有ALL的成绩. 我是有一次C++的成绩, 但是我怕我不能满分, 所以我们三个都选择了参加机试. (尽管我们所有的CSP全部都只用了C++)\n于是今天就去参加了机试, 机试有两题, 时间两小时, oi赛制. 具体过程就不说了, 只能说是大寄. 两道题全部都是巨大模拟题, 各种小情况贼恶心, 我写完第一题就已经过了一个小时多, 第二题思考了一段时间, 挣扎了一段时间, 最后还是觉得不可能写得完剩下这点时间.\n考完我觉得我寄了, 我去找那位银牌同学说, “我只做了一题, 我寄了”. 那位银牌同学说他也只做了一题.\n我们聊了一会, 过一会那位金牌同学跟我私聊发了四个字:</p>\n<p><img src=\"/img//baoyan/1657272510-873749-image.jpeg\" alt=\"\"></p>\n<p>哈哈, 他也只做了一题.\n我去绿裙里看了一眼, 好像还有不少acm金出来说自己只写了一题.\n今天的总体评价是, 真不如拿csp抵了, 290就290, 不能满分就不能满分, 我现在还在担心我能不能到60分.\n麻了, 今天晚上出评测结果, 我都不知道我能不能进面试.</p>\n<p>我为什么不用csp抵了.</p>\n<p>我还是低估了夏令营折磨我的程度, 过去一点时间每天处理完各种事情就什么都不想干了, 现在夏令营的面试应该都结束了, 凭回忆更新一下吧.</p>\n<h2 id=\"7-9-北航面试-写于7月20日\"><a href=\"#7-9-北航面试-写于7月20日\" class=\"headerlink\" title=\"7.9 北航面试 (写于7月20日)\"></a>7.9 北航面试 (写于7月20日)</h2>\n<p>昨天晚上收到了机试合格的通知, 不过今年buaa好像机试没刷人, 往年都是至少做一题才能进面试的, 今年好多机试0分的进了面试, 保研名场面+1.\n北航发了个面试的顺序表, 一共有十几个组并行. 我是第四组的第7位. 往年说这个面试顺序是反映了机试排名的, 但是今年我调查了几个, 好像并没有什么规律. 邮件里说每一位同学面试时间大概是20分钟, 第一位同学8:30开始, 我算了一下我应该是10:50面试, 邮件里说提前十分钟过去就行, 我就一直准备十点四十再进会议.\n九点四十我收到了一个电话, 说面试快到我了, 让我进会议, 给我一个措手不及, 加了会议, 结果等到10:20才让我进.\n看群里先面试的说北航的专业课问的很多, 出来的一个个都愁眉苦脸的. 也做好了心理准备.</p>\n<p>面试上来问了俩离散数学的问题, 不过很简单, 然后让我设计一个算法去生成一个集合的幂集. 我本来说可以直接枚举二进制, 从0到 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.176ex\" height=\"1.714ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -675.5 2729.7 757.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1229.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2229.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g></svg>, 每一位代表这个元素是否出现就行了. 但是很明显他好像没听懂, 问我能不能换个方法, 我又说了递归的做法他才满意.</p>\n<p>然后是数学, 一个老师问我线性无关和矩阵相似的定义. 也挺简单的.</p>\n<p>然后让我介绍了一下我的项目, 就是Raft上的KV存储服务, 问我Raft是怎么保证分布式一致性的, 我讲了半天log是啥. 然后另一个老师说看你这个log讲的挺好, 要我介绍一下数据库的log. 我也不太懂他让我介绍啥, 我就说我的上层其实也是一个KV数据库, 介绍了一下我上层的KV服务怎么和Raft层通过log交互的. 他说我回答的方向不太对, 但是时间差不多了, 就换了个人问我经典问题:“你为什么想来北航啊”. 我吹了吹北航就结束了.</p>\n<p>结束了之后去帮棒子做饭, 做的咖喱鸡🍛, 但是做到一半想起来我有上交的双机位测试, 一点开始, 我又赶紧爬过去进会议测试了一下.</p>\n<p>晚上出了优营和候补, 大寄, 进候补了. 虽然按照往年的情况我是能在后期被录取的, 但是也不是很敢赌, 而且进去估计也都是坑导. 我很确定是傻逼机试的问题, 我看到候补前面的两名是一个我认识的金牌👴, 一问发现他跟我一样的情况, csp怕不能满分然后参加了他那个傻逼机试.</p>\n<p>当天晚上还挺郁闷的, 半夜拉着99和rx出去陪我吃了顿海底捞.</p>\n<h2 id=\"7-10-玉玉-写于7月21日\"><a href=\"#7-10-玉玉-写于7月21日\" class=\"headerlink\" title=\"7.10 玉玉 (写于7月21日)\"></a>7.10 玉玉 (写于7月21日)</h2>\n<p>9号晚上九点多出的门, 我本来想着10点海底捞就能有6.9折. 但是走到一半才想起来今天是周六, 要到12点之后才能6.9折. 我们三个在高新万达的门口坐了一个半小时, 等到十二点才进海底捞的.</p>\n<p>吃完海底捞我们三个看了一下骑个车也就15公里就到西电了, 上次我们去阳光天地骑车过去都12公里了, 半夜打车还贵, 我们就决定骑车回去. 三个人只有rx的iPhone 13 Pro电比较多, 我和99的iPhone 12和11电池都比较垃圾, 所以决定让rx看着导航走. 不过因为rx错过了一个很隐蔽的路口, 又不敢逆行骑回去,  就把整个街区都绕了一遍才绕过立交桥. 折腾到3点多才回去.</p>\n<p>起来之后发现北邮是11号自我介绍, 然后还要做项目, 15号还要验收项目, 15号本来还有上科大的面试, 心情本来就不好的我直接选择了放弃北邮. 这样11号就只有上交的机试了.</p>\n<p>上交软院的机试很神必, 需要连上上交的vpn, 然后rdp上他给每一个人开的windows服务器上写代码. 环境的话他让提前几天连上去自己配, 允许下载任何软件和电子资料, 但是机试的时候会断网. 之前上交软的机试一大特点就是会要求你写GUI程序, 但是今年明确说明了不会考察GUI, 我也就没去准备. 环境我也就装了个CLion, PyCharm, 下了一个OiWiki的pdf版.</p>\n<h2 id=\"7-11-上交软院机试-写于7月21日\"><a href=\"#7-11-上交软院机试-写于7月21日\" class=\"headerlink\" title=\"7.11 上交软院机试 (写于7月21日)\"></a>7.11 上交软院机试 (写于7月21日)</h2>\n<p>下午三点开始机试, 时长3个小时. 但是有人一直连不上vpn, 等到四点半才开始, 这可能也是一轮筛选吧.</p>\n<p>上交果然是上交, 机试让3小时手撸随机森林. 邮件里说的60分才能进入面试, 评分是按照模块白盒给分. 比如统计训练集里的target label有多少个0和1就有10分了. 然后使用基尼系数实现每一个节点的特征选取, 建立出决策树后输出这个决策树的后序遍历, 然后在测试集上测试, 输出正确率. 这样才实现了60分的功能, 剩下40分其中有10分是代码规范和注释分, 5分是通过他的所有测试点, 15分是使用三个决策树实现随机森林, 10分是微调让正确率尽量高.</p>\n<p>我最后实现了60分的功能, 下一个15分的随机森林其实也不是很复杂了, 但是时间不够, 而且在写前面的代码的时候并没有考虑后面的功能的实现, 导致写这一步的时候需要改一下之前函数所传递的参数, 然后差一点点没写完. 功能分已经有60分, 就算我的代码写的再烂, 代码规范一分都不给我, 还没有通过所有的测试点, 我也能拿到60分, 所以机试完我也不是很紧张.</p>\n<p>上交软院的面试是很有特色的. 他分了5个方向, 并且在机试前就让所有人选择方向, 面试时就去面试对应的方向. 作为做梦都想去IPADS实验室的我, 当然直接选择了IPADS方向.</p>\n<p><img src=\"/img//baoyan/Untitled.jpeg\" alt=\"Untitled\"></p>\n<p>本来说的机试前就要截止, 但是9号又改成了12号晚上之前都行, 可能是有的方向去的人太少了吧.</p>\n<p>上交软院的另一个特色时, 他会在入营的时候就附赠所有方向的指定论文, 每个人选择一个方向的一篇论文去精读, 面试的时候几乎所有的时间都在问论文里的问题. 我前一段时间都在忙其他夏令营, 而且IPADS给了十几篇论文, 所以前面几天在论文上的进展就只有换了好几篇论文之后最终选定一篇论文.</p>\n<p>13号就面试了, 我11号晚上才算是开始认真看了论文. 因为之前有过读论文的经验, 所以看论文还算顺利, 我选的论文是一篇20页的双栏, 这在系统领域也不算是很长了. 当然跟AI领域的论文相比算很长的了.</p>\n<p>12号一天都是上交的宣讲, 我一直在读论文, 所以没去听. 到了傍晚上交机试结果还没出, 有点心急, 这时候突然收到一个邮件:</p>\n<p><img src=\"/img//baoyan/Untitled1.jpeg\" alt=\"Untitled\"></p>\n<p>挺离谱的, 我看到很遗憾的时候我以为我上交论文白看了, 结果仔细一看是南大的. 全世界都知道你他妈面试都面试完了, 你才给我发邮件说我初审挂了, 真绝绝子.</p>\n<p>论文看到Evaluation就没再看了, 仔细整理了一下前面可能会问到的问题. 晚上八点终于收到了进面试的邮件. 离谱的是他邮件里不仅没有说每个人的面试时间, 甚至连顺序都要明天早上七点半爬起来看.</p>\n<p><img src=\"/img//baoyan/Untitled2.jpeg\" alt=\"Untitled\"></p>\n<p>收到邮件之后草草做了个自我介绍ppt, 然后把论文又梳理了一遍就睡觉去了.</p>\n<h2 id=\"7-13-IPADS面试-写于7月24日\"><a href=\"#7-13-IPADS面试-写于7月24日\" class=\"headerlink\" title=\"7.13 IPADS面试 (写于7月24日)\"></a>7.13 IPADS面试 (写于7月24日)</h2>\n<p>早上七点半的闹铃, 伴随着经典的雷达铃声我火速进了腾讯会议看面试顺序. 可惜我进去的时候会议公告开始空空如也. 等到七点五十多还是没有消息, 八点就开始第一个人的面试, 我在想到底是哪个倒霉蛋会是第一个面试. 过了两分钟看到绿裙里有人说名单出来了, 但是我的腾讯会议好像坏了, 收不到消息, 我就找了个群友要了一份顺序名单, 还好, 一共35个人左右, 我在第17位. 如果每一个人二十分钟的话, 我应该是一点二十开始面试, 听说中午还要休息一段时间, 如果是休息一小时的话, 应该就是两点二十开始面试. 于是我又躺床上了一会, 然后爬起来论文, 准备自我介绍之类的.</p>\n<p>十一点多点了份摇滚炒鸡, 等到快一点了还没到, 有点害怕他们不午休或者午休时间没这么长或者有人放弃面试导致我提前面试, 所以已经做好了不吃午饭的准备. 没一会就到了, 光速把饭吃完就布置双机位之类的了. 一点四五十的时候我进去问了一下面到哪了, 发现再过一个就是我了, 就感觉又把英语自我介绍, 论文里的那些问题又看了一遍.</p>\n<p>两点二十我准时被放进了会议室. IPADS的摄像头感觉像挂在了天花板的角落上, 能看到整个大会议室, 但是看不清人脸, 所以刚开始感觉压迫感也没那么强.</p>\n<p>首先是邮件里就提到的自我介绍, 五分钟的ppt自我介绍. 在自我介绍之前, 一个单独坐在一边的老师问了我选择了哪片论文. 我主要介绍了我的两个项目. 自我介绍完后, 那个老师说:“好的, 非常好, 下面我们来探讨一下你选择的这篇论文吧.” 然后大的就来了.</p>\n<p>他首先问了大概四五个论文主体部分就已经介绍的一些实现, 因为这些都是论文的核心, 所以我应该基本都答上来了. 然后开始问一些至少在我看的论文的部分里面没有出现过的拓展性的问题, 很显然, 对于一个理解论文在说什么都已经拼尽全力的我来说, 这种问题还是太过超前了点. 他大概问了三四个这样的问题, 我基本都在全程口胡, 他的反应也都是一样的, 所以我也不知道我口胡的到底有多少是对的. 然后他还想问, 旁边一个老师提醒他到了英语考核时间了, 我随便说了几句就结束了. 然后刚刚那位老师又开始了:“还有两分钟, 我再问你一个问题..”. 然后让我把我的ppt翻到我的MapReduce系统那一页, 问了个我不是很能理解他的意思的问题, 我一般遇到这样的情况都是先用自己的语言复述一下那个问题, 不管我能不能听得懂, 然后说了句我觉得这个问题有问题的地方, 他说不会有这个问题, 虽然我还是没懂, 但我又复述了一遍问题, 他说对, 你可以这样理解, 然后旁边的老师提醒他时间到了, 该下一个了, 别问了, 然后才让我下播.</p>\n<p>总之, 面试虽然挺寄的, 但是见识到IPADS的面试水平也是死而无憾了, 专业问题从项目到论文全是那一个老师在问, 而且不像某些学校会一你一些很具体还不重要的早就忘掉的实现细节, 你不记得就说你准备不充分, IPADS的问题都是很合理的, 会给你一个具体的情境, 让你意识到这是真的会遇到的问题, 然后让你提出你的解决方法, 可能这就是IPADS吧.</p>\n<h2 id=\"7-14-计算所面试-上科大宣讲-写于7月26日\"><a href=\"#7-14-计算所面试-上科大宣讲-写于7月26日\" class=\"headerlink\" title=\"7.14 计算所面试&amp;上科大宣讲 (写于7月26日)\"></a>7.14 计算所面试&amp;上科大宣讲 (写于7月26日)</h2>\n<p>7月12日的上午, 就是上交宣讲的那一天, 我收到了一个来自北京的电话. 他告诉我是计算所的, 问我明天(7月13日)有没有时间面试. 我计算所报的是一个搞存储的组, 分布式存储, NVM之类的东西. 本来我以为只能13日面试, 我就说你先别急, 我过一会看看13号啥时候有时间, 确定好了短信发给你, 他说行. 其实我是想等上交的面试时间出来, 但上交不给面子, 一直等到晚上五六点都没发通知, 我就短信问他能不能14号面试, 他说可以. 事实证明我没有继续等下去是正确的, 上交在第二天面试开始前五分钟才把顺序发出来, 我的腾讯会议还没收到. 最终时间定在了14日上午的10点半.</p>\n<p>10点半, 他准时打电话告诉我说可以进入腾讯会议了. 这个应该是这个组的单独面试, 因为会议里就两个人, 还不用开摄像头, 而且会议是刚建的, 可能这个点面试的就我一个人.</p>\n<p>首先是自我介绍, 然后他开始问我操作系统的问题. 第一个问题是线程切换的时候要干什么. 我随便说了说什么保存现场之类的. 他问我保存现场的现场有哪些, 我说就是寄存器之类的, 还有栈上的局部变量啥的, 这时候我突然意识到我在说什么勾八, 刚反应过来我说了什么不得了的事情的时候那边就问栈上局部变量也是? 我连忙说没有没有, 说错了. 这可能注定了我这场面试会寄.</p>\n<p>之后问了计网, 数据结构, 操作系统那些东西, 感觉答上来的有七八十吧, 有些东西他说的我都没听说过, 就直接说不会了. 最后要开共享屏幕打代码, 感觉是标准的考研或者找工作的那种题目, 我空间复杂度多了个系数, 他的答案只需要一个哈希表, 我开了两个. 然后面试就结束了, 一共四十分钟.</p>\n<p>过了两三天计算所的入营名单出来了, 没有👴, 👴去问了一下那个联系我面试的, 他说没入营就是寄了, 那就寄了.</p>\n<h2 id=\"7-15-上科大面试-写于10月15日\"><a href=\"#7-15-上科大面试-写于10月15日\" class=\"headerlink\" title=\"7.15 上科大面试 (写于10月15日)\"></a>7.15 上科大面试 (写于10月15日)</h2>\n<p>今天rx让我给他bbs发的新帖点赞, 我才想起来我还有个坑没填, 保研都结束了, 慢慢填吧.</p>\n<p>到了👴最喜欢的上科大的面试. 上科大一直是👴好感度很高的一个学校, 师资力量巨强, 如果确定走科研的话来这里的强组不仅能享受到一些巨nb的老师的指导, 也能把上科大当作跳板去润国外读phd, 上科大的title申国外phd的水平已经能到华五的级别了. 而且宿舍和校园环境也是国内第一梯队的, 比西电好了不知道多少倍. 上科大报名和面试是分组进行的, 👴报的是系统与安全中心, 面试的也都是搞系统或者安全的.</p>\n<p>👴上科大面试的过程还是很寄的. 首先👴一进去就看到了👴报的第一志愿的老师. 这个老师首先问了我一个很简单的问题: 给你一个硬币, 你可以抛他, 每次都是等概率的落下正反面, 怎么利用这个硬币在四个选择中等概率的选择一个. 这个问题当然很简单, 我甚至以为这个面试就这么简单. 然后这个老师又问, 那变成三个选择呢? 👴当时就不太会了, 不过👴大概说了下思路, 口胡了几句.</p>\n<p>然后另一个老师问我计网的问题, 就是TCP/UDP, 流量控制, 拥塞控制之类的, 这些都很简单.</p>\n<p>然后第三个老师说, 看我是打acm的, 就问我个数学题吧. 我当时就想我tm虽然是打acm的但是👴最不会的就是数学而且刚刚那人已经问我过数学题了你怎么还问没活整可以不问可以咬个打火机. 问了个概率论智商题, 👴吭哧了半天唯一进展就是我说可以用递推. 然后面试就结束了.</p>\n<p>👴面试完觉得自己铁寄的, 没想到过两天就给👴发优营通知了, 还是学硕. 你们是有多缺人啊.</p>\n<p>👴本来不想联系老师的, 因为感觉👴去上科大的概率不大, 但是八月份的时候夏令营都结束了, 👴还是只有上科大一个offer, 就去联系了个老师. 那老师跟我聊了四五十分钟, 最后跟我说, 我对你的印象还是很正面的, 但是保研还都有不确定性, 我现在也不敢说我不要你或者我要你… 反正就是养鱼, 我也没管过了.</p>\n<h2 id=\"7-20-软件所面试-写于10月15日\"><a href=\"#7-20-软件所面试-写于10月15日\" class=\"headerlink\" title=\"7.20 软件所面试 (写于10月15日)\"></a>7.20 软件所面试 (写于10月15日)</h2>\n<p>这地方之前还是挺想去的, 毕竟听说是中科院title, 而且实力很强, 说跟华五下游一个水平balabala…</p>\n<p>但是后来因为种种原因不是很想去了, 本着自己大概率不去我就不耽误人家老师的心态, 我也就没联系什么老师.</p>\n<p>软件所也是报到实验室的, 面试分实验室进行. 我报的并行计算实验室. 这个实验室先有一个笔试, 微信群里发题, 然后开摄像头写好发给老师. 笔试内容就是高性能计算那一套, 不过都是很基础的, 基本都在考cache friendly的东西.</p>\n<p>面试是属实绷不住, 他面试分成了三天, 五个半天, 每半天有十个人左右, 👴有幸成为了第一个半天的第一位. 进去之后纯闲聊, 问我读不读博, 我说我有读博的想法, 但是想先读硕士感受一下科研, 我说我想研一体验科研, 然后决定转不转博. 然后另一个老师说, 你们研一都在雁栖湖, 应该是不方便做科研的. 然后又另一个老师说, 虽然你们在雁栖湖, 但是有很多同学还是研一甚至大四就来做科研的. 你要是来软件所的话你可以提前进组. 整个面试问我最有技术含量的问题就是问西电微机原理学的汇编是x86的还是RISC-V的.</p>\n<p>面试完过几天有个软件所的老师给我打电话, 说他是搞模式识别和区块链的, 问我愿不愿意去. 因为这个跟我想做的方向差距实在太大, 就给拒了. 然后软件所的优营果然没有我, 这玩意纯看老师.</p>\n<p>至此, 夏令营环节全都结束了.</p>\n<h2 id=\"预推免-写于1月24日\"><a href=\"#预推免-写于1月24日\" class=\"headerlink\" title=\"预推免 (写于1月24日)\"></a>预推免 (写于1月24日)</h2>\n<p>本以为预推免是一场恶战, 没想到就这样草草结束了.</p>\n<p>预推免我也是海投, 但是说是海投, 其实心里也基本做好了去上科大的准备了.</p>\n<p>预推免最终入营了的也只有中山和同济. 本来夏令营极限🐦中山的操作让我以为他不会放我入预推免了, 没想到他还是愿意再给我一次机会, 他真的我哭死.</p>\n<h2 id=\"中山机试-面试-写于1月24日\"><a href=\"#中山机试-面试-写于1月24日\" class=\"headerlink\" title=\"中山机试&amp;面试 (写于1月24日)\"></a>中山机试&amp;面试 (写于1月24日)</h2>\n<p>中山的机试还是很简单快乐的, 一共是10道题目, 考得东西也很广. 前面三道考的是c++面向对象相关的东西, 好像有几层多继承下面的构造函数的调用顺序, 虚函数, 多态之类的. 但是因为都是提交代码题, 并且没有罚时, 当场出结果, 所以我感觉即使不太会这些东西, 也总能试出来. 后面都是一些简单的小算法/模拟题. 最后一道算法题感觉还是比较难的, 我不会做, 而且当时评测也卡了, 想着900分应该稳了我就没钻研下去.</p>\n<p>这里就不得不说这个oj设计的很多不合理的地方. 他的逻辑是当上一次评测结果没有出来时就不能进行下一次提交, 这就导致在卡评测的时候即使你发现了代码的问题也没办法交了. 并且这次机试一共三小时, 评测机听说从结束前一个多小时就开始卡, 幸亏我早早把前面的题都写了.</p>\n<p>还有一个很不合理的地方就是评测结果里可以看到输入数据和输出数据! 虽然他很多题目都是每次提交随机生成数据(虽然这样还是不是很合理), 但是有些题还是固定了输入输出数据的. 比如这次机试我不会的这题, 输出数据是完全可以看到的, 我也完全可以通过多次提交把数据全骗出来拿个满分. 但是一向做事光明磊落要求问心无愧的我肯定是不会干这种事的, 即使这样可能会让我吃亏.</p>\n<p>中山对我最大的吸引力就是拥有一个依托天河二号超算建立的组, 或者说是国家超级计算广州中心, 我能去的学校里应该只有中山能有一个规模不小的研究这些东西的组了.</p>\n<p>中山面试也比较轻松愉快, 感觉唯一正经的问题就是让我解释极大似然估计了. 之后都是一些聊家常的问题. “我看你在分布式系统方面做了很多项目, 你了解分布式方向有哪些期刊和会议吗”之类的.</p>\n<p>这时候还发生了一件很尴尬的事情, 先是一个老师A说现在分布式和高性能计算都跟AI相结合, 正好我的实习经历也是这方面, 我就顺着讲了讲我的实习, 然后A老师问我“你知道中山有哪些组在研究这些吗”, 我确实不清楚, 但是我觉得大概率在超算组, 我就说了. 这时候换了个老师B来介绍了两句超算组. 我怀疑是A老师是研究这个的, 但是他不是超算组的, 有点尴尬.</p>\n<p>面试结束后就有个老师加了我微信, 但是因为方向感觉不是很相合, 就没有给肯定的答复(我怀疑这位就是A老师).</p>\n<p>中山因为每年都被鸽穿, 所以如果真的想去中山, 只要入了夏令营或者预推免就一定可以去.</p>\n<p>之后只有一个同济的面试了, 但是随着99的去向越来越确定, 去同济我们俩肯定是要异地了. 并且我把同济的计科专业的老师名单翻了三遍, 没找到一个搞system相关的老师, 就进了群之后又退了.</p>\n<p>所以这时候我本应该可以松一口气迎接养老生活的, 但没想到恶战刚刚开始.</p>\n<p>面试刚结束不久我就联系了一位超算组的老师, 这老师估计也很忙, 邮件里虽然给了偏肯定的答复, 并且也让我加了微信, 但是加了微信之后两天没理我. 我也是不太懂咋回事, 后来终于给我打了一个电话, 意思是他名下没名额了, 但是他们组都是一起培养, 我大概率可以找到其他名额多的老师要到名额, 最后回来大概率还是他来带. 然后我就开始了漫长的找名额之路, 这时候已经是9月27日下午了.</p>\n<p>这位老师首先给我指定一位老师, 让我问问他有没有名额. 我给那位老师发了邮件之后, 并没有理我.</p>\n<p>然后到了9月28的上午九点, 这时候👴收到了北航的电话, 告诉👴北航候补到了. 其实虽然按理说我这个名次北航能候补到是意料之中的, 但是还没开系统, 甚至九点就候补到了, 这个是真的没想到. 虽然我早就想过如果北航候补到我应该是不会去的, 一方面因为我以后有出国的打算, 北航因为是10043, 进去之后大概率是告别出国了, 以后可能连外企都不好进, 另一方面还是担心跟99异地, 还有担心是怕候补到找不到好老师. 但是现在这个形势, 中山那边一直没有什么肯定的答复, 进去说不定跟哪个老师, 计算机评级A+的北航的offer只要我点同意就有, 说实话, 确实很心动.</p>\n<p>这时候我主动给加了微信的那个中山的老师打了个电话, 他说他指定的那个老师可能确实没有名额了, 然后我把我北航offer这个情况说了, 他说他觉得很大概率可以让我进他们组的, 即使现在找不到, 因为中山实际选老师在研一开学一段时间才选, 到时候说不定也是可以有名额的, 而且说超算组是个很大的组, 名额可以互相协调, 想要找到一个名额应该不难.</p>\n<p>这时候我也在积极的找北航的老师, 这个时间靠邮件肯定是来不及了, 我就找了一个夏令营录取北航已经联系好老师的朋友, 问问他们导还有没有名额. 我朋友直接把他导微信给我了, 我申请了之后, 也没有什么回信.</p>\n<p>总之, 这几个小时是我保研几个月里最煎熬的几个小时, 最终, 考虑了很多很多因素, 还是决定选了中山.</p>\n<p>之后, 已经录取中山拒绝北航之后, 我依然在紧张刺激的联系老师. 我几乎把组里所有老师都联系了一遍.</p>\n<p>下午两点多, 联系到了某位老师, 她说她有名额, 但是不知道是学硕还是专硕的. 我当时脑子没反应过来啥意思, 因为中山的录取规则是夏令营的最后一名&gt;预推免的第一名, 👴因为当时中山跟北航冲突了, 没参加夏令营. 虽然是预推免第6, 但是拿到学硕肯定是不可能的. 我以为她如果有学硕名额能给我换成学硕, 所以我回了句“学硕专硕无所谓”, 她可能以为我是学硕, 换成专硕也无所谓, 也给了肯定的答复, 就这样我误以为自己上岸了.</p>\n<p>过了一会, 她又发来邮件说她的名额是学硕名额, 这时候我意识到可能不是我想的那样, 我问了一下老师, 果然意思是只有学硕才能用这个名额. 这时候我又想到👴当时夏令营把中山鸽了的事, 心态有点崩.</p>\n<p>最终, 终于在晚上七点多找到一位大导手下还有名额, 这才算是真的上岸了.</p>\n<p>这时候, 白天加的那位北航的导师也加我微信了, 我跟他说我没去北航, 这位老师说我朋友告诉他了. 他还说中山超算很不错, 还给我推荐了几位老师, 感觉人非常好.</p>\n<p>最终, 我在中山这种夏令营最后一名大于预推免第一名的奇特制度下, 因为夏令营跟北航冲突放弃了中山, 预推免又去了中山, 最终在北航跟中山之间还选择了中山.</p>\n<p>我在保研系统里拒绝北航也截图了下来, 发给了几个朋友, 几个朋友都说这图帅.</p>\n<p>这个选择很难做, 我的选择也确实很大胆, 但是究竟哪个选择好呢, 可能谁都有自己的看法, 也可能谁也都不知道. 毕竟我没办法在928当天把自己fork一份出来看看以后两个我会咋样, 我只能像类似罗老师说的那样, 在我生命的每个阶段都选择了我相信的东西.</p>\n<p>人生有变, 世事无常. 可以说最后这个选择跟我在一年前的规划是完全不相符的. 不是说对自己的去向估计太低或者太高, 而是自己当时并不觉得自己会去一个离家这么远, 大概率不会一直生活下去的地方. 现在来看这个选择, 是那么的荒诞无奇又顺理成章, 而我只能感叹这几个小时是如此短暂, 短暂到我不敢相信我未来的人生就已经被这样, 被这几个小时决定了.</p>\n<p>高中的时候不懂事, 想让每次重要的选择都能准备充足, 做出最好的最正确的选择. 后来发现“好”和“正确”并没有什么严格的定义, 只需要每次选择能让自己不后悔就可以了. 现在觉得每次选择都不后悔也不容易, 只奢求以后再回来看这段至少现在我觉得非常重要的路的时候, 能感觉到“也无风雨也无晴”就行了.</p>\n","c130a614409701f7ab72552e6995fdf9321929fc":"<h1 id=\"保研游记\"><a href=\"#保研游记\" class=\"headerlink\" title=\"保研游记\"></a>保研游记</h1>\n<p>这个游记其实是从7月初, 准确地说应该是2022年7月4日, 中间一直断断续续的写, 一直到今天, 也就是2023年1月15日, 才算正式把它写完.</p>\n<p>这篇文章因为写的时候跨度比较长, 所以也可以从我的文笔, 或者语气什么的看出我在这段时间对一些事的看法(能吗), 并且有时候写文章的日期跟写的这件事发生的日子其实差距挺大, 所以我会把每一段发生的事日期标注起来的同时, 标注出写这段文字时的日期.</p>\n<p>这篇文章原连载于xdsec内部bbs, 现在写完了就把他发了出来, 当然对一些敏感信息做了处理.</p>\n<p>最后对自己的条件简单介绍一下:(这段文字是7月4日写的)</p>\n<p>保研无非看四个方面: 排名, 竞赛奖项, 科研, 项目. 我是计科院计算机科学与技术专业, 标准的低排名选手, 夏令营期间排名7%. 竞赛主要是acm类, 有邀请赛的银牌, 区域赛的铜牌和省赛的金牌. 还有一些其他的奖项, 比如大二时拿的国家奖学金, 中国计算机学会的CCF优秀大学生, 还有数模美赛的M奖. CSP, 就是那个CCF软件能力认证, 我是在大二上学期的CSP中拿到了330分, 累计排名前1.9%. 科研毫无经历, 这也是我除了排名外的最大弱势. 项目经历只有自己在自学MIT的 6.824 Distributed Systems 时自己完成的lab1-3, 我把它包装成了两个项目: 一个是 MapReduce系统, 另一个是基于Raft一致性算法的Key-Value存储服务.</p>\n<p>因为自己之前曾经在深度学习方向探索过很长一段时间, 最终最大的收获就是我坚决不碰这玩意. 所以夏令营期间的我的方向也很明确: 尽量找搞systems方向的老师和实验室. 并且个人因为听过太多博士生的悲惨遭遇, 所以选择了就业导向, 接受专硕, 拒绝直博. 所以这样一套选择对于我来说其实是很有利的: 一个是避开了AI这个卷王方向, 另一个是能接受专硕让我能入更多学校的夏令营. 当然现在看好像其实第二个的帮助不是很大, 因为专硕也很卷, 有的时候甚至比学硕还卷.</p>\n<p>因为排名低, 所以才去的 海投 策略, 也就是应报尽报, 不漏一校, 除非太麻烦. 截止到7.4日晚, 我已经报名了22所学校的夏令营, 已经收到了8个学校的入营通知, 这其实是我没想到的. 因为按理说7%的排名, 基本是没有什么营可以入的. 比我低2名的一位acm铜牌选手, 现在基本没入什么营.</p>\n<p>目前收到的入营通知有: 中山大学计算机学院, 浙江大学软件学院, 北京邮电大学计算机学院, 上海交通大学软件学院, 上海科技大学信息学院, 北京航空航天大学计算机学院, 哈尔滨工业大学(威海)计算机学院, 山东大学计算机学院.</p>\n<p>其中, 哈工威和山大报着是想练练手, 但是哈工威进群之后我忘改备注了, 第二天被踢了, 正好还要陪rx去一附院, 就不去了.</p>\n<p>山大跟北航冲突了, 就主动联系了山大放弃夏令营名额.</p>\n<p>明天要去陪rx做胃镜, 今天先写到这.</p>\n<p>下面开始正文:</p>\n<hr>\n<h2 id=\"7月4日-写于7月5日\"><a href=\"#7月4日-写于7月5日\" class=\"headerlink\" title=\"7月4日 (写于7月5日)\"></a>7月4日 (写于7月5日)</h2>\n<p>集美们, 今天又遇到绝绝子事件, 咱就是说一整个的无语住了.\n前两天, 6月30日, 我收到了中山大学的入营邮件, 这对于保研底层人的我来说算是如获至宝. 即使在对着邮件思考了半天6月到底有没有31号之后, 我对sysu的热情也丝毫未减, 没等到6月31号我就进了中山的群.\n<img src=\"/img//baoyan/1657007619-88739-image.jpeg\" alt=\"\"></p>\n<p>但是, 北航是出了名的喜欢acm选手, 并且北航的夏令营是不允许北航本科的同学参加的, 到了预推免阶段就基本都是北航本科的神仙打架, 所以北航一直是我夏令营的第一目标. 但是当时北航的入营结果还没出来, 作为保研弱势群体, 我还不敢奢求能再入什么营了, 而且即使能入营时间也有可能不冲突, 而且即使时间冲突了也大概率可以双开, 不会说真的两个两边都不能翘的东西撞在一起的.</p>\n<p>事实证明, 我低估了事情的复杂性. 最终, 我入了北航, 并且北航时间和中山的冲突了, 并且, 中山的机试和北韩的双机位测试时间冲突了. 我本以为问题不大, 大不了双机位测试调调时间, 或者中山机试光速ak下播. 然而, 中山可能是故意的, 时间放在了7号上午9点到12点, 并且 不可以提前交卷 . 而北航那边说的也很绝, 说双机位测试如果不参加, 就视为放弃入营资格:</p>\n<p><img src=\"/img//baoyan/1657008326-237856-image.jpeg\" alt=\"\"></p>\n<p>没办法, 只能放弃中山了. 可是中山群里早就说要放弃入营的尽早放弃, 现在机试的账号密码都发给我了, 今天上午中山的监考都联系我了, 跟我约好了面试测试时间.</p>\n<p><img src=\"/img//baoyan/1657008467-146891-image.jpeg\" alt=\"\"></p>\n<p>正在我进退两难的时候, 地铁到站了, 我又要去处理我上次出地铁的时候Apple Watch没电了导致我现在手表上的长安通还处于未出站的状态的问题, 处理完这个问题再接着进退两难.</p>\n<p>这时, 中山的一个叫做考务助理的人来找我:</p>\n<p><img src=\"/img//baoyan/1657008595-400801-image.jpeg\" alt=\"\"></p>\n<p>看到这个, 👴就想起来前两天👴花了23大洋在顺丰寄了个特快把材料寄过去, 结果还没送到, 气不打一出来.</p>\n<p><img src=\"/img//baoyan/1657009187-761246-img-5933.jpeg\" alt=\"\"></p>\n<p>这时候👴急中生智, 想着能不能借着这个机会编个理由, 比如中午有火车, 把夏令营给推脱掉, 正好借着这个机会营造出一种“哎呀我本来是想参加机试的而且我本来还有事情克服了各种困难想要参加机试结果现在还整出来材料没寄过去这一出我要参加的话不仅麻烦自己还要麻烦您老人家所以我干脆不参加算了都怪顺丰呜呜呜”的感觉.</p>\n<p><img src=\"/img//baoyan/1657009284-7467-image.jpeg\" alt=\"\"></p>\n<p>没想到那边答应的还算爽快.</p>\n<p>现在就算是把中山也放弃了, 还是挺不舍的, 虽然可能大概率不会去广州那边, 但是中山有个天河二号, 那边搞超算衍生出来的方向的老师还是很多的, 而且夏令营系统做的也很好, 比北邮那个点任何一个按钮都有50%的几率进入到asp.net的错误页面每次报名都是一个马尔可夫过程的系统好多了.</p>\n<p>18级的一个学长跟我说, 夏令营面试最好是从最菜的学校往上面试, 这样自信也会越来越强, 但是经过这样一折腾, 我的第一个面试就是北航了, 没有一个学校供我练手了. 可能这就是夏令营要寄的预兆吧.</p>\n<h2 id=\"7-8-大寄-写于7月8日\"><a href=\"#7-8-大寄-写于7月8日\" class=\"headerlink\" title=\"7.8 大寄 (写于7月8日)\"></a>7.8 大寄 (写于7月8日)</h2>\n<p>今天是北航的机试. 按理说我是可以不参加的. 北航的机试是可以用CSP的分数折算的. 按理说, CSP的累计排名前10%折算就不亏. 但是折算之后具体多少分还是要在所有要求折算的人中按照累计排名来看. 但是北航有个特殊的要求, CSP报名的时候选的那个语言必须是C/C++, 不能选择ALL. 我虽然每次CSP都是只用C++, 但是我最高的一次330分(累计排名1.9%)是选了ALL, 选C++的只有一次290分(那次比较难, 单次排名2%, 但是累计排名是在所有场次里排名, 只有4.6%).\n按理说, 如果我能够用330分抵机试, 那我将绝杀, 大概率是满分. 但是用290分可能有那么一点几率不是满分, 但是即使不是满分, 估计也差不了几分. 但是我想到前段时间学长劝我的, 说我这情况可以直接去考机试, 拿个满分, 这样比较稳妥一点. 北航是很看重机试的, 其他学校都说机试成绩仅供参考, 但是北航明确说了机试成绩占50%. 北航历年的题目也不难, 满分问题不大. 我去看了一下往年题, 好像难度确实不大, 满分应该十拿九稳.\n跟我类似情况的还有我的两个朋友, 一个是ACM区域赛银, 一个是ACM区域赛金, 他们是完全没有CSP的C++成绩, 只有ALL的成绩. 我是有一次C++的成绩, 但是我怕我不能满分, 所以我们三个都选择了参加机试. (尽管我们所有的CSP全部都只用了C++)\n于是今天就去参加了机试, 机试有两题, 时间两小时, oi赛制. 具体过程就不说了, 只能说是大寄. 两道题全部都是巨大模拟题, 各种小情况贼恶心, 我写完第一题就已经过了一个小时多, 第二题思考了一段时间, 挣扎了一段时间, 最后还是觉得不可能写得完剩下这点时间.\n考完我觉得我寄了, 我去找那位银牌同学说, “我只做了一题, 我寄了”. 那位银牌同学说他也只做了一题.\n我们聊了一会, 过一会那位金牌同学跟我私聊发了四个字:</p>\n<p><img src=\"/img//baoyan/1657272510-873749-image.jpeg\" alt=\"\"></p>\n<p>哈哈, 他也只做了一题.\n我去绿裙里看了一眼, 好像还有不少acm金出来说自己只写了一题.\n今天的总体评价是, 真不如拿csp抵了, 290就290, 不能满分就不能满分, 我现在还在担心我能不能到60分.\n麻了, 今天晚上出评测结果, 我都不知道我能不能进面试.</p>\n<p>我为什么不用csp抵了.</p>\n<p>我还是低估了夏令营折磨我的程度, 过去一点时间每天处理完各种事情就什么都不想干了, 现在夏令营的面试应该都结束了, 凭回忆更新一下吧.</p>\n<h2 id=\"7-9-北航面试-写于7月20日\"><a href=\"#7-9-北航面试-写于7月20日\" class=\"headerlink\" title=\"7.9 北航面试 (写于7月20日)\"></a>7.9 北航面试 (写于7月20日)</h2>\n<p>昨天晚上收到了机试合格的通知, 不过今年buaa好像机试没刷人, 往年都是至少做一题才能进面试的, 今年好多机试0分的进了面试, 保研名场面+1.\n北航发了个面试的顺序表, 一共有十几个组并行. 我是第四组的第7位. 往年说这个面试顺序是反映了机试排名的, 但是今年我调查了几个, 好像并没有什么规律. 邮件里说每一位同学面试时间大概是20分钟, 第一位同学8:30开始, 我算了一下我应该是10:50面试, 邮件里说提前十分钟过去就行, 我就一直准备十点四十再进会议.\n九点四十我收到了一个电话, 说面试快到我了, 让我进会议, 给我一个措手不及, 加了会议, 结果等到10:20才让我进.\n看群里先面试的说北航的专业课问的很多, 出来的一个个都愁眉苦脸的. 也做好了心理准备.</p>\n<p>面试上来问了俩离散数学的问题, 不过很简单, 然后让我设计一个算法去生成一个集合的幂集. 我本来说可以直接枚举二进制, 从0到 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.176ex\" height=\"1.714ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -675.5 2729.7 757.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1229.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2229.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g></svg>, 每一位代表这个元素是否出现就行了. 但是很明显他好像没听懂, 问我能不能换个方法, 我又说了递归的做法他才满意.</p>\n<p>然后是数学, 一个老师问我线性无关和矩阵相似的定义. 也挺简单的.</p>\n<p>然后让我介绍了一下我的项目, 就是Raft上的KV存储服务, 问我Raft是怎么保证分布式一致性的, 我讲了半天log是啥. 然后另一个老师说看你这个log讲的挺好, 要我介绍一下数据库的log. 我也不太懂他让我介绍啥, 我就说我的上层其实也是一个KV数据库, 介绍了一下我上层的KV服务怎么和Raft层通过log交互的. 他说我回答的方向不太对, 但是时间差不多了, 就换了个人问我经典问题:“你为什么想来北航啊”. 我吹了吹北航就结束了.</p>\n<p>结束了之后去帮棒子做饭, 做的咖喱鸡🍛, 但是做到一半想起来我有上交的双机位测试, 一点开始, 我又赶紧爬过去进会议测试了一下.</p>\n<p>晚上出了优营和候补, 大寄, 进候补了. 虽然按照往年的情况我是能在后期被录取的, 但是也不是很敢赌, 而且进去估计也都是坑导. 我很确定是傻逼机试的问题, 我看到候补前面的两名是一个我认识的金牌👴, 一问发现他跟我一样的情况, csp怕不能满分然后参加了他那个傻逼机试.</p>\n<p>当天晚上还挺郁闷的, 半夜拉着99和rx出去陪我吃了顿海底捞.</p>\n<h2 id=\"7-10-玉玉-写于7月21日\"><a href=\"#7-10-玉玉-写于7月21日\" class=\"headerlink\" title=\"7.10 玉玉 (写于7月21日)\"></a>7.10 玉玉 (写于7月21日)</h2>\n<p>9号晚上九点多出的门, 我本来想着10点海底捞就能有6.9折. 但是走到一半才想起来今天是周六, 要到12点之后才能6.9折. 我们三个在高新万达的门口坐了一个半小时, 等到十二点才进海底捞的.</p>\n<p>吃完海底捞我们三个看了一下骑个车也就15公里就到西电了, 上次我们去阳光天地骑车过去都12公里了, 半夜打车还贵, 我们就决定骑车回去. 三个人只有rx的iPhone 13 Pro电比较多, 我和99的iPhone 12和11电池都比较垃圾, 所以决定让rx看着导航走. 不过因为rx错过了一个很隐蔽的路口, 又不敢逆行骑回去,  就把整个街区都绕了一遍才绕过立交桥. 折腾到3点多才回去.</p>\n<p>起来之后发现北邮是11号自我介绍, 然后还要做项目, 15号还要验收项目, 15号本来还有上科大的面试, 心情本来就不好的我直接选择了放弃北邮. 这样11号就只有上交的机试了.</p>\n<p>上交软院的机试很神必, 需要连上上交的vpn, 然后rdp上他给每一个人开的windows服务器上写代码. 环境的话他让提前几天连上去自己配, 允许下载任何软件和电子资料, 但是机试的时候会断网. 之前上交软的机试一大特点就是会要求你写GUI程序, 但是今年明确说明了不会考察GUI, 我也就没去准备. 环境我也就装了个CLion, PyCharm, 下了一个OiWiki的pdf版.</p>\n<h2 id=\"7-11-上交软院机试-写于7月21日\"><a href=\"#7-11-上交软院机试-写于7月21日\" class=\"headerlink\" title=\"7.11 上交软院机试 (写于7月21日)\"></a>7.11 上交软院机试 (写于7月21日)</h2>\n<p>下午三点开始机试, 时长3个小时. 但是有人一直连不上vpn, 等到四点半才开始, 这可能也是一轮筛选吧.</p>\n<p>上交果然是上交, 机试让3小时手撸随机森林. 邮件里说的60分才能进入面试, 评分是按照模块白盒给分. 比如统计训练集里的target label有多少个0和1就有10分了. 然后使用基尼系数实现每一个节点的特征选取, 建立出决策树后输出这个决策树的后序遍历, 然后在测试集上测试, 输出正确率. 这样才实现了60分的功能, 剩下40分其中有10分是代码规范和注释分, 5分是通过他的所有测试点, 15分是使用三个决策树实现随机森林, 10分是微调让正确率尽量高.</p>\n<p>我最后实现了60分的功能, 下一个15分的随机森林其实也不是很复杂了, 但是时间不够, 而且在写前面的代码的时候并没有考虑后面的功能的实现, 导致写这一步的时候需要改一下之前函数所传递的参数, 然后差一点点没写完. 功能分已经有60分, 就算我的代码写的再烂, 代码规范一分都不给我, 还没有通过所有的测试点, 我也能拿到60分, 所以机试完我也不是很紧张.</p>\n<p>上交软院的面试是很有特色的. 他分了5个方向, 并且在机试前就让所有人选择方向, 面试时就去面试对应的方向. 作为做梦都想去IPADS实验室的我, 当然直接选择了IPADS方向.</p>\n<p><img src=\"/img//baoyan/Untitled.jpeg\" alt=\"Untitled\"></p>\n<p>本来说的机试前就要截止, 但是9号又改成了12号晚上之前都行, 可能是有的方向去的人太少了吧.</p>\n<p>上交软院的另一个特色时, 他会在入营的时候就附赠所有方向的指定论文, 每个人选择一个方向的一篇论文去精读, 面试的时候几乎所有的时间都在问论文里的问题. 我前一段时间都在忙其他夏令营, 而且IPADS给了十几篇论文, 所以前面几天在论文上的进展就只有换了好几篇论文之后最终选定一篇论文.</p>\n<p>13号就面试了, 我11号晚上才算是开始认真看了论文. 因为之前有过读论文的经验, 所以看论文还算顺利, 我选的论文是一篇20页的双栏, 这在系统领域也不算是很长了. 当然跟AI领域的论文相比算很长的了.</p>\n<p>12号一天都是上交的宣讲, 我一直在读论文, 所以没去听. 到了傍晚上交机试结果还没出, 有点心急, 这时候突然收到一个邮件:</p>\n<p><img src=\"/img//baoyan/Untitled1.jpeg\" alt=\"Untitled\"></p>\n<p>挺离谱的, 我看到很遗憾的时候我以为我上交论文白看了, 结果仔细一看是南大的. 全世界都知道你他妈面试都面试完了, 你才给我发邮件说我初审挂了, 真绝绝子.</p>\n<p>论文看到Evaluation就没再看了, 仔细整理了一下前面可能会问到的问题. 晚上八点终于收到了进面试的邮件. 离谱的是他邮件里不仅没有说每个人的面试时间, 甚至连顺序都要明天早上七点半爬起来看.</p>\n<p><img src=\"/img//baoyan/Untitled2.jpeg\" alt=\"Untitled\"></p>\n<p>收到邮件之后草草做了个自我介绍ppt, 然后把论文又梳理了一遍就睡觉去了.</p>\n<h2 id=\"7-13-IPADS面试-写于7月24日\"><a href=\"#7-13-IPADS面试-写于7月24日\" class=\"headerlink\" title=\"7.13 IPADS面试 (写于7月24日)\"></a>7.13 IPADS面试 (写于7月24日)</h2>\n<p>早上七点半的闹铃, 伴随着经典的雷达铃声我火速进了腾讯会议看面试顺序. 可惜我进去的时候会议公告开始空空如也. 等到七点五十多还是没有消息, 八点就开始第一个人的面试, 我在想到底是哪个倒霉蛋会是第一个面试. 过了两分钟看到绿裙里有人说名单出来了, 但是我的腾讯会议好像坏了, 收不到消息, 我就找了个群友要了一份顺序名单, 还好, 一共35个人左右, 我在第17位. 如果每一个人二十分钟的话, 我应该是一点二十开始面试, 听说中午还要休息一段时间, 如果是休息一小时的话, 应该就是两点二十开始面试. 于是我又躺床上了一会, 然后爬起来论文, 准备自我介绍之类的.</p>\n<p>十一点多点了份摇滚炒鸡, 等到快一点了还没到, 有点害怕他们不午休或者午休时间没这么长或者有人放弃面试导致我提前面试, 所以已经做好了不吃午饭的准备. 没一会就到了, 光速把饭吃完就布置双机位之类的了. 一点四五十的时候我进去问了一下面到哪了, 发现再过一个就是我了, 就感觉又把英语自我介绍, 论文里的那些问题又看了一遍.</p>\n<p>两点二十我准时被放进了会议室. IPADS的摄像头感觉像挂在了天花板的角落上, 能看到整个大会议室, 但是看不清人脸, 所以刚开始感觉压迫感也没那么强.</p>\n<p>首先是邮件里就提到的自我介绍, 五分钟的ppt自我介绍. 在自我介绍之前, 一个单独坐在一边的老师问了我选择了哪片论文. 我主要介绍了我的两个项目. 自我介绍完后, 那个老师说:“好的, 非常好, 下面我们来探讨一下你选择的这篇论文吧.” 然后大的就来了.</p>\n<p>他首先问了大概四五个论文主体部分就已经介绍的一些实现, 因为这些都是论文的核心, 所以我应该基本都答上来了. 然后开始问一些至少在我看的论文的部分里面没有出现过的拓展性的问题, 很显然, 对于一个理解论文在说什么都已经拼尽全力的我来说, 这种问题还是太过超前了点. 他大概问了三四个这样的问题, 我基本都在全程口胡, 他的反应也都是一样的, 所以我也不知道我口胡的到底有多少是对的. 然后他还想问, 旁边一个老师提醒他到了英语考核时间了, 我随便说了几句就结束了. 然后刚刚那位老师又开始了:“还有两分钟, 我再问你一个问题..”. 然后让我把我的ppt翻到我的MapReduce系统那一页, 问了个我不是很能理解他的意思的问题, 我一般遇到这样的情况都是先用自己的语言复述一下那个问题, 不管我能不能听得懂, 然后说了句我觉得这个问题有问题的地方, 他说不会有这个问题, 虽然我还是没懂, 但我又复述了一遍问题, 他说对, 你可以这样理解, 然后旁边的老师提醒他时间到了, 该下一个了, 别问了, 然后才让我下播.</p>\n<p>总之, 面试虽然挺寄的, 但是见识到IPADS的面试水平也是死而无憾了, 专业问题从项目到论文全是那一个老师在问, 而且不像某些学校会一你一些很具体还不重要的早就忘掉的实现细节, 你不记得就说你准备不充分, IPADS的问题都是很合理的, 会给你一个具体的情境, 让你意识到这是真的会遇到的问题, 然后让你提出你的解决方法, 可能这就是IPADS吧.</p>\n<h2 id=\"7-14-计算所面试-上科大宣讲-写于7月26日\"><a href=\"#7-14-计算所面试-上科大宣讲-写于7月26日\" class=\"headerlink\" title=\"7.14 计算所面试&amp;上科大宣讲 (写于7月26日)\"></a>7.14 计算所面试&amp;上科大宣讲 (写于7月26日)</h2>\n<p>7月12日的上午, 就是上交宣讲的那一天, 我收到了一个来自北京的电话. 他告诉我是计算所的, 问我明天(7月13日)有没有时间面试. 我计算所报的是一个搞存储的组, 分布式存储, NVM之类的东西. 本来我以为只能13日面试, 我就说你先别急, 我过一会看看13号啥时候有时间, 确定好了短信发给你, 他说行. 其实我是想等上交的面试时间出来, 但上交不给面子, 一直等到晚上五六点都没发通知, 我就短信问他能不能14号面试, 他说可以. 事实证明我没有继续等下去是正确的, 上交在第二天面试开始前五分钟才把顺序发出来, 我的腾讯会议还没收到. 最终时间定在了14日上午的10点半.</p>\n<p>10点半, 他准时打电话告诉我说可以进入腾讯会议了. 这个应该是这个组的单独面试, 因为会议里就两个人, 还不用开摄像头, 而且会议是刚建的, 可能这个点面试的就我一个人.</p>\n<p>首先是自我介绍, 然后他开始问我操作系统的问题. 第一个问题是线程切换的时候要干什么. 我随便说了说什么保存现场之类的. 他问我保存现场的现场有哪些, 我说就是寄存器之类的, 还有栈上的局部变量啥的, 这时候我突然意识到我在说什么勾八, 刚反应过来我说了什么不得了的事情的时候那边就问栈上局部变量也是? 我连忙说没有没有, 说错了. 这可能注定了我这场面试会寄.</p>\n<p>之后问了计网, 数据结构, 操作系统那些东西, 感觉答上来的有七八十吧, 有些东西他说的我都没听说过, 就直接说不会了. 最后要开共享屏幕打代码, 感觉是标准的考研或者找工作的那种题目, 我空间复杂度多了个系数, 他的答案只需要一个哈希表, 我开了两个. 然后面试就结束了, 一共四十分钟.</p>\n<p>过了两三天计算所的入营名单出来了, 没有👴, 👴去问了一下那个联系我面试的, 他说没入营就是寄了, 那就寄了.</p>\n<h2 id=\"7-15-上科大面试-写于10月15日\"><a href=\"#7-15-上科大面试-写于10月15日\" class=\"headerlink\" title=\"7.15 上科大面试 (写于10月15日)\"></a>7.15 上科大面试 (写于10月15日)</h2>\n<p>今天rx让我给他bbs发的新帖点赞, 我才想起来我还有个坑没填, 保研都结束了, 慢慢填吧.</p>\n<p>到了👴最喜欢的上科大的面试. 上科大一直是👴好感度很高的一个学校, 师资力量巨强, 如果确定走科研的话来这里的强组不仅能享受到一些巨nb的老师的指导, 也能把上科大当作跳板去润国外读phd, 上科大的title申国外phd的水平已经能到华五的级别了. 而且宿舍和校园环境也是国内第一梯队的, 比西电好了不知道多少倍. 上科大报名和面试是分组进行的, 👴报的是系统与安全中心, 面试的也都是搞系统或者安全的.</p>\n<p>👴上科大面试的过程还是很寄的. 首先👴一进去就看到了👴报的第一志愿的老师. 这个老师首先问了我一个很简单的问题: 给你一个硬币, 你可以抛他, 每次都是等概率的落下正反面, 怎么利用这个硬币在四个选择中等概率的选择一个. 这个问题当然很简单, 我甚至以为这个面试就这么简单. 然后这个老师又问, 那变成三个选择呢? 👴当时就不太会了, 不过👴大概说了下思路, 口胡了几句.</p>\n<p>然后另一个老师问我计网的问题, 就是TCP/UDP, 流量控制, 拥塞控制之类的, 这些都很简单.</p>\n<p>然后第三个老师说, 看我是打acm的, 就问我个数学题吧. 我当时就想我tm虽然是打acm的但是👴最不会的就是数学而且刚刚那人已经问我过数学题了你怎么还问没活整可以不问可以咬个打火机. 问了个概率论智商题, 👴吭哧了半天唯一进展就是我说可以用递推. 然后面试就结束了.</p>\n<p>👴面试完觉得自己铁寄的, 没想到过两天就给👴发优营通知了, 还是学硕. 你们是有多缺人啊.</p>\n<p>👴本来不想联系老师的, 因为感觉👴去上科大的概率不大, 但是八月份的时候夏令营都结束了, 👴还是只有上科大一个offer, 就去联系了个老师. 那老师跟我聊了四五十分钟, 最后跟我说, 我对你的印象还是很正面的, 但是保研还都有不确定性, 我现在也不敢说我不要你或者我要你… 反正就是养鱼, 我也没管过了.</p>\n<h2 id=\"7-20-软件所面试-写于10月15日\"><a href=\"#7-20-软件所面试-写于10月15日\" class=\"headerlink\" title=\"7.20 软件所面试 (写于10月15日)\"></a>7.20 软件所面试 (写于10月15日)</h2>\n<p>这地方之前还是挺想去的, 毕竟听说是中科院title, 而且实力很强, 说跟华五下游一个水平balabala…</p>\n<p>但是后来因为种种原因不是很想去了, 本着自己大概率不去我就不耽误人家老师的心态, 我也就没联系什么老师.</p>\n<p>软件所也是报到实验室的, 面试分实验室进行. 我报的并行计算实验室. 这个实验室先有一个笔试, 微信群里发题, 然后开摄像头写好发给老师. 笔试内容就是高性能计算那一套, 不过都是很基础的, 基本都在考cache friendly的东西.</p>\n<p>面试是属实绷不住, 他面试分成了三天, 五个半天, 每半天有十个人左右, 👴有幸成为了第一个半天的第一位. 进去之后纯闲聊, 问我读不读博, 我说我有读博的想法, 但是想先读硕士感受一下科研, 我说我想研一体验科研, 然后决定转不转博. 然后另一个老师说, 你们研一都在雁栖湖, 应该是不方便做科研的. 然后又另一个老师说, 虽然你们在雁栖湖, 但是有很多同学还是研一甚至大四就来做科研的. 你要是来软件所的话你可以提前进组. 整个面试问我最有技术含量的问题就是问西电微机原理学的汇编是x86的还是RISC-V的.</p>\n<p>面试完过几天有个软件所的老师给我打电话, 说他是搞模式识别和区块链的, 问我愿不愿意去. 因为这个跟我想做的方向差距实在太大, 就给拒了. 然后软件所的优营果然没有我, 这玩意纯看老师.</p>\n<p>至此, 夏令营环节全都结束了.</p>\n<h2 id=\"预推免-写于1月24日\"><a href=\"#预推免-写于1月24日\" class=\"headerlink\" title=\"预推免 (写于1月24日)\"></a>预推免 (写于1月24日)</h2>\n<p>本以为预推免是一场恶战, 没想到就这样草草结束了.</p>\n<p>预推免我也是海投, 但是说是海投, 其实心里也基本做好了去上科大的准备了.</p>\n<p>预推免最终入营了的也只有中山和同济. 本来夏令营极限🐦中山的操作让我以为他不会放我入预推免了, 没想到他还是愿意再给我一次机会, 他真的我哭死.</p>\n<h2 id=\"中山机试-面试-写于1月24日\"><a href=\"#中山机试-面试-写于1月24日\" class=\"headerlink\" title=\"中山机试&amp;面试 (写于1月24日)\"></a>中山机试&amp;面试 (写于1月24日)</h2>\n<p>中山的机试还是很简单快乐的, 一共是10道题目, 考得东西也很广. 前面三道考的是c++面向对象相关的东西, 好像有几层多继承下面的构造函数的调用顺序, 虚函数, 多态之类的. 但是因为都是提交代码题, 并且没有罚时, 当场出结果, 所以我感觉即使不太会这些东西, 也总能试出来. 后面都是一些简单的小算法/模拟题. 最后一道算法题感觉还是比较难的, 我不会做, 而且当时评测也卡了, 想着900分应该稳了我就没钻研下去.</p>\n<p>这里就不得不说这个oj设计的很多不合理的地方. 他的逻辑是当上一次评测结果没有出来时就不能进行下一次提交, 这就导致在卡评测的时候即使你发现了代码的问题也没办法交了. 并且这次机试一共三小时, 评测机听说从结束前一个多小时就开始卡, 幸亏我早早把前面的题都写了.</p>\n<p>还有一个很不合理的地方就是评测结果里可以看到输入数据和输出数据! 虽然他很多题目都是每次提交随机生成数据(虽然这样还是不是很合理), 但是有些题还是固定了输入输出数据的. 比如这次机试我不会的这题, 输出数据是完全可以看到的, 我也完全可以通过多次提交把数据全骗出来拿个满分. 但是一向做事光明磊落要求问心无愧的我肯定是不会干这种事的, 即使这样可能会让我吃亏.</p>\n<p>中山对我最大的吸引力就是拥有一个依托天河二号超算建立的组, 或者说是国家超级计算广州中心, 我能去的学校里应该只有中山能有一个规模不小的研究这些东西的组了.</p>\n<p>中山面试也比较轻松愉快, 感觉唯一正经的问题就是让我解释极大似然估计了. 之后都是一些聊家常的问题. “我看你在分布式系统方面做了很多项目, 你了解分布式方向有哪些期刊和会议吗”之类的.</p>\n<p>这时候还发生了一件很尴尬的事情, 先是一个老师A说现在分布式和高性能计算都跟AI相结合, 正好我的实习经历也是这方面, 我就顺着讲了讲我的实习, 然后A老师问我“你知道中山有哪些组在研究这些吗”, 我确实不清楚, 但是我觉得大概率在超算组, 我就说了. 这时候换了个老师B来介绍了两句超算组. 我怀疑是A老师是研究这个的, 但是他不是超算组的, 有点尴尬.</p>\n<p>面试结束后就有个老师加了我微信, 但是因为方向感觉不是很相合, 就没有给肯定的答复(我怀疑这位就是A老师).</p>\n<p>中山因为每年都被鸽穿, 所以如果真的想去中山, 只要入了夏令营或者预推免就一定可以去.</p>\n<p>之后只有一个同济的面试了, 但是随着99的去向越来越确定, 去同济我们俩肯定是要异地了. 并且我把同济的计科专业的老师名单翻了三遍, 没找到一个搞system相关的老师, 就进了群之后又退了.</p>\n<p>所以这时候我本应该可以松一口气迎接养老生活的, 但没想到恶战刚刚开始.</p>\n<p>面试刚结束不久我就联系了一位超算组的老师, 这老师估计也很忙, 邮件里虽然给了偏肯定的答复, 并且也让我加了微信, 但是加了微信之后两天没理我. 我也是不太懂咋回事, 后来终于给我打了一个电话, 意思是他名下没名额了, 但是他们组都是一起培养, 我大概率可以找到其他名额多的老师要到名额, 最后回来大概率还是他来带. 然后我就开始了漫长的找名额之路, 这时候已经是9月27日下午了.</p>\n<p>这位老师首先给我指定一位老师, 让我问问他有没有名额. 我给那位老师发了邮件之后, 并没有理我.</p>\n<p>然后到了9月28的上午九点, 这时候👴收到了北航的电话, 告诉👴北航候补到了. 其实虽然按理说我这个名次北航能候补到是意料之中的, 但是还没开系统, 甚至九点就候补到了, 这个是真的没想到. 虽然我早就想过如果北航候补到我应该是不会去的, 一方面因为我以后有出国的打算, 北航因为是10043, 进去之后大概率是告别出国了, 以后可能连外企都不好进, 另一方面还是担心跟99异地, 还有担心是怕候补到找不到好老师. 但是现在这个形势, 中山那边一直没有什么肯定的答复, 进去说不定跟哪个老师, 计算机评级A+的北航的offer只要我点同意就有, 说实话, 确实很心动.</p>\n<p>这时候我主动给加了微信的那个中山的老师打了个电话, 他说他指定的那个老师可能确实没有名额了, 然后我把我北航offer这个情况说了, 他说他觉得很大概率可以让我进他们组的, 即使现在找不到, 因为中山实际选老师在研一开学一段时间才选, 到时候说不定也是可以有名额的, 而且说超算组是个很大的组, 名额可以互相协调, 想要找到一个名额应该不难.</p>\n<p>这时候我也在积极的找北航的老师, 这个时间靠邮件肯定是来不及了, 我就找了一个夏令营录取北航已经联系好老师的朋友, 问问他们导还有没有名额. 我朋友直接把他导微信给我了, 我申请了之后, 也没有什么回信.</p>\n<p>总之, 这几个小时是我保研几个月里最煎熬的几个小时, 最终, 考虑了很多很多因素, 还是决定选了中山.</p>\n<p>之后, 已经录取中山拒绝北航之后, 我依然在紧张刺激的联系老师. 我几乎把组里所有老师都联系了一遍.</p>\n<p>下午两点多, 联系到了某位老师, 她说她有名额, 但是不知道是学硕还是专硕的. 我当时脑子没反应过来啥意思, 因为中山的录取规则是夏令营的最后一名&gt;预推免的第一名, 👴因为当时中山跟北航冲突了, 没参加夏令营. 虽然是预推免第6, 但是拿到学硕肯定是不可能的. 我以为她如果有学硕名额能给我换成学硕, 所以我回了句“学硕专硕无所谓”, 她可能以为我是学硕, 换成专硕也无所谓, 也给了肯定的答复, 就这样我误以为自己上岸了.</p>\n<p>过了一会, 她又发来邮件说她的名额是学硕名额, 这时候我意识到可能不是我想的那样, 我问了一下老师, 果然意思是只有学硕才能用这个名额. 这时候我又想到👴当时夏令营把中山鸽了的事, 心态有点崩.</p>\n<p>最终, 终于在晚上七点多找到一位大导手下还有名额, 这才算是真的上岸了.</p>\n<p>这时候, 白天加的那位北航的导师也加我微信了, 我跟他说我没去北航, 这位老师说我朋友告诉他了. 他还说中山超算很不错, 还给我推荐了几位老师, 感觉人非常好.</p>\n<p>最终, 我在中山这种夏令营最后一名大于预推免第一名的奇特制度下, 因为夏令营跟北航冲突放弃了中山, 预推免又去了中山, 最终在北航跟中山之间还选择了中山.</p>\n<p>我在保研系统里拒绝北航也截图了下来, 发给了几个朋友, 几个朋友都说这图帅.</p>\n<p>这个选择很难做, 我的选择也确实很大胆, 但是究竟哪个选择好呢, 可能谁都有自己的看法, 也可能谁也都不知道. 毕竟我没办法在928当天把自己fork一份出来看看以后两个我会咋样, 我只能像类似罗老师说的那样, 在我生命的每个阶段都选择了我相信的东西.</p>\n<p>人生有变, 世事无常. 可以说最后这个选择跟我在一年前的规划是完全不相符的. 不是说对自己的去向估计太低或者太高, 而是自己当时并不觉得自己会去一个离家这么远, 大概率不会一直生活下去的地方. 现在来看这个选择, 是那么的荒诞无奇又顺理成章, 而我只能感叹这几个小时是如此短暂, 短暂到我不敢相信我未来的人生就已经被这样, 被这几个小时决定了.</p>\n<p>高中的时候不懂事, 想让每次重要的选择都能准备充足, 做出最好的最正确的选择. 后来发现“好”和“正确”并没有什么严格的定义, 只需要每次选择能让自己不后悔就可以了. 现在觉得每次选择都不后悔也不容易, 只奢求以后再回来看这段至少现在我觉得非常重要的路的时候, 能感觉到“也无风雨也无晴”就行了.</p>\n","ba6cb8afec0ce62a937d5e284f440df268e3cf4e":"<p>这个游记其实是从7月初, 准确地说应该是2022年7月4日, 中间一直断断续续的写, 一直到今天, 也就是2023年1月15日, 才算正式把它写完.</p>\n<p>这篇文章因为写的时候跨度比较长, 所以也可以从我的文笔, 或者语气什么的看出我在这段时间对一些事的看法(能吗), 并且有时候写文章的日期跟写的这件事发生的日子其实差距挺大, 所以我会把每一段发生的事日期标注起来的同时, 标注出写这段文字时的日期.</p>\n<p>这篇文章原连载于xdsec内部bbs, 现在写完了就把他发了出来, 当然对一些敏感信息做了处理.</p>\n<p>最后对自己的条件简单介绍一下:(这段文字是7月4日写的)</p>\n<p>保研无非看四个方面: 排名, 竞赛奖项, 科研, 项目. 我是计科院计算机科学与技术专业, 标准的低排名选手, 夏令营期间排名7%. 竞赛主要是acm类, 有邀请赛的银牌, 区域赛的铜牌和省赛的金牌. 还有一些其他的奖项, 比如大二时拿的国家奖学金, 中国计算机学会的CCF优秀大学生, 还有数模美赛的M奖. CSP, 就是那个CCF软件能力认证, 我是在大二上学期的CSP中拿到了330分, 累计排名前1.9%. 科研毫无经历, 这也是我除了排名外的最大弱势. 项目经历只有自己在自学MIT的 6.824 Distributed Systems 时自己完成的lab1-3, 我把它包装成了两个项目: 一个是 MapReduce系统, 另一个是基于Raft一致性算法的Key-Value存储服务.</p>\n<p>因为自己之前曾经在深度学习方向探索过很长一段时间, 最终最大的收获就是我坚决不碰这玩意. 所以夏令营期间的我的方向也很明确: 尽量找搞systems方向的老师和实验室. 并且个人因为听过太多博士生的悲惨遭遇, 所以选择了就业导向, 接受专硕, 拒绝直博. 所以这样一套选择对于我来说其实是很有利的: 一个是避开了AI这个卷王方向, 另一个是能接受专硕让我能入更多学校的夏令营. 当然现在看好像其实第二个的帮助不是很大, 因为专硕也很卷, 有的时候甚至比学硕还卷.</p>\n<p>因为排名低, 所以才去的 海投 策略, 也就是应报尽报, 不漏一校, 除非太麻烦. 截止到7.4日晚, 我已经报名了22所学校的夏令营, 已经收到了8个学校的入营通知, 这其实是我没想到的. 因为按理说7%的排名, 基本是没有什么营可以入的. 比我低2名的一位acm铜牌选手, 现在基本没入什么营.</p>\n<p>目前收到的入营通知有: 中山大学计算机学院, 浙江大学软件学院, 北京邮电大学计算机学院, 上海交通大学软件学院, 上海科技大学信息学院, 北京航空航天大学计算机学院, 哈尔滨工业大学(威海)计算机学院, 山东大学计算机学院.</p>\n<p>其中, 哈工威和山大报着是想练练手, 但是哈工威进群之后我忘改备注了, 第二天被踢了, 正好还要陪rx去一附院, 就不去了.</p>\n<p>山大跟北航冲突了, 就主动联系了山大放弃夏令营名额.</p>\n<p>明天要去陪rx做胃镜, 今天先写到这.</p>\n<p>下面开始正文:</p>\n<hr>\n<h2 id=\"7月4日-写于7月5日\"><a href=\"#7月4日-写于7月5日\" class=\"headerlink\" title=\"7月4日 (写于7月5日)\"></a>7月4日 (写于7月5日)</h2>\n<p>集美们, 今天又遇到绝绝子事件, 咱就是说一整个的无语住了.\n前两天, 6月30日, 我收到了中山大学的入营邮件, 这对于保研底层人的我来说算是如获至宝. 即使在对着邮件思考了半天6月到底有没有31号之后, 我对sysu的热情也丝毫未减, 没等到6月31号我就进了中山的群.\n<img src=\"/img//baoyan/1657007619-88739-image.jpeg\" alt=\"\"></p>\n<p>但是, 北航是出了名的喜欢acm选手, 并且北航的夏令营是不允许北航本科的同学参加的, 到了预推免阶段就基本都是北航本科的神仙打架, 所以北航一直是我夏令营的第一目标. 但是当时北航的入营结果还没出来, 作为保研弱势群体, 我还不敢奢求能再入什么营了, 而且即使能入营时间也有可能不冲突, 而且即使时间冲突了也大概率可以双开, 不会说真的两个两边都不能翘的东西撞在一起的.</p>\n<p>事实证明, 我低估了事情的复杂性. 最终, 我入了北航, 并且北航时间和中山的冲突了, 并且, 中山的机试和北韩的双机位测试时间冲突了. 我本以为问题不大, 大不了双机位测试调调时间, 或者中山机试光速ak下播. 然而, 中山可能是故意的, 时间放在了7号上午9点到12点, 并且 不可以提前交卷 . 而北航那边说的也很绝, 说双机位测试如果不参加, 就视为放弃入营资格:</p>\n<p><img src=\"/img//baoyan/1657008326-237856-image.jpeg\" alt=\"\"></p>\n<p>没办法, 只能放弃中山了. 可是中山群里早就说要放弃入营的尽早放弃, 现在机试的账号密码都发给我了, 今天上午中山的监考都联系我了, 跟我约好了面试测试时间.</p>\n<p><img src=\"/img//baoyan/1657008467-146891-image.jpeg\" alt=\"\"></p>\n<p>正在我进退两难的时候, 地铁到站了, 我又要去处理我上次出地铁的时候Apple Watch没电了导致我现在手表上的长安通还处于未出站的状态的问题, 处理完这个问题再接着进退两难.</p>\n<p>这时, 中山的一个叫做考务助理的人来找我:</p>\n<p><img src=\"/img//baoyan/1657008595-400801-image.jpeg\" alt=\"\"></p>\n<p>看到这个, 👴就想起来前两天👴花了23大洋在顺丰寄了个特快把材料寄过去, 结果还没送到, 气不打一出来.</p>\n<p><img src=\"/img//baoyan/1657009187-761246-img-5933.jpeg\" alt=\"\"></p>\n<p>这时候👴急中生智, 想着能不能借着这个机会编个理由, 比如中午有火车, 把夏令营给推脱掉, 正好借着这个机会营造出一种“哎呀我本来是想参加机试的而且我本来还有事情克服了各种困难想要参加机试结果现在还整出来材料没寄过去这一出我要参加的话不仅麻烦自己还要麻烦您老人家所以我干脆不参加算了都怪顺丰呜呜呜”的感觉.</p>\n<p><img src=\"/img//baoyan/1657009284-7467-image.jpeg\" alt=\"\"></p>\n<p>没想到那边答应的还算爽快.</p>\n<p>现在就算是把中山也放弃了, 还是挺不舍的, 虽然可能大概率不会去广州那边, 但是中山有个天河二号, 那边搞超算衍生出来的方向的老师还是很多的, 而且夏令营系统做的也很好, 比北邮那个点任何一个按钮都有50%的几率进入到asp.net的错误页面每次报名都是一个马尔可夫过程的系统好多了.</p>\n<p>18级的一个学长跟我说, 夏令营面试最好是从最菜的学校往上面试, 这样自信也会越来越强, 但是经过这样一折腾, 我的第一个面试就是北航了, 没有一个学校供我练手了. 可能这就是夏令营要寄的预兆吧.</p>\n<h2 id=\"7-8-大寄-写于7月8日\"><a href=\"#7-8-大寄-写于7月8日\" class=\"headerlink\" title=\"7.8 大寄 (写于7月8日)\"></a>7.8 大寄 (写于7月8日)</h2>\n<p>今天是北航的机试. 按理说我是可以不参加的. 北航的机试是可以用CSP的分数折算的. 按理说, CSP的累计排名前10%折算就不亏. 但是折算之后具体多少分还是要在所有要求折算的人中按照累计排名来看. 但是北航有个特殊的要求, CSP报名的时候选的那个语言必须是C/C++, 不能选择ALL. 我虽然每次CSP都是只用C++, 但是我最高的一次330分(累计排名1.9%)是选了ALL, 选C++的只有一次290分(那次比较难, 单次排名2%, 但是累计排名是在所有场次里排名, 只有4.6%).\n按理说, 如果我能够用330分抵机试, 那我将绝杀, 大概率是满分. 但是用290分可能有那么一点几率不是满分, 但是即使不是满分, 估计也差不了几分. 但是我想到前段时间学长劝我的, 说我这情况可以直接去考机试, 拿个满分, 这样比较稳妥一点. 北航是很看重机试的, 其他学校都说机试成绩仅供参考, 但是北航明确说了机试成绩占50%. 北航历年的题目也不难, 满分问题不大. 我去看了一下往年题, 好像难度确实不大, 满分应该十拿九稳.\n跟我类似情况的还有我的两个朋友, 一个是ACM区域赛银, 一个是ACM区域赛金, 他们是完全没有CSP的C++成绩, 只有ALL的成绩. 我是有一次C++的成绩, 但是我怕我不能满分, 所以我们三个都选择了参加机试. (尽管我们所有的CSP全部都只用了C++)\n于是今天就去参加了机试, 机试有两题, 时间两小时, oi赛制. 具体过程就不说了, 只能说是大寄. 两道题全部都是巨大模拟题, 各种小情况贼恶心, 我写完第一题就已经过了一个小时多, 第二题思考了一段时间, 挣扎了一段时间, 最后还是觉得不可能写得完剩下这点时间.\n考完我觉得我寄了, 我去找那位银牌同学说, “我只做了一题, 我寄了”. 那位银牌同学说他也只做了一题.\n我们聊了一会, 过一会那位金牌同学跟我私聊发了四个字:</p>\n<p><img src=\"/img//baoyan/1657272510-873749-image.jpeg\" alt=\"\"></p>\n<p>哈哈, 他也只做了一题.\n我去绿裙里看了一眼, 好像还有不少acm金出来说自己只写了一题.\n今天的总体评价是, 真不如拿csp抵了, 290就290, 不能满分就不能满分, 我现在还在担心我能不能到60分.\n麻了, 今天晚上出评测结果, 我都不知道我能不能进面试.</p>\n<p>我为什么不用csp抵了.</p>\n<p>我还是低估了夏令营折磨我的程度, 过去一点时间每天处理完各种事情就什么都不想干了, 现在夏令营的面试应该都结束了, 凭回忆更新一下吧.</p>\n<h2 id=\"7-9-北航面试-写于7月20日\"><a href=\"#7-9-北航面试-写于7月20日\" class=\"headerlink\" title=\"7.9 北航面试 (写于7月20日)\"></a>7.9 北航面试 (写于7月20日)</h2>\n<p>昨天晚上收到了机试合格的通知, 不过今年buaa好像机试没刷人, 往年都是至少做一题才能进面试的, 今年好多机试0分的进了面试, 保研名场面+1.\n北航发了个面试的顺序表, 一共有十几个组并行. 我是第四组的第7位. 往年说这个面试顺序是反映了机试排名的, 但是今年我调查了几个, 好像并没有什么规律. 邮件里说每一位同学面试时间大概是20分钟, 第一位同学8:30开始, 我算了一下我应该是10:50面试, 邮件里说提前十分钟过去就行, 我就一直准备十点四十再进会议.\n九点四十我收到了一个电话, 说面试快到我了, 让我进会议, 给我一个措手不及, 加了会议, 结果等到10:20才让我进.\n看群里先面试的说北航的专业课问的很多, 出来的一个个都愁眉苦脸的. 也做好了心理准备.</p>\n<p>面试上来问了俩离散数学的问题, 不过很简单, 然后让我设计一个算法去生成一个集合的幂集. 我本来说可以直接枚举二进制, 从0到 <svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.176ex\" height=\"1.714ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -675.5 2729.7 757.5\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"MJX-1-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><path id=\"MJX-1-TEX-I-1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path><path id=\"MJX-1-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"></path><path id=\"MJX-1-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><use data-c=\"32\" xlink:href=\"#MJX-1-TEX-N-32\"></use></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><use data-c=\"1D45B\" xlink:href=\"#MJX-1-TEX-I-1D45B\"></use></g></g><g data-mml-node=\"mo\" transform=\"translate(1229.5,0)\"><use data-c=\"2212\" xlink:href=\"#MJX-1-TEX-N-2212\"></use></g><g data-mml-node=\"mn\" transform=\"translate(2229.7,0)\"><use data-c=\"31\" xlink:href=\"#MJX-1-TEX-N-31\"></use></g></g></g></svg>, 每一位代表这个元素是否出现就行了. 但是很明显他好像没听懂, 问我能不能换个方法, 我又说了递归的做法他才满意.</p>\n<p>然后是数学, 一个老师问我线性无关和矩阵相似的定义. 也挺简单的.</p>\n<p>然后让我介绍了一下我的项目, 就是Raft上的KV存储服务, 问我Raft是怎么保证分布式一致性的, 我讲了半天log是啥. 然后另一个老师说看你这个log讲的挺好, 要我介绍一下数据库的log. 我也不太懂他让我介绍啥, 我就说我的上层其实也是一个KV数据库, 介绍了一下我上层的KV服务怎么和Raft层通过log交互的. 他说我回答的方向不太对, 但是时间差不多了, 就换了个人问我经典问题:“你为什么想来北航啊”. 我吹了吹北航就结束了.</p>\n<p>结束了之后去帮棒子做饭, 做的咖喱鸡🍛, 但是做到一半想起来我有上交的双机位测试, 一点开始, 我又赶紧爬过去进会议测试了一下.</p>\n<p>晚上出了优营和候补, 大寄, 进候补了. 虽然按照往年的情况我是能在后期被录取的, 但是也不是很敢赌, 而且进去估计也都是坑导. 我很确定是傻逼机试的问题, 我看到候补前面的两名是一个我认识的金牌👴, 一问发现他跟我一样的情况, csp怕不能满分然后参加了他那个傻逼机试.</p>\n<p>当天晚上还挺郁闷的, 半夜拉着99和rx出去陪我吃了顿海底捞.</p>\n<h2 id=\"7-10-玉玉-写于7月21日\"><a href=\"#7-10-玉玉-写于7月21日\" class=\"headerlink\" title=\"7.10 玉玉 (写于7月21日)\"></a>7.10 玉玉 (写于7月21日)</h2>\n<p>9号晚上九点多出的门, 我本来想着10点海底捞就能有6.9折. 但是走到一半才想起来今天是周六, 要到12点之后才能6.9折. 我们三个在高新万达的门口坐了一个半小时, 等到十二点才进海底捞的.</p>\n<p>吃完海底捞我们三个看了一下骑个车也就15公里就到西电了, 上次我们去阳光天地骑车过去都12公里了, 半夜打车还贵, 我们就决定骑车回去. 三个人只有rx的iPhone 13 Pro电比较多, 我和99的iPhone 12和11电池都比较垃圾, 所以决定让rx看着导航走. 不过因为rx错过了一个很隐蔽的路口, 又不敢逆行骑回去,  就把整个街区都绕了一遍才绕过立交桥. 折腾到3点多才回去.</p>\n<p>起来之后发现北邮是11号自我介绍, 然后还要做项目, 15号还要验收项目, 15号本来还有上科大的面试, 心情本来就不好的我直接选择了放弃北邮. 这样11号就只有上交的机试了.</p>\n<p>上交软院的机试很神必, 需要连上上交的vpn, 然后rdp上他给每一个人开的windows服务器上写代码. 环境的话他让提前几天连上去自己配, 允许下载任何软件和电子资料, 但是机试的时候会断网. 之前上交软的机试一大特点就是会要求你写GUI程序, 但是今年明确说明了不会考察GUI, 我也就没去准备. 环境我也就装了个CLion, PyCharm, 下了一个OiWiki的pdf版.</p>\n<h2 id=\"7-11-上交软院机试-写于7月21日\"><a href=\"#7-11-上交软院机试-写于7月21日\" class=\"headerlink\" title=\"7.11 上交软院机试 (写于7月21日)\"></a>7.11 上交软院机试 (写于7月21日)</h2>\n<p>下午三点开始机试, 时长3个小时. 但是有人一直连不上vpn, 等到四点半才开始, 这可能也是一轮筛选吧.</p>\n<p>上交果然是上交, 机试让3小时手撸随机森林. 邮件里说的60分才能进入面试, 评分是按照模块白盒给分. 比如统计训练集里的target label有多少个0和1就有10分了. 然后使用基尼系数实现每一个节点的特征选取, 建立出决策树后输出这个决策树的后序遍历, 然后在测试集上测试, 输出正确率. 这样才实现了60分的功能, 剩下40分其中有10分是代码规范和注释分, 5分是通过他的所有测试点, 15分是使用三个决策树实现随机森林, 10分是微调让正确率尽量高.</p>\n<p>我最后实现了60分的功能, 下一个15分的随机森林其实也不是很复杂了, 但是时间不够, 而且在写前面的代码的时候并没有考虑后面的功能的实现, 导致写这一步的时候需要改一下之前函数所传递的参数, 然后差一点点没写完. 功能分已经有60分, 就算我的代码写的再烂, 代码规范一分都不给我, 还没有通过所有的测试点, 我也能拿到60分, 所以机试完我也不是很紧张.</p>\n<p>上交软院的面试是很有特色的. 他分了5个方向, 并且在机试前就让所有人选择方向, 面试时就去面试对应的方向. 作为做梦都想去IPADS实验室的我, 当然直接选择了IPADS方向.</p>\n<p><img src=\"/img//baoyan/Untitled.jpeg\" alt=\"Untitled\"></p>\n<p>本来说的机试前就要截止, 但是9号又改成了12号晚上之前都行, 可能是有的方向去的人太少了吧.</p>\n<p>上交软院的另一个特色时, 他会在入营的时候就附赠所有方向的指定论文, 每个人选择一个方向的一篇论文去精读, 面试的时候几乎所有的时间都在问论文里的问题. 我前一段时间都在忙其他夏令营, 而且IPADS给了十几篇论文, 所以前面几天在论文上的进展就只有换了好几篇论文之后最终选定一篇论文.</p>\n<p>13号就面试了, 我11号晚上才算是开始认真看了论文. 因为之前有过读论文的经验, 所以看论文还算顺利, 我选的论文是一篇20页的双栏, 这在系统领域也不算是很长了. 当然跟AI领域的论文相比算很长的了.</p>\n<p>12号一天都是上交的宣讲, 我一直在读论文, 所以没去听. 到了傍晚上交机试结果还没出, 有点心急, 这时候突然收到一个邮件:</p>\n<p><img src=\"/img//baoyan/Untitled1.jpeg\" alt=\"Untitled\"></p>\n<p>挺离谱的, 我看到很遗憾的时候我以为我上交论文白看了, 结果仔细一看是南大的. 全世界都知道你他妈面试都面试完了, 你才给我发邮件说我初审挂了, 真绝绝子.</p>\n<p>论文看到Evaluation就没再看了, 仔细整理了一下前面可能会问到的问题. 晚上八点终于收到了进面试的邮件. 离谱的是他邮件里不仅没有说每个人的面试时间, 甚至连顺序都要明天早上七点半爬起来看.</p>\n<p><img src=\"/img//baoyan/Untitled2.jpeg\" alt=\"Untitled\"></p>\n<p>收到邮件之后草草做了个自我介绍ppt, 然后把论文又梳理了一遍就睡觉去了.</p>\n<h2 id=\"7-13-IPADS面试-写于7月24日\"><a href=\"#7-13-IPADS面试-写于7月24日\" class=\"headerlink\" title=\"7.13 IPADS面试 (写于7月24日)\"></a>7.13 IPADS面试 (写于7月24日)</h2>\n<p>早上七点半的闹铃, 伴随着经典的雷达铃声我火速进了腾讯会议看面试顺序. 可惜我进去的时候会议公告开始空空如也. 等到七点五十多还是没有消息, 八点就开始第一个人的面试, 我在想到底是哪个倒霉蛋会是第一个面试. 过了两分钟看到绿裙里有人说名单出来了, 但是我的腾讯会议好像坏了, 收不到消息, 我就找了个群友要了一份顺序名单, 还好, 一共35个人左右, 我在第17位. 如果每一个人二十分钟的话, 我应该是一点二十开始面试, 听说中午还要休息一段时间, 如果是休息一小时的话, 应该就是两点二十开始面试. 于是我又躺床上了一会, 然后爬起来论文, 准备自我介绍之类的.</p>\n<p>十一点多点了份摇滚炒鸡, 等到快一点了还没到, 有点害怕他们不午休或者午休时间没这么长或者有人放弃面试导致我提前面试, 所以已经做好了不吃午饭的准备. 没一会就到了, 光速把饭吃完就布置双机位之类的了. 一点四五十的时候我进去问了一下面到哪了, 发现再过一个就是我了, 就感觉又把英语自我介绍, 论文里的那些问题又看了一遍.</p>\n<p>两点二十我准时被放进了会议室. IPADS的摄像头感觉像挂在了天花板的角落上, 能看到整个大会议室, 但是看不清人脸, 所以刚开始感觉压迫感也没那么强.</p>\n<p>首先是邮件里就提到的自我介绍, 五分钟的ppt自我介绍. 在自我介绍之前, 一个单独坐在一边的老师问了我选择了哪片论文. 我主要介绍了我的两个项目. 自我介绍完后, 那个老师说:“好的, 非常好, 下面我们来探讨一下你选择的这篇论文吧.” 然后大的就来了.</p>\n<p>他首先问了大概四五个论文主体部分就已经介绍的一些实现, 因为这些都是论文的核心, 所以我应该基本都答上来了. 然后开始问一些至少在我看的论文的部分里面没有出现过的拓展性的问题, 很显然, 对于一个理解论文在说什么都已经拼尽全力的我来说, 这种问题还是太过超前了点. 他大概问了三四个这样的问题, 我基本都在全程口胡, 他的反应也都是一样的, 所以我也不知道我口胡的到底有多少是对的. 然后他还想问, 旁边一个老师提醒他到了英语考核时间了, 我随便说了几句就结束了. 然后刚刚那位老师又开始了:“还有两分钟, 我再问你一个问题..”. 然后让我把我的ppt翻到我的MapReduce系统那一页, 问了个我不是很能理解他的意思的问题, 我一般遇到这样的情况都是先用自己的语言复述一下那个问题, 不管我能不能听得懂, 然后说了句我觉得这个问题有问题的地方, 他说不会有这个问题, 虽然我还是没懂, 但我又复述了一遍问题, 他说对, 你可以这样理解, 然后旁边的老师提醒他时间到了, 该下一个了, 别问了, 然后才让我下播.</p>\n<p>总之, 面试虽然挺寄的, 但是见识到IPADS的面试水平也是死而无憾了, 专业问题从项目到论文全是那一个老师在问, 而且不像某些学校会一你一些很具体还不重要的早就忘掉的实现细节, 你不记得就说你准备不充分, IPADS的问题都是很合理的, 会给你一个具体的情境, 让你意识到这是真的会遇到的问题, 然后让你提出你的解决方法, 可能这就是IPADS吧.</p>\n<h2 id=\"7-14-计算所面试-上科大宣讲-写于7月26日\"><a href=\"#7-14-计算所面试-上科大宣讲-写于7月26日\" class=\"headerlink\" title=\"7.14 计算所面试&amp;上科大宣讲 (写于7月26日)\"></a>7.14 计算所面试&amp;上科大宣讲 (写于7月26日)</h2>\n<p>7月12日的上午, 就是上交宣讲的那一天, 我收到了一个来自北京的电话. 他告诉我是计算所的, 问我明天(7月13日)有没有时间面试. 我计算所报的是一个搞存储的组, 分布式存储, NVM之类的东西. 本来我以为只能13日面试, 我就说你先别急, 我过一会看看13号啥时候有时间, 确定好了短信发给你, 他说行. 其实我是想等上交的面试时间出来, 但上交不给面子, 一直等到晚上五六点都没发通知, 我就短信问他能不能14号面试, 他说可以. 事实证明我没有继续等下去是正确的, 上交在第二天面试开始前五分钟才把顺序发出来, 我的腾讯会议还没收到. 最终时间定在了14日上午的10点半.</p>\n<p>10点半, 他准时打电话告诉我说可以进入腾讯会议了. 这个应该是这个组的单独面试, 因为会议里就两个人, 还不用开摄像头, 而且会议是刚建的, 可能这个点面试的就我一个人.</p>\n<p>首先是自我介绍, 然后他开始问我操作系统的问题. 第一个问题是线程切换的时候要干什么. 我随便说了说什么保存现场之类的. 他问我保存现场的现场有哪些, 我说就是寄存器之类的, 还有栈上的局部变量啥的, 这时候我突然意识到我在说什么勾八, 刚反应过来我说了什么不得了的事情的时候那边就问栈上局部变量也是? 我连忙说没有没有, 说错了. 这可能注定了我这场面试会寄.</p>\n<p>之后问了计网, 数据结构, 操作系统那些东西, 感觉答上来的有七八十吧, 有些东西他说的我都没听说过, 就直接说不会了. 最后要开共享屏幕打代码, 感觉是标准的考研或者找工作的那种题目, 我空间复杂度多了个系数, 他的答案只需要一个哈希表, 我开了两个. 然后面试就结束了, 一共四十分钟.</p>\n<p>过了两三天计算所的入营名单出来了, 没有👴, 👴去问了一下那个联系我面试的, 他说没入营就是寄了, 那就寄了.</p>\n<h2 id=\"7-15-上科大面试-写于10月15日\"><a href=\"#7-15-上科大面试-写于10月15日\" class=\"headerlink\" title=\"7.15 上科大面试 (写于10月15日)\"></a>7.15 上科大面试 (写于10月15日)</h2>\n<p>今天rx让我给他bbs发的新帖点赞, 我才想起来我还有个坑没填, 保研都结束了, 慢慢填吧.</p>\n<p>到了👴最喜欢的上科大的面试. 上科大一直是👴好感度很高的一个学校, 师资力量巨强, 如果确定走科研的话来这里的强组不仅能享受到一些巨nb的老师的指导, 也能把上科大当作跳板去润国外读phd, 上科大的title申国外phd的水平已经能到华五的级别了. 而且宿舍和校园环境也是国内第一梯队的, 比西电好了不知道多少倍. 上科大报名和面试是分组进行的, 👴报的是系统与安全中心, 面试的也都是搞系统或者安全的.</p>\n<p>👴上科大面试的过程还是很寄的. 首先👴一进去就看到了👴报的第一志愿的老师. 这个老师首先问了我一个很简单的问题: 给你一个硬币, 你可以抛他, 每次都是等概率的落下正反面, 怎么利用这个硬币在四个选择中等概率的选择一个. 这个问题当然很简单, 我甚至以为这个面试就这么简单. 然后这个老师又问, 那变成三个选择呢? 👴当时就不太会了, 不过👴大概说了下思路, 口胡了几句.</p>\n<p>然后另一个老师问我计网的问题, 就是TCP/UDP, 流量控制, 拥塞控制之类的, 这些都很简单.</p>\n<p>然后第三个老师说, 看我是打acm的, 就问我个数学题吧. 我当时就想我tm虽然是打acm的但是👴最不会的就是数学而且刚刚那人已经问我过数学题了你怎么还问没活整可以不问可以咬个打火机. 问了个概率论智商题, 👴吭哧了半天唯一进展就是我说可以用递推. 然后面试就结束了.</p>\n<p>👴面试完觉得自己铁寄的, 没想到过两天就给👴发优营通知了, 还是学硕. 你们是有多缺人啊.</p>\n<p>👴本来不想联系老师的, 因为感觉👴去上科大的概率不大, 但是八月份的时候夏令营都结束了, 👴还是只有上科大一个offer, 就去联系了个老师. 那老师跟我聊了四五十分钟, 最后跟我说, 我对你的印象还是很正面的, 但是保研还都有不确定性, 我现在也不敢说我不要你或者我要你… 反正就是养鱼, 我也没管过了.</p>\n<h2 id=\"7-20-软件所面试-写于10月15日\"><a href=\"#7-20-软件所面试-写于10月15日\" class=\"headerlink\" title=\"7.20 软件所面试 (写于10月15日)\"></a>7.20 软件所面试 (写于10月15日)</h2>\n<p>这地方之前还是挺想去的, 毕竟听说是中科院title, 而且实力很强, 说跟华五下游一个水平balabala…</p>\n<p>但是后来因为种种原因不是很想去了, 本着自己大概率不去我就不耽误人家老师的心态, 我也就没联系什么老师.</p>\n<p>软件所也是报到实验室的, 面试分实验室进行. 我报的并行计算实验室. 这个实验室先有一个笔试, 微信群里发题, 然后开摄像头写好发给老师. 笔试内容就是高性能计算那一套, 不过都是很基础的, 基本都在考cache friendly的东西.</p>\n<p>面试是属实绷不住, 他面试分成了三天, 五个半天, 每半天有十个人左右, 👴有幸成为了第一个半天的第一位. 进去之后纯闲聊, 问我读不读博, 我说我有读博的想法, 但是想先读硕士感受一下科研, 我说我想研一体验科研, 然后决定转不转博. 然后另一个老师说, 你们研一都在雁栖湖, 应该是不方便做科研的. 然后又另一个老师说, 虽然你们在雁栖湖, 但是有很多同学还是研一甚至大四就来做科研的. 你要是来软件所的话你可以提前进组. 整个面试问我最有技术含量的问题就是问西电微机原理学的汇编是x86的还是RISC-V的.</p>\n<p>面试完过几天有个软件所的老师给我打电话, 说他是搞模式识别和区块链的, 问我愿不愿意去. 因为这个跟我想做的方向差距实在太大, 就给拒了. 然后软件所的优营果然没有我, 这玩意纯看老师.</p>\n<p>至此, 夏令营环节全都结束了.</p>\n<h2 id=\"预推免-写于1月24日\"><a href=\"#预推免-写于1月24日\" class=\"headerlink\" title=\"预推免 (写于1月24日)\"></a>预推免 (写于1月24日)</h2>\n<p>本以为预推免是一场恶战, 没想到就这样草草结束了.</p>\n<p>预推免我也是海投, 但是说是海投, 其实心里也基本做好了去上科大的准备了.</p>\n<p>预推免最终入营了的也只有中山和同济. 本来夏令营极限🐦中山的操作让我以为他不会放我入预推免了, 没想到他还是愿意再给我一次机会, 他真的我哭死.</p>\n<h2 id=\"中山机试-面试-写于1月24日\"><a href=\"#中山机试-面试-写于1月24日\" class=\"headerlink\" title=\"中山机试&amp;面试 (写于1月24日)\"></a>中山机试&amp;面试 (写于1月24日)</h2>\n<p>中山的机试还是很简单快乐的, 一共是10道题目, 考得东西也很广. 前面三道考的是c++面向对象相关的东西, 好像有几层多继承下面的构造函数的调用顺序, 虚函数, 多态之类的. 但是因为都是提交代码题, 并且没有罚时, 当场出结果, 所以我感觉即使不太会这些东西, 也总能试出来. 后面都是一些简单的小算法/模拟题. 最后一道算法题感觉还是比较难的, 我不会做, 而且当时评测也卡了, 想着900分应该稳了我就没钻研下去.</p>\n<p>这里就不得不说这个oj设计的很多不合理的地方. 他的逻辑是当上一次评测结果没有出来时就不能进行下一次提交, 这就导致在卡评测的时候即使你发现了代码的问题也没办法交了. 并且这次机试一共三小时, 评测机听说从结束前一个多小时就开始卡, 幸亏我早早把前面的题都写了.</p>\n<p>还有一个很不合理的地方就是评测结果里可以看到输入数据和输出数据! 虽然他很多题目都是每次提交随机生成数据(虽然这样还是不是很合理), 但是有些题还是固定了输入输出数据的. 比如这次机试我不会的这题, 输出数据是完全可以看到的, 我也完全可以通过多次提交把数据全骗出来拿个满分. 但是一向做事光明磊落要求问心无愧的我肯定是不会干这种事的, 即使这样可能会让我吃亏.</p>\n<p>中山对我最大的吸引力就是拥有一个依托天河二号超算建立的组, 或者说是国家超级计算广州中心, 我能去的学校里应该只有中山能有一个规模不小的研究这些东西的组了.</p>\n<p>中山面试也比较轻松愉快, 感觉唯一正经的问题就是让我解释极大似然估计了. 之后都是一些聊家常的问题. “我看你在分布式系统方面做了很多项目, 你了解分布式方向有哪些期刊和会议吗”之类的.</p>\n<p>这时候还发生了一件很尴尬的事情, 先是一个老师A说现在分布式和高性能计算都跟AI相结合, 正好我的实习经历也是这方面, 我就顺着讲了讲我的实习, 然后A老师问我“你知道中山有哪些组在研究这些吗”, 我确实不清楚, 但是我觉得大概率在超算组, 我就说了. 这时候换了个老师B来介绍了两句超算组. 我怀疑是A老师是研究这个的, 但是他不是超算组的, 有点尴尬.</p>\n<p>面试结束后就有个老师加了我微信, 但是因为方向感觉不是很相合, 就没有给肯定的答复(我怀疑这位就是A老师).</p>\n<p>中山因为每年都被鸽穿, 所以如果真的想去中山, 只要入了夏令营或者预推免就一定可以去.</p>\n<p>之后只有一个同济的面试了, 但是随着99的去向越来越确定, 去同济我们俩肯定是要异地了. 并且我把同济的计科专业的老师名单翻了三遍, 没找到一个搞system相关的老师, 就进了群之后又退了.</p>\n<p>所以这时候我本应该可以松一口气迎接养老生活的, 但没想到恶战刚刚开始.</p>\n<p>面试刚结束不久我就联系了一位超算组的老师, 这老师估计也很忙, 邮件里虽然给了偏肯定的答复, 并且也让我加了微信, 但是加了微信之后两天没理我. 我也是不太懂咋回事, 后来终于给我打了一个电话, 意思是他名下没名额了, 但是他们组都是一起培养, 我大概率可以找到其他名额多的老师要到名额, 最后回来大概率还是他来带. 然后我就开始了漫长的找名额之路, 这时候已经是9月27日下午了.</p>\n<p>这位老师首先给我指定一位老师, 让我问问他有没有名额. 我给那位老师发了邮件之后, 并没有理我.</p>\n<p>然后到了9月28的上午九点, 这时候👴收到了北航的电话, 告诉👴北航候补到了. 其实虽然按理说我这个名次北航能候补到是意料之中的, 但是还没开系统, 甚至九点就候补到了, 这个是真的没想到. 虽然我早就想过如果北航候补到我应该是不会去的, 一方面因为我以后有出国的打算, 北航因为是10043, 进去之后大概率是告别出国了, 以后可能连外企都不好进, 另一方面还是担心跟99异地, 还有担心是怕候补到找不到好老师. 但是现在这个形势, 中山那边一直没有什么肯定的答复, 进去说不定跟哪个老师, 计算机评级A+的北航的offer只要我点同意就有, 说实话, 确实很心动.</p>\n<p>这时候我主动给加了微信的那个中山的老师打了个电话, 他说他指定的那个老师可能确实没有名额了, 然后我把我北航offer这个情况说了, 他说他觉得很大概率可以让我进他们组的, 即使现在找不到, 因为中山实际选老师在研一开学一段时间才选, 到时候说不定也是可以有名额的, 而且说超算组是个很大的组, 名额可以互相协调, 想要找到一个名额应该不难.</p>\n<p>这时候我也在积极的找北航的老师, 这个时间靠邮件肯定是来不及了, 我就找了一个夏令营录取北航已经联系好老师的朋友, 问问他们导还有没有名额. 我朋友直接把他导微信给我了, 我申请了之后, 也没有什么回信.</p>\n<p>总之, 这几个小时是我保研几个月里最煎熬的几个小时, 最终, 考虑了很多很多因素, 还是决定选了中山.</p>\n<p>之后, 已经录取中山拒绝北航之后, 我依然在紧张刺激的联系老师. 我几乎把组里所有老师都联系了一遍.</p>\n<p>下午两点多, 联系到了某位老师, 她说她有名额, 但是不知道是学硕还是专硕的. 我当时脑子没反应过来啥意思, 因为中山的录取规则是夏令营的最后一名&gt;预推免的第一名, 👴因为当时中山跟北航冲突了, 没参加夏令营. 虽然是预推免第6, 但是拿到学硕肯定是不可能的. 我以为她如果有学硕名额能给我换成学硕, 所以我回了句“学硕专硕无所谓”, 她可能以为我是学硕, 换成专硕也无所谓, 也给了肯定的答复, 就这样我误以为自己上岸了.</p>\n<p>过了一会, 她又发来邮件说她的名额是学硕名额, 这时候我意识到可能不是我想的那样, 我问了一下老师, 果然意思是只有学硕才能用这个名额. 这时候我又想到👴当时夏令营把中山鸽了的事, 心态有点崩.</p>\n<p>最终, 终于在晚上七点多找到一位大导手下还有名额, 这才算是真的上岸了.</p>\n<p>这时候, 白天加的那位北航的导师也加我微信了, 我跟他说我没去北航, 这位老师说我朋友告诉他了. 他还说中山超算很不错, 还给我推荐了几位老师, 感觉人非常好.</p>\n<p>最终, 我在中山这种夏令营最后一名大于预推免第一名的奇特制度下, 因为夏令营跟北航冲突放弃了中山, 预推免又去了中山, 最终在北航跟中山之间还选择了中山.</p>\n<p>我在保研系统里拒绝北航也截图了下来, 发给了几个朋友, 几个朋友都说这图帅.</p>\n<p>这个选择很难做, 我的选择也确实很大胆, 但是究竟哪个选择好呢, 可能谁都有自己的看法, 也可能谁也都不知道. 毕竟我没办法在928当天把自己fork一份出来看看以后两个我会咋样, 我只能像类似罗老师说的那样, 在我生命的每个阶段都选择了我相信的东西.</p>\n<p>人生有变, 世事无常. 可以说最后这个选择跟我在一年前的规划是完全不相符的. 不是说对自己的去向估计太低或者太高, 而是自己当时并不觉得自己会去一个离家这么远, 大概率不会一直生活下去的地方. 现在来看这个选择, 是那么的荒诞无奇又顺理成章, 而我只能感叹这几个小时是如此短暂, 短暂到我不敢相信我未来的人生就已经被这样, 被这几个小时决定了.</p>\n<p>高中的时候不懂事, 想让每次重要的选择都能准备充足, 做出最好的最正确的选择. 后来发现“好”和“正确”并没有什么严格的定义, 只需要每次选择能让自己不后悔就可以了. 现在觉得每次选择都不后悔也不容易, 只奢求以后再回来看这段至少现在我觉得非常重要的路的时候, 能感觉到“也无风雨也无晴”就行了.</p>\n","2addb585c96ab72b17c43b33049234474a2c91a1":"<p><img src=\"/img/understand-raft/raft.png\" alt=\"Untitled\"></p>\n<p>Understand the understandable consensus algorithm.</p>\n<p>直接介绍Raft的每一部分干什么, 然后直接告诉你这样是对的未免太无趣了, 不如来更深层次的观察一下Raft.</p>\n<p>这篇文章可以说是鸽了一年了, 一年前我在做6.824的lab的时候就觉得, 虽然我理解了raft每一步要干什么, 但是我不理解为什么要这样做, 或者如果不这样做会发生什么事情, 以及为什么这样做就可以保证强一致性.</p>\n<p>这几天终于有时间重新来整理一下, 重新仔细读一下raft的论文.</p>\n<!--more-->\n<p>Raft确实是一个非常漂亮的算法, 看似没什么关联的松散的几部分互相结合就组成了一个无懈可击的共识算法, 并且每一部分都非常的形象容易理解. 论文也强调了这个算法相对于paxos的更好的可理解性, 虽然最后用学生考试成绩来证明这一点看得我有点乐.</p>\n<p>Raft的很多操作其实是说不上道理的, 因为我认为这个算法更像是一个“构造性的算法”, 我们只需要关心构造出来之后正不正确, 而具体为什么要这样做, 其实是拿不出一个很能说服人的理由的. 就像几块互相依赖组成一个稳定结构的积木, 你无法说每一个积木为什么要这样摆放, 只能说现在这些积木处在一个稳定状态, 并且任何一个积木不这样摆放的话, 整个结构就会塌. 至于可不可以同时去修改这个结构的多个部分让他继续保持稳定, 如果有的话, 那这个可能就是一个新的共识算法了.</p>\n<h2 id=\"Raft保证的五点\"><a href=\"#Raft保证的五点\" class=\"headerlink\" title=\"Raft保证的五点\"></a>Raft保证的五点</h2>\n<p>先来复习一下Raft的投票规则, 这个规则是保证正确性的核心:</p>\n<p>voter只会投票给log至少跟自己up-to-date的candidate, 这个up-to-date的定义如下:</p>\n<ol>\n<li>最后一个log的term比自己的最后一个log的term要大, 或者</li>\n<li>这俩一样, 但是他log的长度比我的长.</li>\n</ol>\n<p>首先, Raft保证了这五点, 这五点是理解正确性的核心.</p>\n<ol>\n<li>Election Safety, 在一个term内, 最多只有一个leader.</li>\n<li>Leader Append-Only, leader只会添加log, 不会删除或者覆盖自己的log.</li>\n<li>Log Matching, 如果两个服务器的某一个log的index和term相同, 那他们之前的所有log都是相同的.</li>\n<li>Leader Completeness, 如果一个log在一个term内被commit了, 那么所有比这个term大的leader都一定有这个log.</li>\n<li>State Machine Safety, 如果一个log在一个index下被apply到了state machine, 那么其他所有服务器不会再这个index去apply其他的log.</li>\n</ol>\n<p>分别简单证明一下:</p>\n<ol>\n<li>这是因为一个candidate必须获得绝对多数票才能成为leader, 而一个server在一个term内只会投一个票.</li>\n<li>这个没啥要证明的. 所有有Leader的共识算法, Leader最终都会拥有所有需要被commit的log, 在一些算法中, 即使一个server没有全部被commit的log, 也有可能被选举为Leader. 但是这些算法在选举过程中, 或者之后的很短时间内都会拥有所有被commit的log. Raft不这样做, Raft保证只有拥有被commit的log的server才会被选举为Leader. 即, <strong>数据只会从Leader流向Follower, Leader不会删除或者复写自己之前的log</strong>.</li>\n<li>这个可以分成两个来讨论\n<ol>\n<li>如果某两个服务器某一个log的index和term相同, 那这两个log就一定相同(存储的命令).\n<ol>\n<li>这个是对的, 因为term相同就代表, 这条命令一定都是从这个term的唯一的leader那里拿来的. leader在同步log的时候, 一定会要求他们在同样的位置去记录这个log. 而这个leader把这个log同步给他们之后, 即使这个leader死了, 如果这个log还在, term没变, 那就一定是这个leader的衣钵, 如果这个index上的log被人改了, 那term一定会变.</li>\n</ol>\n</li>\n<li>如果两个服务器有两个log完全相同, 那他们之前的所有log都完全相同.\n<ol>\n<li>这个是由AppendEntries的操作来实现的: 一个Follower在收到AppendEntries请求的时候, 会检查请求中带有的prevLogIndex和prevLogTerm, 只有这两个跟自己的一样, 这个follower才会接受这些log. Follower接收这些log意味着至少从prevLogIndex开始到最后的log都跟Leader的一样. 然而prevLogIndex对应的那条log也是由AppendEntries得到的, 所以这其实是一个 <strong>数学归纳法</strong>, 结果就是每次成功AppendEntries之后Follower的所有log都跟Leader一样\n<ol>\n<li>上面说的是这两个服务器在这个log所在的term内都是Follower的情况, 即认为在这两个服务器上这个log一定都是通过AppendEntries得来的. 其实也有可能他们其中一个是Leader, 这个log是Leader自己放进去的, 不过这个Leader要想把log传递给其他人, 还是要进行AppendEntries, 所以不用单独考虑这种情况.</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>论文的5.4.3用反证法证明了. 后面仔细说.</li>\n<li>跟着4一起就证明了.</li>\n</ol>\n<h3 id=\"Leader-Completeness的证明\"><a href=\"#Leader-Completeness的证明\" class=\"headerlink\" title=\"Leader Completeness的证明\"></a>Leader Completeness的证明</h3>\n<p>使用反证法, 假设term T的时候commit了一个log, 但是在后来的某些term的leader中没有了, 假设第一个没有这个log的Term是U. U&gt;T.</p>\n<ol>\n<li>这个log一定是在U被选为leader之前就没有了, 因为他被选为leader后就不会更改自己的log.</li>\n<li>leaderT把这个log复制到了绝对多数的server上, U也必须要收到绝对多数的票才能成为Leader. 所以, 一定有一个server既收到了这个log, 又投票给了U. 这个voter是关键.</li>\n<li>这个voter一定是先收到包含这个log的AE才投票给U的, 因为如果他先收到了U的RequestVote, 他的term就会比T大, 会拒绝leaderT的AE.</li>\n<li>这个voter在U之前的所有term都保留着这个log(因为假设U是第一个没有这个log的term), 如果他是leader, 他不会删除自己的log, 如果他不是leader, 当时的leader也会有这个log(根据假设), 也不会把这个log删掉.</li>\n<li>voter投票给了U, 说明U的log肯定要up-to-date voter的log. (up-to-date的定义文中给出了, 即最后一个log的term的比他大, 或者最后一个log的term一样但是log比他长). 这样以下两个必定有一个是矛盾的.</li>\n<li>如果他们的lastTermId一样, 那就说明U的log要比voter的长, 但是如果U的log要比voter的长, U就一定要有voter的这个log. 不可能出现一个term里不同的server的log还不一样的, 因为AE同步的时候都是保证顺序一样的. 要不然你就没有, 你要是有顺序肯定就一样.</li>\n<li>如果U的lastTermId比voter的要大, 那么一定要比T大, 因为voter的lastTermId至少是T. 那么, 给U创建最后一个log的leader W一定会有这条关键的log, 因为假设的是U才是第一个没有这个log的leader. 那因为U最后一个log是W给的, 根据Log Matching Property, U一定有那条关键的log.</li>\n</ol>\n<p>证明很妙, 反证法上来给的条件“U是第一个没有这个log的server”很强, 证明中起到了关键的作用.</p>\n<p>用这个也能证明State Machine Safety, 这个就很容易理解了.</p>\n<h2 id=\"关于Figure-8\"><a href=\"#关于Figure-8\" class=\"headerlink\" title=\"关于Figure 8\"></a>关于Figure 8</h2>\n<p><img src=\"/img/understand-raft/figure8.png\" alt=\"Untitled\"></p>\n<p>这个图讲的是我是一个Leader, 即使一个log在我这看来确实有绝大多数server都有这个log, 但是这个logA是之前term产生的, 我还是不敢贸然commit这个logA. 因为我如果是刚上任, 根基不稳, 有些server还不知道改朝换代, 他们的term还没更新到我的term, 如果我和我让的几个人commit了, 然后我就驾崩了, 那些不知道改朝换代的人可能会成为跟我一样term或者甚至比我更小term的的candidate, 如果他们的term比现在这个logA的term大, 那那些刚刚commit这个logA的server会投票给他的, 他一上任如果没有这个logA就会把这个logA覆写掉的.</p>\n<p>在c图中, S1刚上任, 先把2给复制到S3, 然后收到log 4. 这时候如果S1贸然commit这个黄色的log2, 并且就死了, d图中S5赢得选举后就会把log2给干掉, 造成不一致.</p>\n<p>解决这个问题的就是新皇登基的时候不要上来就直接commit前朝的log, 要等自己的第一个log复制到大多数之后, 根基稳了之后, 连同着自己的第一个log一起再commit前朝的log.</p>\n<p>重点在于, 对于一个前朝的log, commit之后, 有这个log的人可能会投票给没有这个log的人, 因为这个log的term小. 但是对于现在的term的log, 把他传递给大多数server之后, 他们都不会投票给没有这个log的server, 就不会产生一个没有这个log的Leader.</p>\n<p>在没有把他传递给大多数的时候, 倒是有可能产生一个新Leader, 然后那个Leader的term更大, 并且收到了一些请求, 这样就能把复写之前term的log, 但是把他们传递给大多数之后, Leader就只会在这大多数里产生了.</p>\n<h2 id=\"关于AppendEntries的优化\"><a href=\"#关于AppendEntries的优化\" class=\"headerlink\" title=\"关于AppendEntries的优化\"></a>关于AppendEntries的优化</h2>\n<p>一个在log不一致的时候优化AppendEntries次数的方法是server在拒绝AppendEntries的时候附加两个信息: 本机上冲突的log的term和本机上这个term的第一个log的index. 这样leader在收到这个RPC的返回的时候, 就把这个server的nextIndex直接设置为返回的index-1.</p>\n<p>对于AppendEntries的优化, 其实无论怎么做都不会影响他的正确性, 比如上面这个优化, 这样设置nextIndex可能是不必要的, 即nextIndex往前移太多了, 但也可能是还不够的, 即这样做下一次follower收到这个AE的时候还是找不到匹配项, 导致还需要再一次AE. 但是无论怎么样, 正确性都是可以保证的, 往前移太多了只是传递的log多了一点, 往前移少了也只是再来几次AE而已. 具体还是RPC的次数和传递的log量的trade-off.</p>\n<p>论文里也提到, 他们在怀疑这样做的必要性, 因为出现不一致的情况不多, 但是每次RPC多两个参数是实打实的.</p>\n<h2 id=\"一些常见的简单问题\"><a href=\"#一些常见的简单问题\" class=\"headerlink\" title=\"一些常见的简单问题\"></a>一些常见的简单问题</h2>\n<h3 id=\"为什么不能是投票给最长的log-也就是投票的时候只看log长度\"><a href=\"#为什么不能是投票给最长的log-也就是投票的时候只看log长度\" class=\"headerlink\" title=\"为什么不能是投票给最长的log, 也就是投票的时候只看log长度:\"></a>为什么不能是投票给最长的log, 也就是投票的时候只看log长度:</h3>\n<!--code￼0-->\n<p>首先, 上述情况是完全可以发生的:</p>\n<ul>\n<li>三个服务器都达成了5的共识.</li>\n<li>网络问题, S1 term++=6,</li>\n<li>网络好了, S2 S3投票给S1, S1变成leader, 收到请求6</li>\n<li>还没发送AppendEntries, 网络又出问题, term++=7, 收到请求7</li>\n<li>网络好了, S1变成leader, 这时候因为S1变成的leader, 所以肯定有人给他投票, 既然给他投票, 就一定知道这时候的term是7.</li>\n<li>S1寄了, S2term++=8, 当选leader, 收到请求8, 成功发送AppendEntries, commit了8.</li>\n</ul>\n<p>这时候如果S1活了, 并且只看了log长度, 8就被覆盖掉了.</p>\n<h3 id=\"只选term最大的会出什么问题-为什么要比较最后一个log的term\"><a href=\"#只选term最大的会出什么问题-为什么要比较最后一个log的term\" class=\"headerlink\" title=\"只选term最大的会出什么问题, 为什么要比较最后一个log的term?\"></a>只选term最大的会出什么问题, 为什么要比较最后一个log的term?</h3>\n<p>term高可能只是自嗨行为, 一个server断网他能把自己的term刷的很大.</p>\n<p>最后一个log的term就不是自嗨就能拿到的了, 他证明了你要么是这个term的leader, 要么至少在这个term内跟leader取得了联系, 说明至少这个term之前commit的log他都有.(Leader Completeness)</p>\n","58768616ec24d1d3511a0062dd1bdef270491318":"<p>西安电子科技大学大四在读, 曾经oi人, 退役acm人.</p>\n<p>已推免到中山大学计算机学院.</p>\n<p>Loveliver/邦邦人, 主推穂乃果和ksm.</p>\n<p>脱单啦, 我女朋友 @ClaireEleanor99 最可爱啦.</p>\n"}